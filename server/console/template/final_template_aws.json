{
  "type": "Theia::Template",
  "title": "RapidCloud for AWS - Automation and Acceleration Framework",
  "footer": {
    "type": "Theia::Footer",
    "columns": [
      {
        "class": "text-muted text-start",
        "content": "Copyright \u00a9 2020-2023 <a href='https://www.kinect-consulting.com/' target='_blank'>Kinect Consulting, LLC</a>."
      },
      {
        "class": "text-muted text-start",
        "content": "<a href='https://rapid-cloud.io/documentation/' target='_blank'>Documentation</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://kinect-rapid-cloud.s3.amazonaws.com/docs/RapidCloud-Terms-of-Service.html' target='_blank'>Terms of Service</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://rapid-cloud.io/contact-us/' target='_blank'>Contact Us</a>"
      },
      {
        "class": "text-muted text-end",
        "content": "v1.7.10"
      }
    ]
  },
  "sections": [
    {
      "type": "Theia::Section",
      "label": "Home",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/house-solid.svg",
      "route": "home",
      "id": "home",
      "static": true,
      "enabled": true,
      "actions": [
        {
          "id": "dashboard",
          "type": "Theia::Dashboard",
          "label": "Dashboard",
          "rows": [
            {
              "columns": [
                {
                  "size": 12,
                  "panel": {
                    "type": "Theia::Panel::Markdown",
                    "title": "RapidCloud for AWS - Automation & Acceleration Framework",
                    "content": "RapidCloud is the answer to complexity of building cloud-native platforms on AWS. RapidCloud supports popular data, analytics, web and mobile use cases, which include: \n\n\n\n* Database and Data Warehouse migration to AWS\n\n* Ingestion of Relational, Semi-structured and Unstructured data\n\n* Real-time replication, CDC (Change Data Capture), ETL/ELT, Event streaming\n\n* Governance, Security, Compliance\n\n* Serverless, Containers, Web and Mobile Applications\n\n* Or any other use-case or application via RapidCloud <a href=\"https://rapid-cloud.io/custom-modules/\" target=\"_blank\">Custom Modules</a>\n\n\n\n### RapidCloud Conceptual Architecture\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/rapidcloud-conceptual.png?1\" alt=\"RapidCloud \" width=\"820\" />\n\n\n\n## Support\n\n\n\n* [Contact Us](https://www.kinect-consulting.com/contact-us/) or (305) 428-8255\n\n\n"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Settings",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/list-check-solid.svg",
      "route": "setup",
      "id": "setup",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Activation Information",
          "id": "activate",
          "module": "activate",
          "env_not_required": true,
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "activate",
              "title": "Activation Information",
              "stripe_enabled": true,
              "description_upgrade_dev": "<b>Upgrade to RapidCloud Premium:</b>&nbsp;&nbsp;<a href='https://buy.stripe.com/test_eVa6rBfaY1r33aE6op' target='_blank'>Annual Subscription</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://buy.stripe.com/test_9AQbLV8MAfhTh1u3cc' target='_blank'>Monthly Subscription</a>",
              "description_upgrade_live": "<b>Upgrade to RapidCloud Premium:</b>&nbsp;&nbsp;<a href='https://buy.stripe.com/28oeWw9n15au9EI3cc' target='_blank'>Annual Subscription</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://buy.stripe.com/aEU4hS0QvbyS7wA289' target='_blank'>Monthly Subscription</a>",
              "description": "",
              "datasource": "account_info?extra=true",
              "submit": "Activate",
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "activate",
                    "command": ""
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "email",
                  "label": "Email",
                  "help": "Enter your work email address",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Email is required"
                    },
                    {
                      "type": "Theia::Validation::Email",
                      "message": "Invalid email"
                    }
                  ],
                  "readonly_edit": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "tier",
                  "label": "Subscription Tier",
                  "help": "",
                  "readonly": "true",
                  "default": "1",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Basic (FREE)",
                      "value": "1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Premium",
                      "value": "2"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Kinect Consulting Team",
                      "value": "3"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Activate RapidCloud\n\n\n\n**Email**\n\n\n\nYour work email address\n"
        },
        {
          "type": "Theia::Action",
          "label": "Roles",
          "id": "access_create_role",
          "module": "access",
          "app_roles": "admin",
          "env_not_required": true,
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "access_create_role",
              "datasource": "roles?extra=true",
              "columns": [
                "name",
                "access_all",
                "access_description"
              ],
              "title": "Roles",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "access_create_role",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "access",
                    "command": "create_role"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Role Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "access_description",
                  "label": "Role Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "access_all",
                  "label": "Access to All RapidCloud Features",
                  "default": "granular",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "granular",
                      "value": "granular"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "read-only",
                      "value": "read-only"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "read-write",
                      "value": "read-write"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "none",
                      "value": "none"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 12
        },
        {
          "type": "Theia::Action",
          "label": "Users",
          "id": "users",
          "module": "access",
          "env_not_required": true,
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "users",
              "datasource": "account_users",
              "columns": [
                "access_email",
                "access_role",
                "ux_context",
                "status",
                "timestamp"
              ],
              "title": "Users",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Form",
              "id": "users",
              "title": "Assign Role",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Submit",
                  "command": {
                    "phase": "access",
                    "command": "assign_role"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "access_email",
                  "label": "User",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "access_role",
                  "label": "Role",
                  "help": "",
                  "datasource": "role_names_for_select?extra=true&module_name_arg=access",
                  "env_not_required": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "access_ux_context",
                  "label": "User Experience Context",
                  "help": "",
                  "default": "admin",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Admin (all features within currently assigned role)",
                      "value": "admin"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Engineer (non-admin features)",
                      "value": "engineer"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "User (non-engineer features)",
                      "value": "user"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 15
        },
        {
          "type": "Theia::Action",
          "label": "Environments",
          "id": "environments",
          "module": "init",
          "env_not_required": true,
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "environments",
              "datasource": "data?type=profile",
              "columns": [
                "name",
                "created_by",
                "shared",
                "account",
                "region",
                "vpc",
                "aws_profile",
                "timestamp"
              ],
              "title": "Environments",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "environments",
              "title": "Environment",
              "submit": "Submit",
              "allowMarkdown": true,
              "description": "<b><b><b><i>Create Cross-Account Role to allow RapidCloud access to your Environment's AWS Account, if you haven't done so already</i></b>. You only need one role per account. If you plan on creating multiple environments in the same account, then specify existing `Cross-Account Role ARN` in the form below. <a href='{{x_acct_role_cf_url}}' target='_blank'>Create Cross-Account Role</a>",
              "commands": [
                {
                  "label": "Submit",
                  "command": {
                    "phase": "init",
                    "command": "create-env"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Environment Name",
                  "help": "Environment name is comprised of {org}_{workload}_{environment}. For example: myorg_bitools_dev or abccorp_orders_test. Use three fields below.",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "client",
                  "label": "Company or organization name",
                  "help": "Enter your company or organization name (no spaces or special characters allowed)",
                  "inputType": "text",
                  "readonly_edit": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload",
                  "label": "Workload/Application",
                  "help": "Workload or Application Name (no spaces or special characters allowed)",
                  "inputType": "text",
                  "readonly_edit": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "env",
                  "cli_arg": "env_suffix",
                  "label": "Environment",
                  "help": "Enter Environment (e.g. dev|qa|uat|stg|prod)",
                  "inputType": "text",
                  "readonly_edit": true
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "shared",
                  "label": "Is this environment shared with other engineers?"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "shared_with",
                  "label": "Shared With",
                  "help": "",
                  "datasource": "users_for_select?extra=true",
                  "env_not_required": true,
                  "default": ""
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "aws_profile",
                  "label": "AWS Profile",
                  "help": "Select AWS Profile to allow RapidCloud access to your Environment's AWS Account",
                  "datasource": "cloud_profiles?cloud_arg=aws",
                  "env_not_required": true,
                  "disableControls": [
                    "x_acct_role_arn"
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "x_acct_role_arn",
                  "label": "Cross-Account Role ARN",
                  "help": "If `AWS Profile` is not available or not selected above, specify Cross-Account Role ARN to allow RapidCloud access to your Environment's AWS Account. To create a role, use the link at the top of this form",
                  "env_not_required": true,
                  "disableControls": [
                    "aws_profile"
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "vpc",
                  "label": "VPC",
                  "help": "AWS VPC",
                  "inputType": "text",
                  "env_not_required": true,
                  "readonly_edit": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "region",
                  "label": "Region",
                  "help": "e.g us-east-1, us-east-2",
                  "readonly_edit": true,
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "US East (N. Virginia): us-east-1",
                      "value": "us-east-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "US East (Ohio): us-east-2",
                      "value": "us-east-2"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "US West (N. California): us-west-1",
                      "value": "us-west-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "US West (Oregon): us-west-2",
                      "value": "us-west-2"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Canada (Central): ca-central-1",
                      "value": "ca-central-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "South America (S\u00e3o Paulo): sa-east-1",
                      "value": "sa-east-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AWS GovCloud (US-East): us-gov-east-1",
                      "value": "us-gov-east-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AWS GovCloud (US): us-gov-west-1",
                      "value": "us-gov-west-1"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ssh_pub_key",
                  "cli_arg": "ssh-pub-key",
                  "label": "SSH Public Key",
                  "help": "SSH Public Key will be used to access EMR clusters through SSH (if applicable)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ips_for_ssh",
                  "label": "Allowed IP Addresses",
                  "help": "Comma separated list of IP Addresses to be allowed SSH Access to EMR Cluster"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "vpn_only",
                  "label": "Using VPN to connect to AWS"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Environments\n\n\n\nAn environment is a specific AWS workload or application, with its own business logic, security, data catalog, data lake, databases, compute services and other cloud resources.\n\n\n\nYou can create as many environments as you want, in any AWS Account, region and VPC.\n\n\n\nEach environment is completely isolated and managed separately from other environments.\n\n\n\nEnvironment name is comprised of  {`org`}\\_{`workload`}\\_{`environment`}. for example: `kinect_bitools_dev` or `abccorp_orders_test`\n\n\n\n**Company or organization**\n\n\n\nEnter your company or organization name without spaces or special characters.\n\n\n\n**Workload/Application**\n\n\n\nWorkload Name without spaces or special characters. This should uniquely identify the type of workload or application you're creating this environment for.\n\n\n\n**Environment**\n\n\n\nThis is a specific instance of the environment (e.g. dev|qa|uat|stg|prod)\n\n\n\n**AWS Profile**\n\n\n\nSelect the name of AWS Profile that will allow RapidCloud access to your Environment's AWS account. AWS Profile must be previosely set up on the machine that hosts RapidCloud. \n\n\n\nRapidCloud will run `aws configure list-profiles` command to present available AWS Profiles. Please make sure AWS CLI is properly configured and use `aws configure` command to create your profile.\n\n\n\n**Cross-Account Role ARN**\n\n\n\nSpecify Cross-Account Role ARN that will allow RapidCloud access to your Environment's AWS Account.\n\n\n\n**VPC**\n\n\n\nAWS VPC ID where VPC specific resources will be created.\n\n\n\n**Region**\n\n\n\nAWS Region where region specific resources will be created.\n\n\n\n**SSH Public Key**\n\n\n\nSSH Public Key will be used to access EMR clusters through SSH. This is only applicable for workloads that require EMR.\n\n\n\n**Allowed IP Addresses**\n\n\n\nComma separated list of IP Addresses to be allowed SSH Access to EMR Cluster.\n\n\n\n**Are you using VPN to connect to your cloud account?**\n\n\n\nWe recommend always using VPN to connect to your cloud account.\n"
        },
        {
          "type": "Theia::Action",
          "label": "Start Subscription",
          "id": "subscribe",
          "module": "subscribe",
          "env_not_required": true,
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "subscribe",
              "title": "Start Subscription",
              "description": "",
              "submit": "Subscribe",
              "commands": [
                {
                  "label": "Subscribe",
                  "command": {
                    "phase": "subscribe",
                    "command": ""
                  }
                }
              ]
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Start Subscription",
          "id": "inprogress",
          "module": "inprogress",
          "env_not_required": true,
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "inprogress",
              "title": "Activation is in Progress",
              "description": "Your RapidCloud Instance is being created ..."
            }
          ],
          "order": 1000
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Architecture",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/sitemap-solid.svg",
      "route": "modeling",
      "id": "modeling",
      "enabled": true,
      "actions": [
        {
          "id": "aws_architecture",
          "enabled": true,
          "label": "Environment State",
          "component": {
            "file": "architecture",
            "className": "ArchitectureComponent"
          },
          "dynamic": true,
          "type": "Theia::Action",
          "order": 1000
        },
        {
          "id": "aws_solution_wizard",
          "label": "Solution Architecture",
          "order": 1000,
          "dynamic": true,
          "component": {
            "file": "architecture-wizard",
            "className": "ArchitectureWizardComponent",
            "data": {
              "id": "aws_solution_wizard",
              "endpoint": "diagram/solution",
              "info": "",
              "command": {
                "label": "Save",
                "command": {
                  "phase": "architecture",
                  "command": "save-wizard",
                  "diagram_type": "solution"
                }
              }
            }
          },
          "type": "Theia::Action"
        },
        {
          "id": "aws_lz_wizard",
          "label": "Landing Zone",
          "order": 1000,
          "dynamic": true,
          "component": {
            "file": "architecture-wizard",
            "className": "ArchitectureWizardComponent",
            "data": {
              "id": "aws_lz_wizard",
              "endpoint": "diagram/lz",
              "info": "",
              "command": {
                "label": "Save",
                "command": {
                  "phase": "architecture",
                  "command": "save-wizard",
                  "diagram_type": "lz"
                }
              }
            }
          },
          "type": "Theia::Action"
        },
        {
          "id": "aws_net_wizard",
          "label": "Network",
          "order": 1000,
          "dynamic": true,
          "component": {
            "file": "architecture-wizard",
            "className": "ArchitectureWizardComponent",
            "data": {
              "id": "aws_net_wizard",
              "endpoint": "diagram/net",
              "info": "",
              "command": {
                "label": "Save",
                "command": {
                  "phase": "architecture",
                  "command": "save-wizard",
                  "diagram_type": "net"
                }
              }
            }
          },
          "type": "Theia::Action"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Environment",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/sliders-solid.svg",
      "route": "metadata",
      "id": "metadata",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Metadata",
          "id": "modules",
          "module": "module",
          "env_not_required": true,
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "modules",
              "datasource": "data?type=metadata&flatten=false",
              "env_param_required": true,
              "columns": [
                "module",
                "command",
                "name",
                "timestamp",
                "fqn",
                "cmd_id"
              ],
              "title": "Environment Metadata",
              "description": "",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "modules",
              "title": "",
              "description": ""
            }
          ],
          "order": 10,
          "info": "### Environment Metadata\n\n\n\nThis is top level metadata for current environment. Each metadata item may represent multiple AWS resources. To see AWS resource specific configurations, click on `AWS Resources` menu option.\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "Infrastructure Resources",
          "id": "infra_resources",
          "module": "status",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "infra_resources",
              "datasource": "status?test=test",
              "env_param_required": true,
              "columns": [
                "created",
                "resource_type",
                "resource_name",
                "phase",
                "command",
                "timestamp",
                "cmd_id"
              ],
              "title": "Infrastructure Resources",
              "description": "This page shows all the Cloud Infrastructure Resources deployed or to be deployed as part of your current environment.\n",
              "allowMarkdown": true,
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "history",
              "title": "",
              "description": ""
            }
          ],
          "order": 20
        },
        {
          "type": "Theia::Action",
          "label": "Remove Metadata",
          "id": "clean",
          "module": "metadata",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "clean",
              "title": "Remove Environment Metadata",
              "allowMarkdown": true,
              "description": "This removes all metadata for the environment \n\n\n\nFrom CLI: `kc metadata remove` \n\n\n\nImportant: this does not destroy environment resources. \n\n\n\nIf your goal is to remove the environment and all resources, then first do `Deploy -> Terraform Actions -> Destroy` (`kc tf destroy`) and then `Metadata -> Remove Metadata` (`kc metadata remove`)",
              "submit": "Remove Environment Metadata",
              "commands": [
                {
                  "label": "Clean",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove all metadata associated with your environment?",
                  "command": {
                    "phase": "metadata",
                    "command": "remove",
                    "refresh_status": true
                  }
                }
              ]
            }
          ],
          "order": 30
        },
        {
          "type": "Theia::Action",
          "label": "Export",
          "id": "export",
          "module": "metadata",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "export",
              "title": "Export Current Environment",
              "description": "Create snapshot for current environment metadata. Snapshot will be saved as json file in ~/kc-rapidcloud/config/environments directory",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Export",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to create snapshot for this environment's metadata?",
                  "command": {
                    "phase": "metadata",
                    "command": "export"
                  }
                }
              ]
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Import",
          "id": "import",
          "module": "metadata",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "import",
              "title": "Import Environment",
              "description": "Import environment metadata from current environment's latest snapshot",
              "submit": "Submit",
              "env_param_required": false,
              "commands": [
                {
                  "label": "Import",
                  "require_confirmation": true,
                  "confirmation_message": "Target environment metadata will be replaced. This is irreversible. Are you sure you want to import latest snapshot from current environment into selected target environemt?",
                  "command": {
                    "phase": "metadata",
                    "command": "import"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "target_env",
                  "label": "Select Target Environment",
                  "help": "Snapshot will be applied to target environment. Target environment metadata will be replaced.",
                  "datasource": "formdata?type=profile&field=name"
                }
              ]
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Properties",
          "id": "properties",
          "module": "init",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "properties",
              "datasource": "data?type=property",
              "env_param_required": true,
              "columns": [
                "type",
                "name",
                "default_value",
                "value"
              ],
              "title": "Properties",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "init",
                    "command": "set-property",
                    "refresh_status": false
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "type",
                  "label": "Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "general",
                      "value": "general"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "api_gateway",
                      "value": "api_gateway"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "aurora_mysql_instance",
                      "value": "aurora_mysql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "aurora_postgresql_instance",
                      "value": "aurora_postgresql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "cloudwatch_event_rule",
                      "value": "cloudwatch_event_rule"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_event_subscription",
                      "value": "dms_event_subscription"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_replication_instance",
                      "value": "dms_replication_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_replication_task",
                      "value": "dms_replication_task"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_s3_target_endpoint",
                      "value": "dms_s3_target_endpoint"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_source_endpoint",
                      "value": "dms_source_endpoint"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "emr_cluster",
                      "value": "emr_cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_catalog_database",
                      "value": "glue_catalog_database"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_classifier",
                      "value": "glue_classifier"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_connection",
                      "value": "glue_connection"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_crawler",
                      "value": "glue_crawler"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_job",
                      "value": "glue_job"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_trigger",
                      "value": "glue_trigger"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kinesis_firehose_s3_delivery_stream",
                      "value": "kinesis_firehose_s3_delivery_stream"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kinesis_stream",
                      "value": "kinesis_stream"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kms_key",
                      "value": "kms_key"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "lambda_event_source_mapping",
                      "value": "lambda_event_source_mapping"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "lambda_function",
                      "value": "lambda_function"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "lambda_layer",
                      "value": "lambda_layer"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "msk_cluster",
                      "value": "msk_cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "rds_mysql_instance",
                      "value": "rds_mysql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "rds_postgresql_instance",
                      "value": "rds_postgresql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "redshift_cluster",
                      "value": "redshift_cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "s3_bucket",
                      "value": "s3_bucket"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "s3_bucket_notification",
                      "value": "s3_bucket_notification"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "s3_bucket_object",
                      "value": "s3_bucket_object"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "sns_topic",
                      "value": "sns_topic"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "sns_topic_subscription",
                      "value": "sns_topic_subscription"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Property",
                  "help": "Property (no spaces or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "default_value",
                  "label": "Default Value",
                  "help": "Default Value",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "value",
                  "label": "Value",
                  "help": "Value",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Properties\n\n\n\nRapidCloud properties are used by infrastructure automation modules to configure AWS resources. Each environment has its own set of default properties. You can modify property value if you want to change how specific resource is configured. \n\n\n\n**Type**\n\n\n\nProperty type is either `general` or for a specific AWS resource type.\n\n\n\n**Property**\n\n\n\nName of the property to set value for.\n\n\n\n**Default Value**\n\n\n\nDefault property value to be used by RapidCloud automation.\n\n\n\n**Value**\n\n\n\nYou can override default value here."
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Organizations",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/people-roof-solid.svg",
      "route": "organizations",
      "id": "organizations",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "AWS Organizations",
          "id": "org_create",
          "module": "org",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "org_create",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=org,create",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "AWS Organizations",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "org_create",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "org",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "org_aws_service_access_principals",
                  "label": "AWS Service Access Principals",
                  "help": "comma-separated list",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "org_enabled_policy_types",
                  "label": "Enabled Policy Types",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "SERVICE_CONTROL_POLICY",
                      "value": "SERVICE_CONTROL_POLICY"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TAG_POLICY",
                      "value": "TAG_POLICY"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "BACKUP_POLICY",
                      "value": "BACKUP_POLICY"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AISERVICES_OPT_OUT_POLICY",
                      "value": "AISERVICES_OPT_OUT_POLICY"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### AWS Organizations\n\n\n\nAWS Organizations is an account management service that enables you to consolidate multiple AWS accounts into an organization that you create and centrally manage.\n\n\n\n**Name**\n\n\n\nThis is the internal RapidCloud name that your organizations will have.\n\n\n\n**AWS Service Access Principals**\n\n\n\nList of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Some services do not support enablement via Terraform, see more information [here](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).\n\n\n\n**Enabled Policy Types**\n\n\n\nList of policy types to enable in the Organization Root, allowed values are `(AISERVICES_OPT_OUT_POLICY | BACKUP_POLICY | SERVICE_CONTROL_POLICY | TAG_POLICY)`. See more information [here](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).\n"
        },
        {
          "type": "Theia::Action",
          "label": "AWS Organizational Units",
          "id": "org_create_ou",
          "module": "org",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "org_create_ou",
              "datasource": "data?type=metadata&filter_name=command&filter_value=create_ou",
              "env_param_required": true,
              "columns": [
                "name",
                "org_parent_name",
                "org_parent_type",
                "org_scps",
                "timestamp"
              ],
              "title": "AWS Organizational Units",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "org_create_ou",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "org",
                    "command": "create_ou",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "org_parent_name",
                  "label": "Parent Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "org_parent_type",
                  "label": "Parent Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Root",
                      "value": "root"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "OU",
                      "value": "ou"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "org_scps",
                  "label": "SCPs To Attach",
                  "help": "AWS allows a maximum of 5 SCPs to be attached",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=org,create_scp&field=name&module_name_arg=org"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### AWS Organizational Units\n\n\n\nYou can use organizational units (OUs) to group accounts together to administer as a single unit.\n\n\n\n**Name**\n\n\n\nThe name of your organizational unit.\n\n\n\n**Parent OU Name**\n\n\n\nName of parent OU or root org in RapidCloud.\n\n\n\n**SCPs To Attach**\n\n\n\nNames of SCPs to attach to the OU. AWS allows a maximum of 5."
        },
        {
          "type": "Theia::Action",
          "label": "AWS Accounts",
          "id": "org_create_account",
          "module": "org",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "org_create_account",
              "datasource": "data?type=metadata&filter_name=command&filter_value=create_account",
              "env_param_required": true,
              "columns": [
                "name",
                "org_parent_name",
                "org_email",
                "org_scps",
                "timestamp"
              ],
              "title": "AWS Accounts",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "org_create_account",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "org",
                    "command": "create_account",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "org_parent_name",
                  "label": "Parent OU Name",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=org,create_ou&field=name&module_name_arg=org"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "org_email",
                  "label": "Email",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "org_scps",
                  "label": "SCPs To Attach",
                  "help": "AWS allows a maximum of 5 SCPs to be attached",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=org,create_scp&field=name&module_name_arg=org"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### AWS Organization Member Account\n\n\n\nAccount management must be done from the organization's root account.\n\n\n\n**Name**\n\n\n\nThe name of your account.\n\n\n\n**Parent OU Name**\n\n\n\nName of parent OU in RapidCloud.\n\n\n\n**Email**\n\n\n\nEmail address of the owner to assign to the new member account. This email address must not already be associated with another AWS account.\n\n\n\n**SCPs To Attach**\n\n\n\nNames of SCPs to attach to the account. AWS allows a maximum of 5."
        },
        {
          "type": "Theia::Action",
          "label": "AWS Service Control Policies",
          "id": "org_create_scp",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "org_create_scp",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=org,create_scp",
              "env_param_required": true,
              "columns": [
                "name",
                "org_description",
                "timestamp"
              ],
              "title": "AWS SCPs",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "org_create_scp",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "org",
                    "command": "create_scp",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "org_description",
                  "label": "Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::TextArea",
                  "id": "org_policy_text",
                  "label": "Policy Definition",
                  "help": "",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### AWS Organizations Service Control Policies\n\n\n\nUsing SCP, you can limit the AWS services, resources, and individual API operations that users and roles in each member account can access. They can be attached to organizational units(OUs) or member accounts.\n\n\n\n**Name**\n\n\n\nThe name of your SCP.\n\n\n\n**Description**\n\n\n\nOptional description for your SCP.\n\n\n\n**Policy Definition**\n\n\n\nThe JSON policy document for the SCP. More information on SCP syntax can be found [here](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html).\n"
        },
        {
          "type": "Theia::Action",
          "label": "SSO Permission Sets",
          "id": "sso_create_permission_set",
          "module": "sso",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "sso_create_permission_set",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=sso,create_permission_set",
              "env_param_required": true,
              "columns": [
                "name",
                "sso_description",
                "sso_relay_state",
                "sso_session_duration",
                "timestamp"
              ],
              "title": "SSO Permission Sets",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "sso_create_permission_set",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "sso",
                    "command": "create_permission_set",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_description",
                  "label": "Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_relay_state",
                  "label": "Relay State URL",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_session_duration",
                  "label": "Session Duration",
                  "help": "In ISO-8601 Standard",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_aws_managed_policy_arns",
                  "label": "AWS Managed Policy ARNs",
                  "help": "comma-separated list",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::TextArea",
                  "id": "sso_inline_policy",
                  "label": "Custom Policy Text",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### SSO Permission Sets\n\n\n\nPermission sets define the level of access that users and groups have to an AWS account.\n\n\n\n**Name**\n\n\n\nThe name of your permission set.\n\n\n\n**Description**\n\n\n\nThe description for your permission set.\n\n\n\n**Relay State URL**\n\n\n\n(Optional) The relay state URL used to redirect users within the application during the federation authentication process.\n\n\n\n**Session Duration**\n\n\n\nThe length of time that the application user sessions are valid in the ISO-8601 standard. Default: PT1H.\n\n\n\n**AWS Managed Policy ARNs**\n\n\n\nComma-separated list of policy ARNs to attach to the permission set.\n\n\n\n**Custom Policy Text**\n\n\n\nThe IAM inline policy to attach to a permission set."
        },
        {
          "type": "Theia::Action",
          "label": "SSO Account Assignments",
          "id": "sso_create_account_assignment",
          "module": "sso",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "sso_create_account_assignment",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=sso,create_account_assignment",
              "env_param_required": true,
              "columns": [
                "name",
                "sso_permission_set_name",
                "sso_principal_type",
                "sso_account_name",
                "timestamp"
              ],
              "title": "SSO Account Assignments",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "sso_create_account_assignment",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Assign",
                  "command": {
                    "phase": "sso",
                    "command": "create_account_assignment",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "sso_permission_set_name",
                  "cli_id": "permission_set_name",
                  "label": "Permission Set",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=sso,create_permission_set&field=name&module_name_arg=sso"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "sso_account_name",
                  "cli_id": "account_name",
                  "label": "Account",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=org,create_account&field=name&module_name_arg=sso"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "sso_principal_type",
                  "label": "Principal Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "USER",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "user",
                        "enableControls": [
                          "sso_principal_users"
                        ],
                        "disableControls": [
                          "sso_principal_groups"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "GROUP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "group",
                        "enableControls": [
                          "sso_principal_groups"
                        ],
                        "disableControls": [
                          "sso_principal_users"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "sso_principal_users",
                  "cli_id": "principal_users",
                  "label": "Users",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=sso,create_user&field=name&module_name_arg=sso"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "sso_principal_groups",
                  "cli_id": "principal_groups",
                  "label": "Groups",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=sso,create_group&field=name&module_name_arg=sso"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_principal_ids",
                  "cli_id": "principal_ids",
                  "label": "Principal IDs",
                  "help": "comma-separated list",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### SSO Account Assignments\n\n\n\nAssign a user or group to an account with access specified by a permission set\n\n\n\n**Permission Set**\n\n\n\nThe permission set to use for this assignment.\n\n\n\n**Account**\n\n\n\nThe account to attach principals to.\n\n\n\n**Principal Type**\n\n\n\nThe type of the assignment principals `(USER|GROUP)`.\n\n\n\n**Users**\n\n\n\nUsers to provide access for if the principal type is `USER`.\n\n\n\n**Groups**\n\n\n\nGroups to provide access for if the principal type is `GROUP`.\n\n\n\n**Principal IDs**\n\n\n\nPrincipal IDs to provide access for. Use this if your users are not managed by RapidCloud. This field takes precedence over the users and groups fields."
        },
        {
          "type": "Theia::Action",
          "label": "SSO Users",
          "id": "sso_create_user",
          "module": "sso",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "sso_create_user",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=sso,create_user",
              "env_param_required": true,
              "columns": [
                "name",
                "sso_user_name",
                "sso_display_name",
                "sso_first_name",
                "sso_last_name",
                "sso_email",
                "timestamp"
              ],
              "title": "SSO Users",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "sso_create_user",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "sso",
                    "command": "create_user",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_user_name",
                  "cli_id": "user_name",
                  "label": "User Name",
                  "help": "Unique",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_display_name",
                  "label": "Display Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_first_name",
                  "label": "First Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_last_name",
                  "label": "Last Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "email",
                  "label": "Email",
                  "help": "",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### SSO Users\n\n\n\n**User Name**\n\n\n\nThe unique username of the user.\n\n\n\n**Display Name**\n\n\n\nThe display name of the user.\n\n\n\n**First Name**\n\n\n\nUser's first name.\n\n\n\n**Last Name**\n\n\n\nUser's last name.\n\n\n\n**Email**\n\n\n\nUser's email.\n"
        },
        {
          "type": "Theia::Action",
          "label": "SSO Groups",
          "id": "sso_create_group",
          "module": "sso",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "sso_create_group",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=sso,create_group",
              "env_param_required": true,
              "columns": [
                "name",
                "sso_description",
                "timestamp"
              ],
              "title": "SSO Groups",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "sso_create_group",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "sso",
                    "command": "create_group",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sso_description",
                  "label": "Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "sso_members",
                  "label": "Members",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=sso,create_user&field=name&module_name_arg=sso"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### SSO Groups\n\n\n\n**Name**\n\n\n\nName of the group.\n\n\n\n**Description**\n\n\n\nThe description for the group.\n\n\n\n**Members**\n\n\n\nSSO Users to attach to the group.\n\n\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "VPC",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/network-wired-solid.svg",
      "route": "vpc",
      "id": "VPC",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "VPCs",
          "id": "net_create_vpc",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "net_create_vpc",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=net,create_vpc",
              "env_param_required": true,
              "columns": [
                "command",
                "name",
                "net_cidr",
                "net_enable_dns_support",
                "net_enable_dns_hostnames",
                "timestamp"
              ],
              "title": "VPCs",
              "description": "Create VPCs.",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "net_create_vpc",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "net",
                    "command": "create_vpc",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "The VPC name",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "net_cidr",
                  "label": "Cidr",
                  "help": "The CIDR used for this VPC",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "CIDR is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "net_enable_dns_support",
                  "label": "DNS Support",
                  "help": "Enable or disable DNS support in this VPC",
                  "inputType": "text",
                  "default": "true"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "net_enable_dns_hostnames",
                  "label": "DNS Hostname Support",
                  "help": "Enable or disable DNS hostname support in this VPC",
                  "inputType": "text",
                  "default": "true"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "net_tags",
                  "label": "Tags",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=net,${name}&result=params,net_tags",
                  "add_value_label": "Tags for your VPC resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "# VPC\n\nCreates a `VPC` in your environment\n\n\n\n---\n\n## Inputs\n\n\n\n**Name**\n\nThe name of your `VPC`\n\n\n\n**CIDR**\n\nThe IPv4 CIDR block for the `VPC`.\n\n\n\n**Enable DNS Hostnames**\n\nEnable/disable [DNS hostnames](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-hostnames) in the `VPC`. Defaults to true.\n\n\n\n\n\n**Enable DNS Support**\n\nEnable/disable [DNS support](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#AmazonDNS) in the `VPC`. Defaults to true.\n\n\n\n**Tags**\n\nProvide additional tags, by default Rapid Cloud will add the following tags to all possible resources:\n\n\n\n```\n\n Name    \n\n env      \n\n profile  \n\n author \n\n fqn      \n\n cmd_id \n\n workload \n\n```\n\n---\n\n## Outputs\n\n\n\n**ID**\n\nThe ID of the `VPC`.\n\n\n\n---\n"
        },
        {
          "type": "Theia::Action",
          "label": "Subnets",
          "id": "net_create_subnet",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "net_create_subnet",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=net,create_subnet",
              "env_param_required": true,
              "columns": [
                "name",
                "net_az",
                "net_cidr",
                "net_vpc_module_id",
                "net_create_route_table",
                "net_associate_route_table",
                "timestamp"
              ],
              "title": "Subnets",
              "description": "Create a Subnet in a VPC",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "net_create_subnet",
              "title": "Create subnets and route tables/associations",
              "description": "This section creates a subnet and route table/association",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "net",
                    "command": "create_subnet",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "The Subnet name",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_vpc_module_id",
                  "label": "VPC module id",
                  "help": "A New or RapidCloud deployed VPC to create this Subnet in",
                  "datasource": "custom/module_net_vpcs?extra=true&module_name_arg=net",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "A VPC is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "net_cidr",
                  "label": "CIDR",
                  "help": "The CIDR this Subnet will use",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "A Subnet CIDR is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_az",
                  "label": "Availability Zones",
                  "help": "The Availability Zone to create this Subnet in",
                  "datasource": "formdata_from_aws?type=availability_zones&module_name_arg=net",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "An Availability Zone is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "net_create_route_table",
                  "label": "Create route table",
                  "help": "Create and associate a Route Table with this Subnet",
                  "inputType": "text",
                  "default": "true"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_associate_route_table",
                  "label": "Use Existing Route Table",
                  "help": "Associate an exising Route Table with this Subnet",
                  "datasource": "custom/module_net_route_tables?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "net_tags",
                  "label": "Tags",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=net,${name}&result=params,net_tags",
                  "add_value_label": "Tags for your Subnet resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "# SUBNETS\n\nThis section allows you to create a `subnet` in a VPC, by default a `route table` will be created and associate it with the `subnet` you are creating.\n\n\n\nYou may use an existing `route table` (created by `rapidcloud subnet` module) by selecting it from the drop down menu.\n\n\n\nGeneraly a `shared route table` is useful in `public` subnets since internet gateways are per region. \n\n\n\n## Inputs\n\n\n\n**Name**\n\nThe name of your `subnet` and `route table` (if creating both).\n\n\n\n**VPC**\n\nThe VPC you wish to create the `subnet` in.\n\n\n\n**CIDR**\n\nThe IPv4 CIDR block for the `subnet`.\n\n\n\n**Availability Zones**\n\nThe availability zone to create the `subnet` in\"\n\n\n\n**Use Existing Route Table**\n\nSelect an existing `route table` to associate this `subnet` with.\n\n\n\n**Create Route Table**\n\nToggle On to create a `route table` and associate it with the `subnet`.\n\n\n\n**Tags**\n\nProvide additional tags, by default Rapid Cloud will add the following tags to all possible resources:\n\n\n\n```\n\n Name    \n\n env      \n\n profile  \n\n author \n\n fqn      \n\n cmd_id \n\n workload \n\n```\n\n---\n\n## Outputs\n\n\n\n**ID**\n\nThe ID of the `Subnet`.\n\n\n\n**Route Table ID**\n\nThe ID of the `route table` (if created).\n\n\n\n---\n"
        },
        {
          "type": "Theia::Action",
          "label": "Internet Gateways",
          "id": "net_create_igw",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "net_create_igw",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=net,create_igw",
              "env_param_required": true,
              "columns": [
                "name",
                "net_vpc_module_id",
                "net_timestamp"
              ],
              "title": "Internet Gateways",
              "description": "Create an Internet Gateway and configure routing for direct internet connectivity",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "net_create_igw",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "net",
                    "command": "create_igw",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "The Internet Gateway name",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_vpc_module_id",
                  "label": "VPC module id",
                  "help": "A New or RapidCloud deployed VPC to create this Subnet in",
                  "datasource": "custom/module_net_vpcs?extra=true&module_name_arg=net",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "A VPC is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "net_route_tables",
                  "label": "Add Route to Route Tables",
                  "help": "A route to this Internet Gateway will be added to the route tables selected here",
                  "datasource": "custom/module_net_route_tables?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "net_tags",
                  "label": "Tags",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=net,${name}&result=params,net_tags",
                  "add_value_label": "Tags for your Internet Gateway resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "# Internet Gateway\n\nCreates a `Internet Gateway` in your environment.\n\nNormally this will be used in `public` subnets, use the `route tables` drop down to select which route tables to create an internet route in.\n\n\n\n---\n\n## Inputs\n\n\n\n**Name**\n\nThe name of your `Internet Gateway`\n\n\n\n**VPC**\n\nThe VPC you wish to create the `Internet Gateway` in.\n\n\n\n**Route Tables**\n\nSelect `route tables` to create a route to `0.0.0.0/0` via the `Internet Gateway`\n\n\n\n**Tags**\n\nProvide additional tags, by default Rapid Cloud will add the following tags to all possible resources:\n\n\n\n```\n\n Name    \n\n env      \n\n profile  \n\n author \n\n fqn      \n\n cmd_id \n\n workload \n\n```\n\n\n\n---\n\n## Outputs\n\n\n\n**ID**\n\nThe ID of the `Internet Gateway`.\n\n\n\n---\n"
        },
        {
          "type": "Theia::Action",
          "label": "NAT Gateways",
          "id": "net_create_natgw",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "net_create_natgw",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=net,create_natgw",
              "env_param_required": true,
              "columns": [
                "name",
                "net_subnet_module_id",
                "net_route_tables",
                "timestamp"
              ],
              "title": "NAT Gateways",
              "description": "Create a NAT Gateway and update routes for internet access, over NAT.\nIt is recommended to create one NAT Gateway per AZ if you are running production workloads.\nAn EIP will be allocated for this Gateway as well.",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "net_create_natgw",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "net",
                    "command": "create_natgw",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "The NAT Gateway name",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_subnet_module_id",
                  "label": "Subnet",
                  "help": "Select a Subnet with an Internet Gateway route to create this NAT Gateway in.",
                  "datasource": "custom/module_net_subnets?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "net_route_tables",
                  "label": "Add to Route Tables",
                  "help": "A route to this NAT Gateway will be added to the route tables selected here",
                  "datasource": "custom/module_net_route_tables?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "net_tags",
                  "label": "Tags",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=net,${name}&result=params,net_tags",
                  "add_value_label": "Tags for your NAT Gateway resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "# NAT Gateway\n\nCreates a `NAT Gateway` in your environment.\n\n\n\nPlease note:\n\n\n\nA `NAT Gateway` needs to be in a subnet that's internet enabled/has route to an `Internet Gateway`.\n\nIt is recomended to create a `NAT Gateway` per Availability Zone.\n\n\n\n---\n\n## Inputs\n\n\n\n**Name**\n\nThe name of your `NAT Gateway`\n\n\n\n**Subnet**\n\nThe `Subnet` you wish to create the `NAT Gateway` in.\n\nThis subnet needs to have an Internet route.\n\n\n\n**Route Tables**\n\nSelect `route tables` to create a route to `0.0.0.0/0` via the `NAT Gateway` in the related `Subnet`.\n\n\n\n**Tags**\n\nProvide additional tags, by default Rapid Cloud will add the following tags to all possible resources:\n\n\n\n```\n\n Name    \n\n env      \n\n profile  \n\n author \n\n fqn      \n\n cmd_id \n\n workload \n\n```\n\n\n\n---\n\n## Outputs\n\n\n\n**ID**\n\nThe ID of the `NAT Gateway`.\n\n\n\n---\n"
        },
        {
          "type": "Theia::Action",
          "label": "Routes",
          "id": "net_create_route",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "net_create_route",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=net,create_route",
              "env_param_required": true,
              "columns": [
                "name",
                "net_destination_cidr",
                "net_route_tables",
                "net_transit_gateway_id",
                "net_vpc_peering_connection_id",
                "timestamp"
              ],
              "title": "Create Routes",
              "description": "Establish Additional Routes",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "net_create_route",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "net",
                    "command": "create_route",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "net_destination_cidr_block",
                  "label": "Destination CIDR",
                  "help": "The CIDR you want to establish a route to",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Destination CIDR is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "net_route_tables",
                  "label": "Route Tables",
                  "help": "The Route Tables that will be updated to provide access using this route",
                  "inputType": "text",
                  "datasource": "custom/module_net_route_tables?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_transit_gateway_id",
                  "label": "Transit Gateway ID",
                  "help": "The Transit Gateway ID",
                  "inputType": "text",
                  "datasource": "custom/module_net_tgw?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_vpc_peering_connection_id",
                  "label": "VPC Peer ID",
                  "help": "The VPC Peer ID",
                  "inputType": "text",
                  "datasource": "custom/module_net_vpc_peers?extra=true&module_name_arg=net"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "# Routes\n\nThis section allows you to create a `Route Entry` in a `VPC` routing traffic to a `Transit Gateway` or `VPC Peer`.\n\n\n\n\n\n## Inputs\n\n\n\n**Name**\n\nThe name of your `Route`.\n\n\n\n**Destination Cidr**\n\nThe destination `CIDR` to which this route will route traffic to.\n\n\n\n**Route Tables**\n\nSelect the `Route Tables` to create this route in.\n\n\n\n**Transit Gateway ID**\n\nThe `Transit Gateway` ID to route traffic destined for `Destination CIDR` through.\n\n\n\n**VPC Peer ID**\n\nThe `VPC Peer ID` ID to route traffic destined for `Destination CIDR` through.\n\n\n\n---\n\n## Outputs\n\n\n\n---\n"
        },
        {
          "type": "Theia::Action",
          "label": "VPC Endpoint",
          "id": "net_create_endpoint",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "net_create_endpoint",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=net,create_endpoint",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp",
                "net_service",
                "net_vpc_id",
                "net_subnet_ids",
                "net_route_tables"
              ],
              "title": "VPC Endpoints",
              "description": "Establish VPC endpoints, services, and corresponding routing paths",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "net_create_endpoint",
              "title": "Create Endpoint",
              "description": "Create Endpoint",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "net",
                    "command": "create_endpoint",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "A name for this resource",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_service",
                  "label": "Service",
                  "help": "The VPC Endpoint service",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "s3",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "s3",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "autoscaling",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "autoscaling",
                        "disableControls": [
                          "route_tables"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dynamodb",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "dynamodb",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ec2",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "ec2",
                        "disableControls": [
                          "route_tables"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ecr_api",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "ecr_api",
                        "disableControls": [
                          "route_tables"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ecr_dkr",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "ecr_dkr",
                        "disableControls": [
                          "route_tables"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "sqs",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "sqs",
                        "disableControls": [
                          "route_tables"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "sns",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "sns",
                        "disableControls": [
                          "route_tables"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "net_vpc_id",
                  "label": "VPC ID",
                  "help": "The VPC to create this Endpoint in.",
                  "datasource": "custom/module_net_vpcs?extra=true&module_name_arg=net",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "A VPC is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "net_subnet_ids",
                  "label": "Subnets",
                  "help": "Select The Subnets to create this Endpoint in.",
                  "datasource": "custom/module_net_subnets?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "net_route_tables",
                  "label": "Add Route to Route Tables",
                  "help": "Add a route to this Endpoint to the following Route Tables",
                  "datasource": "custom/module_net_route_tables?extra=true&module_name_arg=net"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "net_tags",
                  "label": "Tags",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=net,${name}&result=params,net_tags",
                  "add_value_label": "Tags for your Endpoint resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "# Endpoints\n\nCreates a `VPC Endpoint` in your environment.\n\n\n\nThis module supports the following end points:\n\n- autoscaling \n\n- dynamodb\n\n- ec2\n\n- ecr-api\n\n- ecr-dkr\n\n- s3\n\n- sns\n\n- sqs\n\n\n\nPlease note:\n\n\n\nBoth `dynamodb` and `s3` create a `Route Table Association`, All others are `Interface` type and a `Security Group` will be attached to them allowing access from the `VPC CIDR`.\n\n\n\n---\n\n## Inputs\n\n\n\n**Name**\n\nThe name of your `Endpoint`.\n\n\n\n**Service**\n\nThe `Endpoint Service`.\n\n\n\n**VPC**\n\nThe `VPC` in which to create this endpoint.\n\n\n\n**Route Tables**\n\nThe `Route Tables` to associate with the `Endpoint Service`, only applies to `dynamodb` and `s3`.\n\n\n\n\n\n**Tags**\n\nProvide additional tags, by default Rapid Cloud will add the following tags to all possible resources:\n\n\n\n```\n\n Name    \n\n env      \n\n profile  \n\n author \n\n fqn      \n\n cmd_id \n\n workload \n\n```\n\n---\n\n## Outputs\n\n\n\n\n\n---\n\n\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Data Ingestion",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/file-import-solid.svg",
      "route": "ingest",
      "id": "ingest",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Datalake",
          "id": "datalake",
          "module": "datalake",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "datalake",
              "datasource": "data?type=metadata&filter_name=module&filter_value=datalake",
              "env_param_required": true,
              "title": "Datalake",
              "description": "If you see `Datalake Name` below, then you already have a datalake. There can only be one Datalake per environment. Your datalake consists of `S3 buckets`, `roles`, `policies`, `S3 event notifications` and `lambda functions` for safely storing data and managing various data pipelines. Datalake will be automatically created when you configure any data pipeline or analytics jobs.",
              "allowMarkdown": true,
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "datalake",
                    "command": "create",
                    "refresh_status": true
                  },
                  "editable_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Datalake\n\n\n\nYour datalake consists of `S3 buckets`, `roles`, `policies`, `S3 event notifications` and `lambda functions` for safely storing data and managing various data pipelines\n\n\n\n**Datalake Name**\n\n\n\nThis is optional. If not provided, default is `datalake`"
        },
        {
          "type": "Theia::Action",
          "label": "RDBMS: Source Databases",
          "id": "databases",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "environment",
              "datasource": "data?type=source_database",
              "env_param_required": true,
              "columns": [
                "name",
                "engine",
                "server",
                "schema"
              ],
              "title": "Source Databases",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "database",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "ingest",
                    "command": "register-source-database",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Database Name",
                  "help": "Enter database name (no space or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "engine",
                  "label": "Database Engine",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "MySQL",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "mysql",
                        "disableControls": [
                          "db"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Oracle",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "oracle"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Postgres",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "postgres"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "server",
                  "label": "Database Server Address",
                  "help": "Enter Database Server Address (dns name or IP address)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "port",
                  "label": "Database Server Port",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "db_user",
                  "label": "Database User",
                  "help": "Database User with permissions to get schema details",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "password",
                  "label": "Password",
                  "help": "Database Password will be encrypted and never stored or transmitted in plain text",
                  "inputType": "password"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "db",
                  "label": "Database/Catalog Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "schema",
                  "label": "Schema Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rate_of_change",
                  "label": "Database Rate of Change (GB/hr)",
                  "default": "1"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "use_dms",
                  "label": "Enable DMS (Database Migration Service)"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Source Databases\n\n\n\nEach RDBMS to be ingested via RapidCloud must be registered here.\n\n\n\n**Database Name**\n\n\n\nEnter database name without space or special characters. This is the name to be used by RapidCloud internally and doesn't have to be the same as the source database name. Use something meaningful (e.g. `orders`, `hr`)\n\n\n\n**Database Engine**\n\n\n\nSelect your source database engine from the list. RapidCloud currently supports Oracle, MS SQL Server, MySQL. PostgreSQL support is coming soon.\n\n\n\n**Database Server Address**\n\n\n\nSpecify DNS name or IP Address for your database.\n\n\n\n**Database Server Port**\n\n\n\nSpecify port for your database.\n\n\n\n**Database User**\n\n\n\nDatabase User with permissions to get schema details, read access to data and proper access to logs for replication.\n\n\n\n**Password**\n\n\n\nDatabase Password will be encrypted and saved in AWS Secrets Manager. It will never be stored or transmitted in plain text.\n\n\n\n**Database/Catalog/SID**\n\n\n\nDatabase name or catalog name \n\n\n\n**Service/Schema name**\n\n\n\nDatabase schema name\n\n\n\n**Database Rate of Change (GB/hr)**\n\n\n\nHow much data is being created or changed on the average every hour? This is important for RapidCloud to determine proper on-going replication architecture."
        },
        {
          "type": "Theia::Action",
          "label": "RDBMS: Source Tables",
          "id": "datasets",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datasets",
              "datasource": "data?type=dataset",
              "env_param_required": true,
              "columns": [
                "name",
                "source_database",
                "source_schema",
                "source_table",
                "size",
                "pk",
                "partitioned_by",
                "cdc_via"
              ],
              "title": "Source Database Tables",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "dataset",
              "title": "",
              "description": "",
              "readonly": false,
              "editable_hide": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "ingest",
                    "command": "add-dataset"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "source_database",
                  "label": "Database Name",
                  "help": "Select an already registered database name",
                  "datasource": "formdata?type=source_database&field=name&data_fields=schema"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "source_schema",
                  "label": "Schema Name",
                  "help": "Enter Schema Name",
                  "inputType": "text",
                  "readonly": true,
                  "dependency": {
                    "controlId": "source_database",
                    "field": "schema"
                  }
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "source_table",
                  "cli_arg": "include_tables",
                  "label": "Include Tables",
                  "help": "Select table names or type `all` to include all tables",
                  "dynamic_datasource": "formdata?type=source_table&filter_name=database&filter_value=${source_database}&field=table_name"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "size",
                  "label": "Table Size",
                  "help": "Select size of table to indicate type of DMS task. See help info for details.",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "n/a",
                      "value": "n/a"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Small",
                      "value": "small"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Medium",
                      "value": "medium"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Large",
                      "value": "large"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Xlarge",
                      "value": "xlarge"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "prefix",
                  "label": "Dataset Prefix",
                  "help": "Example: prefix hr_ for source table employee will create dataset hr_employee",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "partitioned_by",
                  "label": "Partitions",
                  "help": "Comma separated list of attributes to organize this data in the datalake [default: year,month,day]",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Database Tables\n\n\n\nDepending on your specific use case, you may want to ingest only some tables or all. RapidCloud needs to know that.\n\n\n\n**Database Name**\n\n\n\nSelect an already registered database name from the list\n\n\n\n**Schema Name**\n\n\n\nSchema name is automatically selected based on database selection \n\n\n\n**Include Tables**\n\n\n\nSelect table names or `all` to include all tables\n\n\n\n**Table Size**\n\n\n\nSelect size of table to indicate type of DMS task. `Small` will be ingested and replaced based on schedule. `Medium`, `Large`, and `Xlarge` will be ingested using incremental replication.\n\n\n\n**Dataset Prefix**\n\n\n\nExample: prefix `hr_` for source table employee will create dataset `hr_employee`\n\n\n\n**Partitions**\n\n\n\nComma separated list of attributes to organize this data in the datalake [default: year,month,day]. This will be applied to `raw` (aka organized) bucket in the datalake."
        },
        {
          "type": "Theia::Action",
          "label": "RDBMS: DMS Schedules",
          "id": "schedules",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "schedules",
              "datasource": "data?type=schedule",
              "env_param_required": true,
              "columns": [
                "source_database",
                "task",
                "type",
                "schedule",
                "enabled"
              ],
              "title": "Replication Schedules",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "ingest",
                    "command": "schedule"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "task",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "source_database",
                  "label": "Source Database",
                  "help": "Select an already registered source database",
                  "datasource": "formdata?type=source_database&field=name"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "type",
                  "label": "Select replication type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Full replication of small tables",
                      "value": "full"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "CDC for Inserts",
                      "value": "inserts"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "CDC for Updates",
                      "value": "updates"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "schedule",
                  "label": "Enter schedule as cron expression",
                  "help": "Example: run every day at midnight => 0 4 * * ? *",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enabled",
                  "label": "Enable this migration task"
                }
              ]
            }
          ],
          "order": 40,
          "info": "### Replication Schedule\n\n\n\nUse cases that don't use DMS built-in on-going replication require replication scheduling via RapidCloud. This would be the case for larger dataabses with significant rate-of-change. For these use cases RapidCloud allows to set up tree types of replications.\n\n\n\n* Full replication for smaller tables\n\n* CDC for Inserts\n\n* CDC for Updates\n\n\n\n**Replication Type**\n\n\n\nSelect an already registered database name from the list\n\n\n\n**Enter schedule as cron expression**\n\n\n\nExample: run every day at midnight => `0 4 * * ? *`\n\n\n\n**Enable this migration task**\n\n\n\nReplication via DMS Tasks is not enabled by default\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "RDBMS: Events",
          "id": "events",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "events",
              "datasource": "data?type=event",
              "env_param_required": true,
              "columns": [
                "name",
                "source_database",
                "source_table",
                "partitions"
              ],
              "title": "Events",
              "description": "Each event must correspond to your source database tables (RapidCloud `dataset`). This use case is appropriate when you need to process source database changes in near-realtime. Events are consumed via Kinesis Firehose and saved in S3",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "Events are processed in near-realtime via Kinesis Firehose",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Add Event",
                  "command": {
                    "phase": "ingest",
                    "command": "add-event",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "name",
                  "cli_arg": "dataset_name",
                  "label": "Dataset Name",
                  "help": "",
                  "datasource": "formdata?type=dataset&field=name"
                }
              ]
            }
          ],
          "order": 45,
          "info": "### Events\n\n\n\nEach event must correspond to your source database tables (RapidCloud `dataset`). This use case is appropriate when you need to process source database changes in near-realtime. Events are consumed via Kinesis Firehose and saved in S3\n\n\n\n**Dataset Name**\n\n\n\nSelect an existing dataset \n"
        },
        {
          "type": "Theia::Action",
          "label": "RDBMS: Data Type Mappings",
          "id": "datatypes",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datatypes",
              "datasource": "data?type=data_type_translation",
              "columns": [
                "engine_from",
                "engine_to",
                "cast_from",
                "cast_to"
              ],
              "readonly": true,
              "title": "Data Type Mappings",
              "description": "Following mappings will be used to ensure proper data type conversions between two database engines when ingesting relational data."
            }
          ],
          "order": 50
        },
        {
          "type": "Theia::Action",
          "label": "Semi-Structured (Json, CSV, etc)",
          "id": "semistructured",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "semistructured",
              "datasource": "data?type=dataset_semi_structured",
              "env_param_required": true,
              "columns": [
                "name",
                "enabled",
                "format",
                "category",
                "cdc_type",
                "enable_enrich",
                "enable_transform"
              ],
              "title": "Semi-structured Data",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "ingest",
                    "command": "register-semi-structured",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Enter Dataset Name with no spaces",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enabled",
                  "label": "Enable this dataset"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "cdc_type",
                  "label": "CDC Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Delta",
                      "value": "delta"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Cumulative",
                      "value": "cumulative"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Cumulative YTD",
                      "value": "cumulative_year"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Cumulative MTD",
                      "value": "cumulative_month"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "format",
                  "label": "File Format",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "CSV",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "csv",
                        "disableControls": [
                          "sheet_name",
                          "use_first_row_as_cols"
                        ],
                        "enableControls": [
                          "separator_char",
                          "use_quotes_around_strings"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Excel (XSLX)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "xlsx",
                        "disableControls": [
                          "separator_char",
                          "use_quotes_around_strings",
                          "use_first_row_as_cols"
                        ],
                        "enableControls": [
                          "sheet_name"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "JSON",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "json",
                        "enableControls": [
                          "use_first_row_as_cols"
                        ],
                        "disableControls": [
                          "separator_char",
                          "use_quotes_around_strings",
                          "sheet_name"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "XML",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "xml",
                        "disableControls": [
                          "separator_char",
                          "use_quotes_around_strings",
                          "sheet_name",
                          "use_first_row_as_cols"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "category",
                  "label": "Data Category (e.g. financials, legal, products)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "separator_char",
                  "label": "Separator Character",
                  "help": "This applies to CSV only. Deafault: \",\"",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "use_quotes_around_strings",
                  "label": "Use Quotes Around Strings",
                  "help": "This applies to CSV only",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": "yes"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": "no"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "use_first_row_as_cols",
                  "label": "Use First Row as Columns",
                  "help": "This applies to JSON files",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": "true"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": "false"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sheet_name",
                  "label": "Excel Sheet Name",
                  "help": "Leave empty if Excel file only contains one sheet",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_enrich",
                  "label": "Enable post-processing / data enrichment for this dataset?"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "enrich_name",
                  "label": "Name of Post-processing lambda function",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "env-vars",
                  "label": "Environment Variables for Post-processing Lambda",
                  "dynamic_datasource": "data?type=aws_infra&filter_name=resource_type,resource_name&filter_value=lambda_function,${enrich_name}&params=env_vars",
                  "add_value_label": "Add new environment variable for Post-processing Lambda"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "pk",
                  "cli_arg": "primary_key",
                  "label": "Primary Key (if known)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "partitions",
                  "label": "Partitions",
                  "help": "Comma separated list of attributes to organize this dataset [default: year,month,day]",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "source_location",
                  "cli_arg": "source-location",
                  "label": "Source Location",
                  "help": "Source Location for information only",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_transform",
                  "label": "Enable transformation for this dataset. RapidCloud will automatically trigger Transformation Glue job for this data set upon completion of CDC."
                }
              ]
            }
          ],
          "order": 60,
          "info": "### Semi-structured Data\n\n\n\nRegister each unique type of file. RapidCloud supports ingestion of CSV, JSON, XML and Excel files.\n\n\n\n**Enter Dataset Name with no spaces**\n\n\n\nThis uniquely identifes ingested data. For example, if you're ingesting CSV file that contains list of monthly invoices, then you can name this dataset `monthly_invoices`\n\n\n\n**Enable this dataset?**\n\n\n\nThis instructs RapidCloud to start CDC for this dataset as soon as it is uploaded to `ingestion` bucket.\n\n\n\n**CDC Type**\n\n\n\nCDC (Change Data Capture) type instructs RapidCloud how to apply newly ingested files. \n\n\n\n- Delta (each file only contains incremental changes)\n\n- Cumulative (each file contains all data and replaces previous file)\n\n- Cumulative YTD (each file contains all data for specified year and replaces previous file for that year)\n\n- Cumulative MTD (each file contains all data for specified year/month and replaces previous file for that year/month)\n\n\n\n**File Format**\n\n\n\nChoose file format. RapidCloud currently supports CSV, JSON, XML and Excel files\n\n\n\n**Data Category (e.g. financials, legal, products)**\n\n\n\nData Category is a convenient way of categorizing your files \n\n\n\n**Separator Character**\n\n\n\nThis applies to CSV files only. Deafault: \",\"\n\n\n\n**Use Quotes Around Strings**\n\n\n\nThis applies to CSV only\n\n\n\n**Excel Sheet Name**\n\n\n\nThis only applies to Excel files with multiple worksheets. Leave empty if Excel file only contains one worksheet\n\n\n\n**Enable post-processing / data enrichment for this dataset?**\n\n\n\nThis instructs RapidCloud to automatically trigger a lambda function as soon as file is ingested, to run some post-processing or business logic. For example, enriching dataset with additional data or calculating some derived values.\n\n\n\n**Name of Post-processing lambda function**\n\n\n\nName of the lambda function to be created by RapidCloud to run post-processing logic\n\n\n\n**Env Vars**\n\n\n\nEnvironment Variables for post-processing Lambda Function\n\n\n\n**Enable transformations for this dataset**\n\n\n\nThis instructs RapidCloud to automatically trigger transformation or analysis job for this dataset.\n\n\n\n**Primary Key**\n\n\n\nIf known, enter primary key for this dataset.\n\n\n\n**Partitions**\n\n\n\nComma separated list of attributes to organize this data in the datalake [default: `year,month,day,timestamp`]\n\n\n\n**Source Location**\n\n\n\nSource Location\n"
        },
        {
          "type": "Theia::Action",
          "label": "Semi-structured Data Pipeline",
          "id": "semi-structured-pipeline",
          "module": "semi-structured-pipeline",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "semi-structured-pipeline",
              "datasource": "data?type=metadata&filter_name=module&filter_value=semi-structured-pipeline",
              "env_param_required": true,
              "columns": [
                "name",
                "rds_name",
                "rds_engine",
                "rds_type",
                "transform_name",
                "transform_job_type",
                "timestamp"
              ],
              "title": "Semi-structured Data Pipeline with Transformations",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "semi-structured-pipeline",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "semi-structured-pipeline",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Data Pipeline Name",
                  "help": "Enter Data Pipeline Name (no space or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::CompositeModule",
                  "id": "composite_module",
                  "modules": [
                    {
                      "type": "Theia::Control::Toggle",
                      "id": "transform_enabled",
                      "label": "Add Transformation Glue Job for existing Datasets",
                      "controls": [
                        {
                          "type": "Theia::Control::Input",
                          "id": "transform_name",
                          "label": "Transformation Name",
                          "help": "Transformation Name (no spaces or special characters)",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::MultiSelect",
                          "id": "transform_base_datasets",
                          "label": "Base Datasets",
                          "help": "Select source datasets for this transformation",
                          "datasource": "formdata?type=dataset|dataset_semi_structured&field=name"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "transform_job_type",
                          "label": "Job Type",
                          "help": "Comma separated names of previously added datasets",
                          "options": [
                            {
                              "type": "Theia::Option",
                              "label": "Python shell",
                              "value": "pythonshell"
                            },
                            {
                              "type": "Theia::Option",
                              "label": "Python Spark",
                              "value": "glueetl"
                            }
                          ]
                        },
                        {
                          "type": "Theia::Control::Toggle",
                          "id": "transform_refresh_spice",
                          "label": "Refresh results as QuickSight SPICE dataset"
                        }
                      ]
                    },
                    {
                      "type": "Theia::Control::Toggle",
                      "id": "rds_enabled",
                      "label": "Create RDS or Aurora Database",
                      "controls": [
                        {
                          "type": "Theia::Control::Input",
                          "id": "rds_name",
                          "label": "Database Name",
                          "help": "Enter database name (no space or special characters)",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "rds_engine",
                          "label": "Database Engine",
                          "help": "",
                          "options": [
                            {
                              "type": "Theia::Option",
                              "label": "MySQL",
                              "value": "mysql"
                            },
                            {
                              "type": "Theia::Option",
                              "label": "PostgreSQL",
                              "value": "postgres"
                            }
                          ]
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "rds_type",
                          "label": "AWS Database Service",
                          "help": "",
                          "options": [
                            {
                              "type": "Theia::Option",
                              "label": "RDS",
                              "value": "rds"
                            },
                            {
                              "type": "Theia::Option",
                              "label": "Aurora",
                              "value": "aurora"
                            }
                          ]
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "rds_multi_az",
                          "label": "Multi Az",
                          "help": "Multi Az",
                          "default": "no",
                          "options": [
                            {
                              "type": "Theia::Option",
                              "label": "Yes",
                              "value": "yes"
                            },
                            {
                              "type": "Theia::Option",
                              "label": "No",
                              "value": "no"
                            }
                          ]
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "rds_database_name",
                          "label": "Schema Name",
                          "help": "Enter schema name (no space or special characters)",
                          "inputType": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "order": 65,
          "info": "### Semi-Structured Data Pipeline\n\n\n\nThis is a quickstart for creating end-to-end data pipeline for semi-structured files (e.g. JSON, CSV). It includes CDC (change data capture), transformation and publishing into RDS database (MySQL or Postgres)  \n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "Semi-Structured Data Formatting",
          "id": "formats",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "formats",
              "datasource": "data?type=format",
              "env_param_required": true,
              "columns": [
                "phase",
                "dataset",
                "attr",
                "attr_type",
                "from_format",
                "to_format"
              ],
              "title": "Data Formatting",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "format",
              "title": "",
              "description": "",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "ingest",
                    "command": "add-format"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "pipeline_phase",
                  "label": "Data Pipeline Phase",
                  "help": "Data formatting is only supported during ingestion",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Ingestion",
                      "value": "ingestion"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset",
                  "label": "Dataset Name",
                  "help": "",
                  "datasource": "formdata?type=dataset_semi_structured&field=name"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "attr",
                  "label": "Attribute Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "attr_type",
                  "label": "Attribute Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Date or Datetime",
                      "value": "date"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Amount",
                      "value": "amount"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Full Name",
                      "value": "fullname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Any",
                      "value": "any"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "from_format",
                  "label": "Source Format",
                  "help": "Dates: '%m/%d/%Y' (10/15/2020), '%m/%d/%Y %H:%M' (10/15/2020 13:59); Amount: '$*' ($152.75); Full Name: 'l,f' (Doe, John), 'f l'",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "to_format",
                  "label": "Target Format",
                  "help": "Dates: '%Y-%m-%d' (2020-10-15); Amount: '*' (152.75); Full Name: 'split'",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 70,
          "info": "### Data Formatting\n\n\n\nSpecify formatting rules at the field level for a dataset \n\n\n\n**Data Pipeline Phase**\n\n\n\nData formatting is currently only supported during ingestion\n\n\n\n**Dataset Name**\n\n\n\nSelect existing dataset \n\n\n\n**Attribute Name**\n\n\n\nEnter attribute name\n\n\n\n**Attribute Type**\n\n\n\nSelect attribute type \n\n\n\n**Source Format**\n\n\n\nSpecify source format using Python format structure\n\n\n\nExamples:\n\n- Dates: '%m/%d/%Y' (10/15/2020), '%m/%d/%Y %H:%M' (10/15/2020 13:59)\n\n- Amount: '$*' ($152.75) \n\n- Full Name: 'l,f' (Doe, John), 'f l'\n\n- Use \"eval\" to instruct RapidCloud to apply \"`target format`\" by evaluating Python statement\n\n\n\n**Target Format**\n\n\n\nSpecify target format using Python format structure\n\n\n\nExamples:\n\n- Dates: '%Y-%m-%d' (2020-10-15)\n\n- Amount: '*' (152.75)\n\n- Full Name: 'split'\n\n- Enter Python statement (e.g `patient_gender[0].upper()`) if \"`source format`\" is `eval`\n"
        },
        {
          "type": "Theia::Action",
          "label": "Enable Semi-structured",
          "id": "enable_semi_structured",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "status",
              "title": "Enable Semi-structured Datasets",
              "description": "Enable all disabled semi-structured datasets and run CDC for initially uploaded files for the first time",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to enable all disabled semi-structured datasets?",
                  "command": {
                    "phase": "ingest",
                    "command": "enable-semi-structured"
                  }
                }
              ]
            }
          ],
          "order": 80
        },
        {
          "type": "Theia::Action",
          "label": "Documents & Binary Files",
          "id": "unstructured",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "unstructured",
              "datasource": "data?type=dataset_unstructured",
              "env_param_required": true,
              "columns": [
                "name",
                "type",
                "category",
                "enable_transform"
              ],
              "title": "Documents & Binary Files",
              "description": "Configure ingestion of binary files (e.g. invoices, documents, audio, video, images, etc)",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "ingest",
                    "command": "register-unstructured"
                  }
                },
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Enter Dataset Name with no spaces",
                  "help": "e.g. invoices, resumes, scanned_hr_forms, security_videos",
                  "inputType": "text",
                  "readonly_edit": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "type",
                  "label": "File Type (optional)",
                  "help": "e.g. document, image, video, audio",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "category",
                  "label": "Data Category (optional)",
                  "help": "e.g. financials, legal, products",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "size",
                  "label": "Approximate Total Initial Size in GiB (optional)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "count",
                  "label": "Approximate number of initial files (optional)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rate_of_change",
                  "label": "Rate of Change in GiB/hr (optional)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "source_location",
                  "label": "Location in the filesystem (optional)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_transform",
                  "label": "Enable custom transformations for this dataset via Glue Job?"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_textract",
                  "label": "Enable AWS Textract for this data?"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "textract_fields",
                  "key_label": "Field Name",
                  "value_label": "Minimum Confidence Score",
                  "label": "Fields to be retrieved from the documents by Amazon Textract. Add field name  as it appears on the document and corresponding confidence score threshold.",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,command,name&filter_value=ingest,register-unstructured,${name}&result=textract_fields",
                  "add_value_label": "Add Field"
                }
              ]
            }
          ],
          "order": 90,
          "info": "### Unstructured Data\n\n\n\nRegister each unique type of unstructured file\n\n\n\n**Enter Dataset Name with no spaces**\n\n\n\nThis uniquely identifes ingested data. For example, if you're ingesting resumes as PDF files, then you can name this dataset `resumes`\n\n\n\n**File Type**\n\n\n\ne.g. document, image, video, audio\n\n\n\n**Data Category (e.g. financials, legal, products)**\n\n\n\nData Category is a convenient way of categorizing your files \n\n\n\n**Total Initial Size (optional)**\n\n\n\nApproximate Total Initial Size (GB)\n\n\n\n**Initial Count (optional)**\n\n\n\nApproximate number of files (if known)\n\n\n\n**Rate of Change**\n\n\n\nRate of Change (GB/hr if known)\n\n\n\n**Location in the filesystem (optional)**\n\n\n\nSource file Location for reference\n\n\n\n**Enable transformations for this dataset**\n\n\n\nThis instructs RapidCloud to automatically trigger transformation or analysis job for this file\n"
        },
        {
          "type": "Theia::Action",
          "label": "Upload Files",
          "id": "upload_files",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "Upload Files to S3",
              "description": "",
              "submit": "Submit",
              "commands": [],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset_type",
                  "label": "Select File Type to upload",
                  "help": "",
                  "default": "dataset_unstructured",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Binary/Unstructured (e.g. invoices, documents, audio, video, images, etc)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "dataset_unstructured",
                        "enableControls": [
                          "samples"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Semi-Structured (Json, CSV, Excel, XML)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "dataset_semi_structured",
                        "disableControls": [
                          "samples"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "samples",
                  "label": "Uploaded files should only be used for learning purposes. This feature is only available for Binary/Unstructured files."
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset",
                  "label": "Select existing dataset to upload files for. If you don't see a desired dataset, then you must first add it via `Documents & Binary Files` page. Alternatively, select `Unknown` to use RapidCloud document categorization algorithm (this is only applicable for documents). If you use `Unknown`, then you must first upload sample files",
                  "help": "Select a dataset",
                  "dynamic_datasource": "formdata?type=${dataset_type}&field=name&default_option=Unknown",
                  "default": "Unknown"
                },
                {
                  "label": "",
                  "help": "",
                  "id": "files",
                  "type": "Theia::Control::Upload",
                  "multiple": true,
                  "dynamic_datasource": "formdata_from_aws?type=generate_presigned_url&dataset_type=${dataset_type}&dataset=${dataset}&samples=${samples}",
                  "new_hide": true
                }
              ]
            }
          ],
          "order": 100,
          "info": "### Upload Files\n\n\n\nUpload Files to current environment's `*-ingestion` bucket\n\n\n\n**Select File Type to upload**\n\n\n\nRapidCloud supports two general categories of files:\n\n- Binary/Unstructured (e.g. invoices, documents, audio, video, images, etc)\n\n- Semi-Structured (Json, CSV, Excel, XML)\n\n\n\nBinary/Unstructured files get uploaded using `{env}-ingestion/files/*` S3 Object Key Prefix.\n\n\n\nSemi-Structured files get uploaded using `{env}-ingestion/semistructured/*`  S3 Object Key Prefix.\n\n\n\n**Samples Toggle**\n\n\n\nUploaded files should only be used for learning purposes. This feature is only available for Binary/Unstructured files.\n\n\n\nSample files get uploaded using `{env}-ingestion/files/rc-samples/{dataset_type}/*` S3 Object Key Prefix.\n\n\n\n**File Category (aka Dataset Type)**\n\n\n\nSelect existing dataset to upload files for. If you don't see a desired dataset, then you must first add it via `Documents & Binary Files` page. \n\n\n\nFiles get uploaded using `{env}-ingestion/files/{dataset_type}/*` S3 Object Key Prefix.\n\n\n\nAlternatively, select `Unknown` to use RapidCloud document categorization algorithm (this is only applicable for documents). If you use `Unknown`, then you must first upload sample files.\n\n\n\n`Unknown` files get uploaded using `{env}-ingestion/files/rc-any/*` S3 Object Key Prefix.\n"
        },
        {
          "type": "Theia::Action",
          "label": "Streaming (Kinesis or Kafka)",
          "id": "streams",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "streams",
              "datasource": "data?type=stream",
              "env_param_required": true,
              "columns": [
                "name",
                "type",
                "consumer",
                "enabled"
              ],
              "title": "Streams",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "Kinesis or Managed Kafka streams are consumed by Lambda function or Glue streaming job in realtime",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save Event Source",
                  "command": {
                    "phase": "ingest",
                    "command": "register-stream",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Stream Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "type",
                  "label": "Stream Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Kinesis Data Streams",
                      "value": "kinesis"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Managed Kafka",
                      "value": "kafka"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "event_source_arn",
                  "label": "Event Source ARN",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "consumer",
                  "label": "Consumer Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Lambda Function",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "lambda_function",
                        "enableControls": [
                          "memory_size"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Glue Spark Streaming Job",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "glue_streaming",
                        "disableControls": [
                          "memory_size"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "memory_size",
                  "label": "Memory Size",
                  "help": "For Lambda function only",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 110,
          "info": "### Streaming \n\n\n\nKinesis or Managed Kafka streams are consumed by Lambda functions or Glue streaming jobs in real-time.\n\n\n\n**Stream Name**\n\n\n\nStream Name (no spaces or special characters)\n\n\n\n**Stream Type**\n\n\n\n`Kinesis Data Streams` and `Managed Kafka` are currently supported\n\n\n\n**Event Source ARN**\n\n\n\nAWS ARN for your streaming service\n\n\n\n**Consumer Type**\n\n\n\n`Lambda Function` and `Glue Spark Streaming Job` are currently supported \n\n\n\n**Memory Size**\n\n\n\nIn MB - for Lambda function only (default 128 MB)"
        },
        {
          "type": "Theia::Action",
          "label": "Activate Ingestion Pipelines",
          "id": "start",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "status",
              "title": "Activate Environment",
              "description": "Equivalent of running `kc ingest start` command. <br/><br/>This action performs the following (where applicable) <br/>- (1) generate DMS table mappings <br/>- (2) generate ingestiondb and rawdb catalog tables for relational data <br/>- (3) generate transformation Glue job templates <br/>- (4) activate daily ingestion schedules via DMS <br/>- (5) generate ingestiondb catalog tables for semi-structured data <br/>- (6) deploy generated Glue jobs (this will replace existing Glue scripts)",
              "submit": "Activate Environment",
              "commands": [
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want activate data ingestion for this environment?",
                  "command": {
                    "phase": "ingest",
                    "command": "start"
                  }
                }
              ]
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Datasync",
          "id": "datasync",
          "module": "datasync",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datasync",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=datasync,create",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "Datasync service",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "datasync",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "datasync",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Enter RC resource name here.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "agent_name",
                  "cli_id": "datasync_agent_name",
                  "label": "Datasync agent name",
                  "help": "Name of the DataSync Agent.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ip_address",
                  "cli_id": "datasync_ip_address",
                  "label": "IP address",
                  "help": "DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with activation_key. DataSync Agent must be accessible on port 80 from where Terraform is running.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "nfs_location_name",
                  "cli_id": "datasync_nfs_location_name",
                  "label": "(Source) NFS location name",
                  "help": "Specify a name for this nfs location",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "server_hostname",
                  "cli_id": "datasync_server_hostname",
                  "label": "(Source) NFS server hostname",
                  "help": "Specifies the IP address or DNS name of the NFS server.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "nfs_subdirectory",
                  "cli_id": "datasync_nfs_subdirectory",
                  "label": "(Source) NFS server subdirectory",
                  "help": "(Source) Subdirectory within the NFS server to perform actions as source. Should be exported by the NFS server.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "s3_bucket_name",
                  "cli_id": "datasync_s3_bucket_name",
                  "label": "(Destination) S3 bucket Name",
                  "help": "S3 Bucket name for the destination.",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=s3,create_bucket&field=name&module_name_arg=datasync"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "s3_object_prefix",
                  "cli_id": "datasync_s3_object_prefix",
                  "label": "(Destination) S3 bucket object prefix",
                  "help": "(Destination) Prefix to perform actions within the S3 bucket.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "endpoint_vpc_id",
                  "cli_id": "datasync_endpoint_vpc_id",
                  "label": "VPC ID",
                  "help": "The ID of the VPC in which the vpc endpoint will be used.",
                  "datasource": "formdata_from_aws?type=vpcs&module_name_arg=datasync"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "endpoint_security_group_ids",
                  "cli_id": "datasync_endpoint_security_group_idss",
                  "label": "Security groups ids to assign to the vpc endpoint",
                  "help": "The ID of one or more security groups to associate with the network interface for the vpc endpoint.",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=datasync"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "endpoint_subnet_ids",
                  "cli_id": "datasync_endpoint_subnet_ids",
                  "label": "Subnets Ids to assing to the vpc endpoint.",
                  "help": "The ID of one or more subnets in which to create a network interface for the vpc endpoint.",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=datasync"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "agent_security_groups_ids",
                  "cli_id": "datasync_agent_security_groups_ids",
                  "label": "Security group id to assing to the datasync agent.",
                  "help": "The ID of the security group used to protect your data transfer task subnets.",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=datasync"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "agent_subnet_ids",
                  "cli_id": "datasync_agent_subnet_ids",
                  "label": "Subnet id for the datasync agent.",
                  "help": "The subnet id in which DataSync will create elastic network interfaces for each data transfer task.",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=datasync"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Datasync service\n\n\n\nDatasync is a service that will help you transfering data from one location to another.\n\n\n\nAt the moment this service will provide you with a datasync agent, vpc endpoint to access datasync service, nfs location (source) and s3 location (destination).\n\n\n\nPrerequites:\n\nDatasync service running in some sort of compute. We recommend you setup your service as close to the source data as possible. See more on how to setup your service [here](https://docs.aws.amazon.com/datasync/latest/userguide/deploy-agents.html).\n\n\n\n**Rapid cloud resource name**\n\nName for the RC resource that will identify this within the RC console.\n\n\n\n**Agent name**\n\nUser friendly name to assign to the Datasync agent.\n\n\n\n**IP address of the agent**\n\nDataSync Agent IP address to retrieve activation key during resource creation. DataSync Agent must be accessible on port 80 from where Rapidcloud is running.\n\n\n\n**Source NFS server hostname**\n\npecifies the IP address or DNS name of the NFS server. The DataSync Agent(s) use this to mount the NFS server.\n\n\n\n**NFS subdirectory**\n\nSubdirectory to perform actions as source or destination. Should be exported by the NFS server.\n\n\n\n**Destination s3 bucket name**\n\nS3 Bucket name to pick as destination.\n\n\n\n**VPC Id**\n\nThe ID of the VPC in which the endpoint will be used.\n\n\n\n**Security groups for the vpc endpoint**\n\nThe ID of one or more security groups to associate with the network interface.\n\n\n\n**Security groups for the Datasync agent**\n\nThe Ids of the security groups used to protect your data transfer task subnets.\n\n\n\n**Subnet ids for the Datasync agent**\n\nThe Ids of the subnets in which DataSync will create elastic network interfaces for each data transfer task.\n"
        },
        {
          "type": "Theia::Action",
          "label": "Data transfer task",
          "id": "datasync_create_task",
          "module": "datasync",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datasync_task_create",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=datasync,create_task",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "Datasync task",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "datasync_task_create",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "datasync",
                    "command": "create_task",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "RC Name",
                  "help": "Enter RC Name with no spaces",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ds_task_name",
                  "cli_id": "ds_task_name",
                  "label": "Datasync task name",
                  "help": "Enter task name with no spaces",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dst_datasync_name",
                  "cli_id": "dst_datasync_name",
                  "label": "Datasync agent and location",
                  "help": "Select agent and assigned locations",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=datasync,create&field=name&module_name_arg=datasync"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "dst_exclude_value",
                  "cli_id": "dst_exclude_value",
                  "label": "Exclude Pattern",
                  "help": "Datasync exclude simple pattern. E.g. /folder1|/folder2 or * to exclude all",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "dst_include_value",
                  "cli_id": "dst_include_value",
                  "label": "Include Pattern",
                  "help": "Datasync include simple pattern. E.g. /folder1|/folder2",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "dst_schedule_expression",
                  "cli_id": "dst_schedule_expression",
                  "label": "Schedule expression",
                  "help": "Specifies the schedule you want your task to use for repeated executions.",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Datasync task\n\n\n\nA Datasync task is what will actually help you accomplish the data transfer.\n\n\n\nFor a task you will have to pick a source and a destination.\n\n\n\n**Rapid cloud resource name**\n\nName for the RC resource that will identify this within the RC console.\n\n\n\n**Task name**\n\nName of the DataSync Task.\n\n\n\n**Location Destination ID**\n\nLocation ID of the destionation for the data transfer.\n\n\n\n**Location Source ID**\n\nLocation ID of the source for the data transfer.\n\n\n\n**Exclude pattern**\n\nA single filter string that consists of the patterns to exclude. The patterns are delimited by \"|\" (that is, a pipe), for example: /folder1|/folder2\n\n\n\n**Include pattern**\n\nA single filter string that consists of the patterns to exclude. The patterns are delimited by \"|\" (that is, a pipe), for example: /folder1|/folder2\n\n\n\n**Schedule expression**\n\nSpecifies a schedule used to periodically transfer files from a source to a destination location. See more on scheduled expressinos [here](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)."
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Document Processing",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/file-invoice-solid.svg",
      "route": "document_processing",
      "id": "document_processing",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Configure Documents",
          "id": "documents",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "documents",
              "datasource": "data?type=dataset_unstructured",
              "env_param_required": true,
              "columns": [
                "name",
                "enable_textract"
              ],
              "title": "Documents",
              "description": "Configure ingestion of documents (e.g. invoices, bills, etc)",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "ingest",
                    "command": "register-unstructured"
                  }
                },
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Document Name (no spaces allowed)",
                  "help": "e.g. fpl_bills, sales_exec_resumes, scanned_employee_medical_forms",
                  "inputType": "text",
                  "readonly_edit": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "category",
                  "label": "Document Category (optional)",
                  "help": "e.g. invoices, bills, etc",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_textract",
                  "label": "Enable AWS Textract for this data?",
                  "default": true
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "textract_fields",
                  "key_label": "Field Name",
                  "value_label": "Minimum Confidence Score",
                  "label": "Fields to be retrieved from the documents by Amazon Textract. Add field name  as it appears on the document and corresponding confidence score threshold.",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,command,name&filter_value=ingest,register-unstructured,${name}&result=textract_fields",
                  "add_value_label": "Add Field"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "multiple_sections",
                  "help": "Select `Yes` if a single document may contain multiple independent sections, e.g. multiple meter readings, multiple receipts, etc",
                  "label": "Multiple Sections",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "section_id_name"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "section_id_name"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "section_id_name",
                  "help": "Name of the field to uniquely identify sections within the document. If this field needs to be derived via a rule, then make sure to define that rule below.",
                  "inputType": "text",
                  "label": "Section Identifer Name"
                },
                {
                  "type": "Theia::Control::CompositeGroup",
                  "id": "rules",
                  "label": "Document Parsing Rules",
                  "help": "",
                  "controls": [
                    {
                      "type": "Theia::Control::Input",
                      "id": "name",
                      "help": "Name of the field produced by this rule",
                      "inputType": "text",
                      "label": "Result Name"
                    },
                    {
                      "type": "Theia::Control::Select",
                      "id": "rule_type",
                      "help": "",
                      "label": "Rule Type",
                      "options": [
                        {
                          "type": "Theia::Option",
                          "label": "Resolve Section Identifer",
                          "value": "rule_resolve_primary"
                        },
                        {
                          "type": "Theia::Option",
                          "label": "Default Value",
                          "value": {
                            "type": "Theia::DataOption",
                            "value": "rule_default_value",
                            "hideControls": [
                              "table_title",
                              "row_name",
                              "column_name"
                            ],
                            "showControls": [
                              "name",
                              "rule_value"
                            ]
                          }
                        },
                        {
                          "type": "Theia::Option",
                          "label": "Assume Value",
                          "value": "rule_assume_value"
                        },
                        {
                          "type": "Theia::Option",
                          "label": "Grid Location",
                          "value": "rule_grid_location_structured"
                        },
                        {
                          "type": "Theia::Option",
                          "label": "Resolve Month",
                          "value": "rule_resolve_month"
                        },
                        {
                          "type": "Theia::Option",
                          "label": "Labels or Keywords",
                          "value": "rule_labels"
                        }
                      ]
                    },
                    {
                      "type": "Theia::Control::Input",
                      "id": "table_title",
                      "help": "Enter Grid Title exactly how it appears in the document",
                      "inputType": "text",
                      "label": "Grid Title"
                    },
                    {
                      "type": "Theia::Control::Input",
                      "id": "row_name",
                      "help": "Enter Grid Row Name",
                      "inputType": "text",
                      "label": "Grid Row Name"
                    },
                    {
                      "type": "Theia::Control::Input",
                      "id": "column_name",
                      "help": "Enter Grid Column Name",
                      "inputType": "text",
                      "label": "Grid Column Name"
                    },
                    {
                      "type": "Theia::Control::Input",
                      "id": "rule_value",
                      "help": "See help section on the right by clicking `i` icon",
                      "inputType": "text",
                      "label": "Rule Value or Expression"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "filler",
                  "label": "",
                  "help": "",
                  "inputType": "hidden"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Documents\n\n\n\nRegister each unique type of document\n\n\n\n**Document Name with no spaces**\n\n\n\nThis uniquely identifes this document. For example, if you're ingesting Florida Power & Light Electricity Bills, then you can name this dataset `fpl_bills`\n\n\n\n**Document Category (optional)**\n\n\n\nDocument Category is a convenient way of categorizing your files (e.g. invoices, bills, etc)\n\n\n\n**Enable transformations for this dataset**\n\n\n\nThis instructs RapidCloud to automatically trigger transformation or analysis job for this file\n"
        },
        {
          "type": "Theia::Action",
          "label": "Upload Files",
          "id": "upload_files",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "Upload Files to S3",
              "description": "",
              "submit": "Submit",
              "commands": [],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset_type",
                  "label": "Select File Type to upload",
                  "help": "",
                  "default": "dataset_unstructured",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Binary/Unstructured (e.g. invoices, documents, audio, video, images, etc)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "dataset_unstructured",
                        "enableControls": [
                          "samples"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Semi-Structured (Json, CSV, Excel, XML)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "dataset_semi_structured",
                        "disableControls": [
                          "samples"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "samples",
                  "label": "Uploaded files should only be used for learning purposes. This feature is only available for Binary/Unstructured files."
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset",
                  "label": "Select existing dataset to upload files for. If you don't see a desired dataset, then you must first add it via `Documents & Binary Files` page. Alternatively, select `Unknown` to use RapidCloud document categorization algorithm (this is only applicable for documents). If you use `Unknown`, then you must first upload sample files",
                  "help": "Select a dataset",
                  "dynamic_datasource": "formdata?type=${dataset_type}&field=name&default_option=Unknown",
                  "default": "Unknown"
                },
                {
                  "label": "",
                  "help": "",
                  "id": "files",
                  "type": "Theia::Control::Upload",
                  "multiple": true,
                  "dynamic_datasource": "formdata_from_aws?type=generate_presigned_url&dataset_type=${dataset_type}&dataset=${dataset}&samples=${samples}",
                  "new_hide": true
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Upload Files\n\n\n\nUpload Files to current environment's `*-ingestion` bucket\n\n\n\n**Select File Type to upload**\n\n\n\nRapidCloud supports two general categories of files:\n\n- Binary/Unstructured (e.g. invoices, documents, audio, video, images, etc)\n\n- Semi-Structured (Json, CSV, Excel, XML)\n\n\n\nBinary/Unstructured files get uploaded using `{env}-ingestion/files/*` S3 Object Key Prefix.\n\n\n\nSemi-Structured files get uploaded using `{env}-ingestion/semistructured/*`  S3 Object Key Prefix.\n\n\n\n**Samples Toggle**\n\n\n\nUploaded files should only be used for learning purposes. This feature is only available for Binary/Unstructured files.\n\n\n\nSample files get uploaded using `{env}-ingestion/files/rc-samples/{dataset_type}/*` S3 Object Key Prefix.\n\n\n\n**File Category (aka Dataset Type)**\n\n\n\nSelect existing dataset to upload files for. If you don't see a desired dataset, then you must first add it via `Documents & Binary Files` page. \n\n\n\nFiles get uploaded using `{env}-ingestion/files/{dataset_type}/*` S3 Object Key Prefix.\n\n\n\nAlternatively, select `Unknown` to use RapidCloud document categorization algorithm (this is only applicable for documents). If you use `Unknown`, then you must first upload sample files.\n\n\n\n`Unknown` files get uploaded using `{env}-ingestion/files/rc-any/*` S3 Object Key Prefix.\n"
        },
        {
          "type": "Theia::Action",
          "label": "Document Processing Log",
          "id": "textract_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "textract_log",
              "datasource": "paginated_data?type=cdc_log&filter_name=enable_textract&filter_value=True",
              "pagination": "paginated_data_info?type=cdc_log&filter_name=enable_textract&filter_value=True&sort_by=last_modified&sort_order=desc",
              "env_param_required": true,
              "columns": [
                "status",
                "document_match",
                "s3_key",
                "last_modified",
                "job_name"
              ],
              "title": "Amazon Textract Log",
              "description": "Log of Amazon Textract processing results",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "textract_log",
              "title": "",
              "description": ""
            }
          ],
          "order": 1000
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Data Catalog",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/table-solid.svg",
      "route": "catalog",
      "id": "catalog",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Update Glue Catalogs",
          "id": "update_catalogs",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "update_catalogs",
              "title": "Update Glue Catalog via Glue Crawlers",
              "description": "This process runs Glue crawler for the selected datalake area",
              "submit": "Run Crawlers",
              "commands": [
                {
                  "label": "Run Ingestion Crawlers",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "deploy",
                    "command": "run-crawlers",
                    "pipeline_phase": "ingestion"
                  }
                },
                {
                  "label": "Run Raw Crawlers",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "deploy",
                    "command": "run-crawlers",
                    "pipeline_phase": "raw"
                  }
                },
                {
                  "label": "Run Analysis Crawlers",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "deploy",
                    "command": "run-crawlers",
                    "pipeline_phase": "analysis"
                  }
                }
              ]
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "Change Data Types",
          "id": "post-crawlers",
          "module": "ingest",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "post-crawlers",
              "title": "Change Glue Data Types (ingestion catalog)",
              "description": "This process allows bulk change of data types in ingestion catalog after the initial ingestion process completed and catalog generated for the first time. For example, this might be needed when Glue crawler identifies a field as numeric, but it has to be string",
              "commands": [
                {
                  "label": "Change data types",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to run this?",
                  "command": {
                    "phase": "ingest",
                    "command": "post-crawlers"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "from-format",
                  "label": "From Format",
                  "help": "e.g double, bigint",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "to-format",
                  "label": "To Format",
                  "help": "e.g string",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 20
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Analytics",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/magnifying-glass-chart-solid.svg",
      "route": "transform",
      "id": "transform",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Transformations",
          "id": "transformations",
          "module": "transform",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "transformations",
              "datasource": "data?type=transformation",
              "env_param_required": true,
              "columns": [
                "name",
                "base_datasets",
                "job_type",
                "refresh_spice"
              ],
              "title": "Transformations (ETL/ELT)",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "transform",
                    "command": "add-dataset",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Transformation Name",
                  "help": "Transformation Name (no spaces or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "base_datasets",
                  "label": "Base Datasets",
                  "help": "Select source datasets for this transformation",
                  "datasource": "formdata?type=dataset|dataset_semi_structured&field=name"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "job_type",
                  "label": "Job Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Python shell",
                      "value": "pythonshell"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Python Spark",
                      "value": "glueetl"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "refresh_spice",
                  "label": "Refresh results as QuickSight SPICE dataset"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Transformations\n\n\n\nTransformations are `Glue Jobs` to perform batch style data transformations, aggregations, integrations and analytics. RapidCloud generates Glue job templates for you, based on the selected `Job Type`. Transformations use `raw` catalog for input datasets and `analysis` catalog for the results. Transformations are automatically executed as part of you Data Pipeline, and when completed, they optionally trigger data publishing jobs\n\n\n\n**Transformation Name**\n\n\n\nTransformation Name (no spaces or special characters)\n\n\n\n**Base Datasets**\n\n\n\nSelect source datasets from `raw` catalog for this transformation\n\n\n\n**Job Type**\n\n\n\n`Python Shell` and `Python Spark` job types are currently supported\n\n\n\n**Refresh results as QuickSight SPICE dataset**\n\n\n\nIf enabled, transformation job will automatically update QuickSight SPICE Datasets to improve BI reports and dashboards performance when using Amazon QuickSight"
        },
        {
          "type": "Theia::Action",
          "label": "Analytics",
          "id": "analytics",
          "module": "analytics",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "analytics",
              "datasource": "data?type=analytics",
              "env_param_required": true,
              "columns": [
                "name",
                "runtime"
              ],
              "title": "Analytics",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "analytics",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "analytics",
                    "command": "add-service",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Job Name",
                  "help": "No spaces or special characters (e.g. fraud_detection, customer_recommendations)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "runtime",
                  "label": "Runtime execution service",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "AWS EMR - Spark Streaming",
                      "value": "emr"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AWS Glue Streaming",
                      "value": "glue"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Analytics\n\n\n\nSet up real-time or near real-time analytics. RapidCloud generates job templates for you, based on the selected `Runtime execution service`\n\n\n\n**Job Name**\n\n\n\nJob Name (no spaces or special characters)\n\n\n\n**Runtime execution service**\n\n\n\n`AWS EMR Spark Streaming` and `AWS Glue Streaming` are currently supported\n"
        },
        {
          "type": "Theia::Action",
          "label": "Glue Jobs",
          "id": "custom_glue_job",
          "module": "aws",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "custom_glue_job",
              "datasource": "data?type=aws_infra&filter_name=command&filter_value=add-glue-job&field=job_type&field_value=params.command.name",
              "env_param_required": true,
              "columns": [
                "resource_name",
                "resource_type",
                "job_type",
                "command",
                "timestamp"
              ],
              "title": "Custom Glue Job",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "aws_infra",
              "title": "",
              "description": "",
              "readonly": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "aws",
                    "command": "add-glue-job",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "resource_name",
                  "cli_arg": "name",
                  "label": "Glue Job Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "job_type",
                  "label": "Job Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Python shell",
                      "value": "pythonshell"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Spark",
                      "value": "glueetl"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Spark streaming",
                      "value": "gluestreaming"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Custom Glue Job\n\n\n\nCreate a custom Glue Job. RapidCloud generates job templates for you, based on the selected `Job Type`\n\n\n\n**Glue Job Name**\n\n\n\nGlue Job Name (no spaces or special characters)\n\n\n\n**Job Type**\n\n\n\n`Python Shell`, `Python Spark` and `Python Spark Streaming` are currently supported\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Reports",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/chart-pie-solid.svg",
      "route": "report",
      "id": "report",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Define Reports",
          "id": "report_define_report",
          "module": "report",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "report_define_report",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=report,define_report",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "Define Reports",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "report_define_report",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this Report Definition?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "report",
                    "command": "define_report",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "output_format",
                  "help": "",
                  "label": "Output Format",
                  "default": "csv",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "CSV",
                      "value": "csv"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "JSON",
                      "value": "json"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::CompositeGroup",
                  "id": "report_definition",
                  "label": "Document Parsing Rules",
                  "help": "",
                  "controls": [
                    {
                      "type": "Theia::Control::Input",
                      "id": "csv_col_name",
                      "help": "",
                      "inputType": "text",
                      "label": "CSV Column Name"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sort_by",
                  "label": "Sort By",
                  "help": "Comma separated list of CSV Columns to Sort By",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file"
        },
        {
          "type": "Theia::Action",
          "label": "Document/Report Mapping",
          "id": "report_set_document_report_mapping",
          "module": "report",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "report_set_document_report_mapping",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=report,set_document_report_mapping",
              "env_param_required": true,
              "columns": [
                "report_report_name",
                "report_dataset_name"
              ],
              "title": "Document/Report Mapping",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "report_set_document_report_mapping",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "report",
                    "command": "set_document_report_mapping",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "report_report_name",
                  "label": "Report",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=report,define_report&field=name&module_name_arg=report"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "report_dataset_name",
                  "label": "Document Type",
                  "help": "",
                  "datasource": "formdata?type=dataset_unstructured&filter_name=enable_textract&filter_value=True&field=name&module_name_arg=report"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "report_mappings",
                  "label": "Report Column Mappings",
                  "key_label": "CSV Column Name",
                  "value_label": "Document Field Name",
                  "dynamic_datasource": "custom/report_document_mapping?module_name_arg=report&report_name=${report_report_name}&dataset_name=${report_dataset_name}",
                  "add_value_label": "Add Column Mapping"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file"
        },
        {
          "type": "Theia::Action",
          "label": "Run Report",
          "id": "report_run",
          "module": "report",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "sample_report",
              "title": "Run Report",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Run Report",
                  "command": {
                    "phase": "report",
                    "command": "run"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "name",
                  "label": "Choose Report",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=report,define_report&field=name&module_name_arg=report"
                }
              ]
            }
          ],
          "order": 100,
          "info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file"
        },
        {
          "type": "Theia::Action",
          "label": "Report Log",
          "id": "report_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "report_log",
              "datasource": "paginated_data?type=transform_log&filter_name=job_type&filter_value=report",
              "pagination": "paginated_data_info?type=transform_log&filter_name=job_type&filter_value=report&sort_by=update_timestamp&sort_order=desc",
              "env_param_required": true,
              "columns": [
                "report_name",
                "status",
                "update_timestamp"
              ],
              "title": "Report Log",
              "description": "",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "report_log"
            }
          ],
          "order": 1000
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Databases",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/database-solid.svg",
      "route": "databases",
      "id": "databases",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Redshift",
          "id": "redshift",
          "module": "redshift",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "redshift",
              "datasource": "data?type=metadata&filter_name=module&filter_value=redshift",
              "env_param_required": true,
              "columns": [
                "module",
                "name",
                "timestamp"
              ],
              "title": "Redshift Cluster",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "redshift",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "redshift",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Redshift Cluster Name",
                  "help": "Enter cluster name (no spaces, hyphens or special characters)",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Redshift Cluster \n\n\n\nCreate Redshift Cluster\n"
        },
        {
          "type": "Theia::Action",
          "label": "Redshift Tables",
          "id": "datawarehouse_tables",
          "module": "redshift",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datawarehouse_tables",
              "datasource": "data?type=publishing&filter_name=db_type&filter_value=redshift",
              "env_param_required": true,
              "columns": [
                "name",
                "db_name",
                "primary_key",
                "sort_key",
                "dist_key",
                "dist_style"
              ],
              "title": "Redshift Tables",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "datawarehouse_tables",
              "title": "",
              "description": "",
              "readonly": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "redshift",
                    "command": "add_table",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "db_name",
                  "cli_id": "redshift_db_name",
                  "label": "Database Name",
                  "help": "Select an already registered database name",
                  "datasource": "formdata?type=datawarehouse&field=name&module_name_arg=redshift"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Table Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "primary_key",
                  "cli_id": "redshift_primary_key",
                  "label": "Primary Key",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sort_key",
                  "cli_id": "redshift_sort_key",
                  "label": "Sort Key",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "dist_key",
                  "cli_id": "redshift_dist_key",
                  "label": "Distribution Key",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dist_style",
                  "cli_id": "redshift_dist_style",
                  "label": "Data Distribution Style",
                  "help": "Defines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "AUTO",
                      "value": "AUTO"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "EVEN",
                      "value": "EVEN"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "KEY",
                      "value": "KEY"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ALL",
                      "value": "ALL"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 40,
          "info": "### Redshift Tables \n\n\n\nDefine Redshift Tables\n\n\n\n**Redshift Database Name**\n\n\n\nSelect existing Redshift Cluster\n\n\n\n**Table Name**\n\n\n\nTable Name\n\n\n\n**Primary Key**\n\n\n\nTable Primary Key\n\n\n\n**Sort Keys**\n\n\n\nComma separated sort keys\n\n\n\n**Distribution Key**\n\n\n\nDistribution Key\n\n\n\n**Distribution Style**\n\n\n\nDefines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`\n"
        },
        {
          "type": "Theia::Action",
          "label": "RDS/Aurora",
          "id": "rds",
          "module": "rds",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "rds",
              "datasource": "data?type=metadata&filter_name=module&filter_value=rds",
              "env_param_required": true,
              "columns": [
                "name",
                "rds_engine",
                "rds_type"
              ],
              "title": "Databases",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "rds",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "rds",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Database Name",
                  "help": "Enter database name (no space or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_engine",
                  "label": "Database Engine",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "MySQL",
                      "value": "mysql"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PostgreSQL",
                      "value": "postgres"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_type",
                  "label": "AWS Database Service",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "RDS",
                      "value": "rds"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Aurora",
                      "value": "aurora"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_multi_az",
                  "label": "Multi Az",
                  "help": "Multi Az",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": "yes"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": "no"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rds_database_name",
                  "label": "Schema Name",
                  "help": "Enter schema name (no space or special characters)",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 50,
          "info": "### RDS or Aurora \n\n\n\nCreate RDS or Aurora Database\n\n\n\n**Database Name**\n\n\n\nEnter database name (no spaces or special characters)\n\n\n\n**Database Engine**\n\n\n\nSelect Database Engine. `MySQL` or `PostgreSQL` \n\n\n\n**AWS Database Service**\n\n\n\nSelect Database Service. `RDS` or `Aurora`\n\n\n\n**Multi Az**\n\n\n\nChoose single or multi-AZ cluster\n\n\n\n**Schema Name**\n\n\n\nEnter Schema Name "
        },
        {
          "type": "Theia::Action",
          "label": "RDS/Aurora Tables",
          "id": "target_database_tables",
          "module": "rds",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "target_database_tables",
              "datasource": "data?type=publishing&filter_name=db_type&filter_value=aurora,rds",
              "env_param_required": true,
              "columns": [
                "name",
                "db_type",
                "db_engine",
                "db_name",
                "primary_key"
              ],
              "title": "Target Database Tables",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "target_database_tables",
              "title": "",
              "description": "",
              "readonly": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "rds",
                    "command": "add_table",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "db_name",
                  "label": "Database Name",
                  "help": "Select an already registered database name",
                  "datasource": "formdata?type=target_database&field=name&module_name_arg=rds"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Table Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "primary_key",
                  "label": "Primary Key",
                  "help": "",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 60,
          "info": "### RDS or Aurora\n\n\n\nDefine Database Tables\n\n\n\n**Database Name**\n\n\n\nSelect existing Database Name\n\n\n\n**Table Name**\n\n\n\nTable Name\n\n\n\n**Primary Key**\n\n\n\nTable Primary Key\n"
        },
        {
          "type": "Theia::Action",
          "label": "Generate Schemas",
          "id": "pre-publish",
          "module": "publishing",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "pre-publish",
              "title": "Generate RDS/Aurora and Redshift Schemas",
              "description": "This one-time process includes (where applicable) <br/>- (1) generating schemas for RDS/Aurora databases <br/>- (2) generating schema for Redshift",
              "submit": "Run Pre-Publish Process",
              "commands": [
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "publishing",
                    "command": "pre-publish"
                  }
                }
              ]
            }
          ],
          "order": 70
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "ElastiCache",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/server-solid.svg",
      "route": "Elasticache",
      "id": "Elasticache",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Create Redis Cluster",
          "id": "elasticache_create_redis_cluster",
          "module": "elasticache",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "elasticache_create_redis_cluster",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=elasticache,create_redis_cluster",
              "env_param_required": true,
              "columns": [
                "name",
                "elasticache_node_type",
                "elasticache_parameter_group_name",
                "elasticache_apply_immediately",
                "elasticache_availability_zone",
                "elasticache_engine_version",
                "elasticache_final_snapshot_identifier",
                "elasticache_maintenance_window",
                "elasticache_notification_topic_arn",
                "elasticache_replication_group_id",
                "elasticache_log_destination",
                "elasticache_log_destination_type",
                "elasticache_log_format",
                "elasticache_log_type",
                "timestamp"
              ],
              "title": "Redis Clusters",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "elasticache_create_redis_cluster",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "elasticache",
                    "command": "create_redis_cluster",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_node_type",
                  "label": "Node Type",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_parameter_group_name",
                  "label": "Parameter Group Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "elasticache_apply_immediately",
                  "label": "Apply Immediately",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_availability_zone",
                  "label": "Availability Zone",
                  "help": "",
                  "datasource": "formdata_from_aws?type=availability_zones&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_engine_version",
                  "label": "Engine Version",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_final_snapshot_identifier",
                  "label": "Final Snapshot Identifier",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_maintenance_window",
                  "label": "Maintenance Window",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_notification_topic_arn",
                  "label": "SNS Topic ARN",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_replication_group_id",
                  "label": "Replication Group",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=elasticache,create_replication_group&field=name&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_security_group_ids",
                  "label": "Security Groups",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_subnet_ids",
                  "label": "Subnets",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_log_destination",
                  "label": "Log Destination",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_log_destination_type",
                  "label": "Log Destination Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "cloudwatch-logs",
                      "value": "cloudwatch-logs"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kinesis-firehose",
                      "value": "kinesis-firehose"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_log_format",
                  "label": "Log Format",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "json",
                      "value": "json"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "text",
                      "value": "text"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_log_type",
                  "label": "Log Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "slow-log",
                      "value": "slow-log"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "engine-log",
                      "value": "engine-log"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### ElastiCache - Redis\n\n\n\nAmazon ElastiCache is a web service that makes it easy to set up, manage, and scale a distributed in-memory data store or cache environment in the cloud. It provides a high-performance, scalable, and cost-effective caching solution while also removing the complexity associated with deploying and managing a distributed cache environment. Amazon ElastiCache works with both the Redis and Memcached engines.\n\n\n\n**Name**\n\n\n\nThe Name of your cluster. ElastiCache converts this name to lowercase.\n\n\n\n**Node Type**\n\n\n\n(Required unless a replication group is selected)\n\nThe instance class for your cluster. See AWS documentation for information on [supported node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).\n\n\n\n**Parameter Group Name**\n\n(Required unless a replication group is selected)\n\nThe name of the parameter group to associate with this cache cluster.\n\n\n\n**Apply Immediately**\n\nWhether any database modifications are applied immediately, or during the next maintenance window. AWS defaults to false.\n\n\n\n**Availability Zone**\n\nAvailability Zone for the cache cluster.\n\n\n\n**Engine Version**\n\nVersion number of the cache engine to be used. If not set, defaults to the latest version. See documentation for supported versions [here](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/supported-engine-versions-mc.html)\n\n\n\n**Final Snapshot Identifier**\n\nName of your final cluster snapshot. If omitted, no final snapshot will be made.\n\n\n\n**Maintenance Window**\n\nSpecifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period.\n\n\n\n**Notification Topic ARN**\n\nOptional ARN of an SNS topic to send ElastiCache notifications to.\n\n\n\n**Replication Group**\n\nName of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.\n\n\n\n**Log Destination**\n\nName of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.\n\n\n\n**Log Destination Type**\n\nFor CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.\n\n\n\n**Log Format**\n\nValid values are `json` or `text`\n\n\n\n**Log Format**\n\nValid values are `slow-log` or `engine-log`\n\n\n\n**Security Groups**\n\nOne or more VPC security groups to associate with the cache cluster\n\n\n\n**Subnets**\n\nOne or more VPC subnets to associate with the cache cluster\n"
        },
        {
          "type": "Theia::Action",
          "label": "Create Memcached Cluster",
          "id": "elasticache_create_memcached_cluster",
          "module": "elasticache",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "elasticache_create_memcached_cluster",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=elasticache,create_memcached_cluster",
              "env_param_required": true,
              "columns": [
                "name",
                "elasticache_node_type",
                "elasticache_num_cache_nodes",
                "elasticache_parameter_group_name",
                "elasticache_apply_immediately",
                "elasticache_engine_version",
                "elasticache_maintenance_window",
                "elasticache_notification_topic_arn",
                "timestamp"
              ],
              "title": "Memcached Clusters",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "elasticache_create_memcached_cluster",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "elasticache",
                    "command": "create_memcached_cluster",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_node_type",
                  "label": "Node Type",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_num_cache_nodes",
                  "label": "Number of Cache Nodes",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_parameter_group_name",
                  "label": "Parameter Group Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "elasticache_apply_immediately",
                  "label": "Apply Immediately",
                  "help": ""
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_preferred_availability_zones",
                  "label": "Availability Zones",
                  "help": "must equal number of cache nodes or select only one to apply to all nodes",
                  "datasource": "formdata_from_aws?type=availability_zones&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_engine_version",
                  "label": "Engine Version",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_maintenance_window",
                  "label": "Maintenance Window",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_notification_topic_arn",
                  "label": "SNS Topic ARN",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_security_group_ids",
                  "label": "Security Groups",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_subnet_ids",
                  "label": "Subnets",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=elasticache"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### ElastiCache - Memcached\n\n\n\nAmazon ElastiCache is a web service that makes it easy to set up, manage, and scale a distributed in-memory data store or cache environment in the cloud. It provides a high-performance, scalable, and cost-effective caching solution while also removing the complexity associated with deploying and managing a distributed cache environment. Amazon ElastiCache works with both the Redis and Memcached engines.\n\n\n\n**Name**\n\n\n\nThe Name of your cluster. ElastiCache converts this name to lowercase.\n\n\n\n**Node Type**\n\n\n\n(Required unless a replication group is selected)\n\nThe instance class for your cluster. See AWS documentation for information on [supported node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/nodes-select-size.html).\n\n\n\n**Number of Cache Nodes**\n\n(Required unless a replication group is selected)\n\nThe initial number of cache nodes that the cache cluster will have. For Memcached, this value must be between 1 and 40.\n\n\n\n**Parameter Group Name**\n\n(Required unless a replication group is selected)\n\nThe name of the parameter group to associate with this cache cluster.\n\n\n\n**Apply Immediately**\n\nWhether any database modifications are applied immediately, or during the next maintenance window. AWS defaults to false.\n\n\n\n**Availability Zones**\n\nList of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets you've selected. The number of Availability Zones listed must either equal the value of `num_cache_nodes` or equal 1 to apply the same zone to all nodes.\n\n\n\n**Engine Version**\n\nVersion number of the cache engine to be used. If not set, defaults to the latest version. See documentation for supported versions [here](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/supported-engine-versions-mc.html)\n\n\n\n**Maintenance Window**\n\nSpecifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period.\n\n\n\n**Notification Topic ARN**\n\nOptional ARN of an SNS topic to send ElastiCache notifications to.\n\n\n\n**Security Groups**\n\nOne or more VPC security groups to associate with the cache cluster\n\n\n\n**Subnets**\n\nOne or more VPC subnets to associate with the cache cluster\n"
        },
        {
          "type": "Theia::Action",
          "label": "Replication Groups",
          "id": "elasticache_create_replication_group",
          "module": "elasticache",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "elasticache_create_replication_group",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=elasticache,create_replication_group",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "Replication Groups",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "elasticache_create_replication_group",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "elasticache",
                    "command": "create_replication_group",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_description",
                  "label": "Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_node_type",
                  "label": "Node Type",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_parameter_group_name",
                  "label": "Parameter Group Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "elasticache_apply_immediately",
                  "label": "Apply Immediately",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_engine_version",
                  "label": "Engine Version",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_kms_key_name",
                  "label": "KMS Key Name",
                  "help": "leave blank to use default key",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "elasticache_at_rest_encryption_enabled",
                  "label": "Enable At Rest Encryption?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "elasticache_transit_encryption_enabled",
                  "label": "Enable In Transit Encryption?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "elasticache_automatic_failover_enabled",
                  "label": "Enable Automatic Failover?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "elasticache_multi_az_enabled",
                  "label": "Enable Multi AZ?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_user_group_name",
                  "label": "User Group",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=elasticache,create_user_group&field=name&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_num_cache_clusters",
                  "label": "Number of Cache Clusters",
                  "inputType": "text",
                  "help": "Redis Cluster Mode Disabled"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_num_node_groups",
                  "label": "Number of Node Groups",
                  "inputType": "text",
                  "help": "Redis Cluster Mode Enabled"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_replicas_per_node_group",
                  "label": "Replicas per Node Group",
                  "inputType": "text",
                  "help": "Redis Cluster Mode Enabled"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_final_snapshot_identifier",
                  "label": "Final Snapshot Identifier",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_maintenance_window",
                  "label": "Maintenance Window",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_notification_topic_arn",
                  "label": "SNS Topic ARN",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_security_group_ids",
                  "label": "Security Groups",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_subnet_ids",
                  "label": "Subnets",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=elasticache"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_log_destination",
                  "label": "Log Destination",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_log_destination_type",
                  "label": "Log Destination Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "cloudwatch-logs",
                      "value": "cloudwatch-logs"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kinesis-firehose",
                      "value": "kinesis-firehose"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_log_format",
                  "label": "Log Format",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "json",
                      "value": "json"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "text",
                      "value": "text"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "elasticache_log_type",
                  "label": "Log Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "slow-log",
                      "value": "slow-log"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "engine-log",
                      "value": "engine-log"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Redis Replication Groups\n\n\n\nAmazon ElastiCache is a web service that makes it easy to set up, manage, and scale a distributed in-memory data store or cache environment in the cloud. It provides a high-performance, scalable, and cost-effective caching solution while also removing the complexity associated with deploying and managing a distributed cache environment. Amazon ElastiCache works with both the Redis and Memcached engines.\n\n\n\n**Name**\n\nThe Name of your cluster. ElastiCache converts this name to lowercase.\n\n\n\n**Description**\n\nDescription for your replication group.\n\n\n\n**Node Type**\n\n\n\n(Required unless a replication group is selected)\n\nThe instance class for your cluster. See AWS documentation for information on [supported node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).\n\n\n\n**Parameter Group Name**\n\n(Required unless a replication group is selected)\n\nThe name of the parameter group to associate with this cache cluster.\n\n\n\n**Apply Immediately**\n\nWhether any database modifications are applied immediately, or during the next maintenance window. AWS defaults to false.\n\n\n\n**Engine Version**\n\nVersion number of the cache engine to be used. If not set, defaults to the latest version. See documentation for supported versions [here](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/supported-engine-versions-mc.html)\n\n\n\n**KMS Key**\n\nThe name of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if at-rest encryption is enabled.\n\n\n\n**At-Rest Encryption**\n\nWhether to enable encryption at rest.\n\n\n\n**In-Transit Encryption**\n\nWhether to enable encryption in transit.\n\n\n\n**Automatic Failover**\n\nSpecifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `num_cache_clusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to false.\n\n\n\n**Multi-AZ**\n\nSpecifies whether to enable Multi-AZ Support for the replication group. If true, automatic failover must also be enabled. Defaults to false.\n\n\n\n**User Group Name**\n\nUser Group to associate with the replication group. AWS allows a maximum of 1 user group to be associated.\n\n\n\n**Number of Cache Clusters (Redis Cluster Mode Disabled)**\n\nNumber of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Conflicts with node groups/replicas per node settings.\n\n\n\n**Number of Node Groups (Redis Cluster Mode Enabled)**\n\nNumber of node groups (shards) for this Redis replication group. Changing this number will trigger a resizing operation before other settings modifications.\n\n\n\n**Replicas Per Node Group (Redis Cluster Mode Enabled)**\n\nNumber of replica nodes in each node group. Changing this number will trigger a resizing operation before other settings modifications. Valid values are 0 to 5.\n\n\n\n**Final Snapshot Identifier**\n\nName of your final cluster snapshot. If omitted, no final snapshot will be made.\n\n\n\n**Maintenance Window**\n\nSpecifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period.\n\n\n\n**Notification Topic ARN**\n\nOptional ARN of an SNS topic to send ElastiCache notifications to.\n\n\n\n**Log Destination**\n\nName of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.\n\n\n\n**Log Destination Type**\n\nFor CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.\n\n\n\n**Log Format**\n\nValid values are `json` or `text`\n\n\n\n**Log Format**\n\nValid values are `slow-log` or `engine-log`\n\n\n\n**Security Groups**\n\nOne or more VPC security groups to associate with the cache cluster\n\n\n\n**Subnets**\n\nOne or more VPC subnets to associate with the cache cluster\n"
        },
        {
          "type": "Theia::Action",
          "label": "Redis Users",
          "id": "elasticache_create_user",
          "module": "elasticache",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "elasticache_create_user",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=elasticache,create_user",
              "env_param_required": true,
              "columns": [
                "elasticache_user_id",
                "elasticache_user_name",
                "elasticache_access_string",
                "timestamp"
              ],
              "title": "Redis Users",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "elasticache_create_user",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "elasticache",
                    "command": "create_user",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_user_id",
                  "label": "User ID",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_user_name",
                  "label": "Username",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "elasticache_access_string",
                  "label": "Access String",
                  "help": "",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Redis Users\n\n\n\n**User ID**\n\nThe ID of the user\n\n\n\n**User Name**\n\nThe name of the user\n\n\n\n**Access String**\n\nAccess permissions string used for this user. See docs [here](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html#Access-string) for more details."
        },
        {
          "type": "Theia::Action",
          "label": "Redis User Groups",
          "id": "elasticache_create_user_group",
          "module": "elasticache",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "elasticache_create_user_group",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=elasticache,create_user_group",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "Redis User Groups",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "elasticache_create_user_group",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "elasticache",
                    "command": "create_user_group",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "elasticache_users",
                  "label": "Users",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=elasticache,create_user&field=name&module_name_arg=elasticache"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Redis User Groups\n\n\n\n**Users**\n\nList of users to attach to this group."
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Security & Compliance",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/shield-halved-solid.svg",
      "route": "compliance",
      "id": "compliance",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Amazon Certificate Manager",
          "id": "acm",
          "module": "acm",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "acm",
              "datasource": "data?type=metadata&filter_name=module&filter_value=acm",
              "env_param_required": true,
              "columns": [
                "timestamp",
                "acm_cert_domain_name",
                "acm_cert_validation_method",
                "acm_r53_zone_name"
              ],
              "title": "Amazon Certificate Manager",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "acm",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Register",
                  "command": {
                    "phase": "acm",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "acm_cert_domain_name",
                  "cli_id": "cert_domain_name",
                  "label": "Certificate Domain Name",
                  "help": "Domain name for which the certificate should be issued",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "acm_cert_validation_method",
                  "cli_id": "cert_validation_method",
                  "label": "Certificate Validation Method",
                  "default": "DNS",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "DNS",
                      "value": "DNS"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Email",
                      "value": "EMAIL"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "acm_r53_zone_name",
                  "cli_id": "r53_zone_name",
                  "label": "Route53 Zone Name",
                  "help": "Route 53 Zone Name for Validation",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Amazon Certificate Manager\n\n\n\nAWS Certificate Manager is a service that lets you easily provision, manage, and deploy SSL certificates\n\n\n\n**Certificate Domain Name**\n\n\n\nDomain name for which the certificate should be issued\n\n\n\n**Certificate Validation Method**\n\n\n\nWhich method to use for validation, allowed values are `(DNS | EMAIL)`\n\n\n\n**Route53 Zone Name**\n\n\n\nRoute 53 Zone name to validate against when using DNS validation"
        },
        {
          "type": "Theia::Action",
          "label": "WAF",
          "id": "waf_create",
          "module": "waf",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "waf_create",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=waf,create",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "Web Application Firewall",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "waf_create",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "waf",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Enter RC resource name here.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "allow_requests_by_default",
                  "cli_id": "waf_allow_requests_by_default",
                  "label": "Allow requests by default",
                  "default": true,
                  "help": "Would you like requests to be allowed by default?"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "cf_associated",
                  "cli_id": "waf_cf_associated",
                  "label": "Will this WAF be for a Cloudfront distribution?",
                  "default": "Cloudfront associated",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Cloudfront associated",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": true,
                        "disableControls": [
                          "waf_associated_apigw_list",
                          "waf_associated_alb_list"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Other resources",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": false,
                        "enableControls": [
                          "waf_associated_apigw_list",
                          "waf_associated_alb_list"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "waf_associated_apigw_list",
                  "cli_id": "waf_associated_apigw_list",
                  "label": "API Gateways",
                  "help": "List of API Gateways to associate to this WAF to",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=api,add_lambda_integration&field=api_rest_api_name&module_name_arg=waf"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "waf_associated_alb_list",
                  "cli_id": "waf_associated_alb_list",
                  "label": "Application load balancers list",
                  "help": "List of Application load balancers to associate this WAF to",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=lb,create&field=name&module_name_arg=waf"
                }
              ]
            }
          ],
          "order": 100,
          "info": "### Web application firewall\n\n\n\nA Web application firewall will allow your application to block certain attacks. The following set of rules apply to your WAF service.\n\n\n\n**Baseline rule groups.** \n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html).\n\n\n\n**Core rule set (CRS) managed rule group**\n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html#aws-managed-rule-groups-baseline-crs).\n\n\n\n**Admin protection managed rule group** \n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html#aws-managed-rule-groups-baseline-admin).\n\n\n\n**Known bad inputs managed rule group**\n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html#aws-managed-rule-groups-baseline-known-bad-inputs)."
        },
        {
          "type": "Theia::Action",
          "label": "PII Rules",
          "id": "rules_semi",
          "module": "rules",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "rules_semi",
              "datasource": "data?type=rule",
              "env_param_required": true,
              "columns": [
                "dataset",
                "attr",
                "attr_type",
                "action"
              ],
              "title": "PII Rules",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "rule",
              "title": "",
              "description": "",
              "readonly": false,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "secure",
                    "command": "add-rule"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset",
                  "label": "Dataset Name",
                  "help": "",
                  "datasource": "formdata?type=dataset_semi_structured&field=name"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "attr",
                  "label": "Attribute Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "attr_type",
                  "label": "Attribute Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "SSN",
                      "value": "ssn"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Full Name",
                      "value": "fullname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "First Name",
                      "value": "firstname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Last Name",
                      "value": "lastname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Date of birth",
                      "value": "dob"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ID",
                      "value": "id"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Float (e.g, amount)",
                      "value": "float"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Integer",
                      "value": "int"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "String",
                      "value": "string"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "action",
                  "label": "Action",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Deidentify",
                      "value": "deidentify"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Omit",
                      "value": "omit"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mask",
                      "value": "mask"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Encrypt",
                      "value": "encrypt"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### PII Rules\n\n\n\nDefine PII Rules to be automatically applied when processing ingested data, before applying CDC (Change Data Capture) or any other Data Formatting.\n\n\n\n**Dataset Name**\n\n\n\nSelect existing dataset\n\n\n\n**Attribute Name**\n\n\n\nName of the attribite to apply PII rule to\n\n\n\n**Attribute Type**\n\n\n\nChoose one of the following supported attribute types: `{ SSN, Full Name, First Name, Last Name, Date of birth, ID, Float (e.g, amount), Integer, String }`\n\n\n\n**Action**\n\n\n\nChoose one of the following supported actions: `{ Deidentify, Omit, Mask, Encrypt }`\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Trend Micro Cloud One",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/trademark-solid.svg",
      "route": "trendmicro",
      "id": "trendmicro",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Integration Features",
          "id": "trendmicro_features",
          "module": "trendmicro",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_features",
              "env_param_required": true,
              "title": "RapidCloud / Trend Micro Cloud One Integration",
              "description": "<img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - File Storage.png' alt='File Storage Security Flow' width='820'/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - FSS Compare.png' alt='RapidCloud Trend Micro Integration - File Storage Security' width='820'/><br/><br/><br/><br/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - Application Compare.png' alt='RapidCloud Trend Micro Integration - Application Security' width='820'/><br/><br/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - Workload Compare.png' alt='RapidCloud Trend Micro Integration - Workload Security' width='820'/>"
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "Setup",
          "id": "trendmicro_setup",
          "module": "trendmicro",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_setup",
              "datasource": "trendmicro/setup?extra=true",
              "env_param_required": true,
              "title": "Trend Micro API Key",
              "description": "Trend Micro API Key needs to be set up only once, from any of the environments, and it will be used accross all your RapidCloud Environments going forward.",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "trendmicro",
                    "command": "setup",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_api_id",
                  "label": "Trend Micro Cloud One API ID",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_api_key",
                  "label": "Trend Micro Cloud One API Key",
                  "help": "API Key is encrypted and saved in Secrets Manager",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_conformity_region",
                  "label": "CloudOne Region",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "us-1",
                      "value": "us-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "in-1",
                      "value": "in-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "gb-1",
                      "value": "gb-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "jp-1",
                      "value": "jp-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "de-1",
                      "value": "de-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "au-1",
                      "value": "au-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ca-1",
                      "value": "ca-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "sg-1",
                      "value": "sg-1"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "trendmicro_enable_filestorage_security",
                  "label": "Enable Trend Micro File Storage Security for this environment. When enabled, an `Enable Trend Micro File Storage Security` toggle will appear on `Storage -> S3` page."
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "trendmicro_enable_workload_security",
                  "label": "Enable Trend Micro Workload Security for this environment. When enabled, an `Enable Trend Micro Workload Security` toggle and `Workload Group` drop-down will appear on `Compute -> Managed EC2 Instances | Unmanaged EC2 Instances | EC2 Launch Templates` pages."
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "trendmicro_enable_application_security",
                  "label": "Enable Trend Micro Application Security for this environment. When enabled, an `Enable Trend Micro Application Security` toggle and `Application Security Group` drop-down will appear on `Compute -> Lambda Functions` page."
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Trend Micro API Key\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "File Storage Security Stacks",
          "id": "trendmicro_file_storage",
          "module": "trendmicro",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_file_storage",
              "datasource": "trendmicro/fss/stacks?test=test",
              "env_param_required": true,
              "columns": [
                "trendmicro_stack_type",
                "trendmicro_bucket",
                "tm_fss_stackID",
                "tm_fss_status",
                "timestamp"
              ],
              "title": "File Storage Security",
              "allowMarkdown": true,
              "description": "<b>Trend Micro Cloud One - File Storage Security Stacks</b><br/>Automatically scan ingested data and integrate with your data pipelines<br/><a href='https://cloudone.trendmicro.com/filestorage/deployment' target='_blank'>Open Scan Activity Console</a>\n\n\n",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_file_storage",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this stack? This will delete CloudFormation Stack in your AWS account and corresponding File Storage Security stack in your Trend Micro Cloud One account.",
                  "command": {
                    "phase": "trendmicro",
                    "command": "filestorage_delete_stack",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to create or update File Storage Security Stack?",
                  "command": {
                    "phase": "trendmicro",
                    "command": "filestorage_create_stack",
                    "refresh_status": true
                  },
                  "editable_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "cli_arg": "trendmicro_fqn",
                  "inputType": "text",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_stack_type",
                  "label": "Stack Type",
                  "help": "Trend Micro Cloud One File Storage Security Stack Type [all-in-one|scanner|storage]",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "All-In-One",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "all-in-one",
                        "enableControls": [
                          "trendmicro_bucket"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Scanner",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "scanner",
                        "disableControls": [
                          "trendmicro_bucket"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Storage",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "storage",
                        "enableControls": [
                          "trendmicro_bucket"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_bucket",
                  "label": "S3 Bucket Name",
                  "help": "Bucket Name (Storage Stack only)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cf_stack_name",
                  "cli_arg": "ignored",
                  "label": "CloudFormation Stack Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_role_arn",
                  "cli_arg": "ignored",
                  "label": "Stack Management Role ARN",
                  "help": "Stack Management Role ARN is provided to Trend Micro automatically by RapidCloud upon creation of this stack",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_stackID",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Stack ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_account",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Account",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_region",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Region",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_updated",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Stack Updated Timestamp",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_name",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Stack Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Trend Micro Cloud One - File Storage Security\n\n\n\n**One-click Deployment**\n\n\n\nProvides one-click deployment of Trend Micro Cloud Once File Storage Security into your environment, to automatically scan ingested data and integrate with your data pipelines.\n\n\n\n**Files never leave your storage**\n\n\n\nWith the scanner deployed in your AWS account, the files being scanned never leave your environment, perfect for organizations with data sovereignty or compliance obligations.\n\n\n\n**Unlimited file types and sizes**\n\n\n\nThe serverless solution gives tremendous flexibility on performance without maintaining traditional scanning machines. It can scan all file types and sizes.\n\n\n\n**Ransomware protection**\n\n\n\nRansomware targets businesses of any size, crippling your organization if no backups are available. Enable scanning before downloading the file to prevent ransomware from entering your environment.\n\n\n\n**Quarantine malicious files**\n\n\n\nAny detected malicious object will be quarantined into a separate S3 bucket to ensure that only known good files are allowed in your downstream workflow.\n\n\n\n**Always scan with the latest patterns**\n\n\n\nThe latest patterns are daily pushed to the scanners, ensuring that the security of the data in your cloud storage is always protected using the most up-to-date pattern."
        },
        {
          "type": "Theia::Action",
          "label": "Workload Security Groups",
          "id": "trendmicro_workload_create_group",
          "module": "trendmicro",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_workload_create_group",
              "datasource": "trendmicro/workload/groups?test=test",
              "env_param_required": true,
              "columns": [
                "name",
                "trendmicro_description",
                "trendmicro_policy",
                "timestamp"
              ],
              "title": "Trend Micro Workload Security Groups",
              "allowMarkdown": true,
              "description": "<b>Trend Micro Cloud One - Workload Security Groups</b><br/>Protect your **Linux EC2 Instances**. (_Windows coming soon_)<br/><a href='https://cloudone.trendmicro.com/workload/Application.screen?#computers_root' target='_blank'>Open Workload Security Console</a>\n\n\n",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_workload_create_group",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "trendmicro",
                    "command": "workload_create_group",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "Group Name will be automatically prefixed with environment name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_description",
                  "label": "Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_policy",
                  "label": "Policy",
                  "datasource": "trendmicro/workload/policies?col=name&module_name_arg=trendmicro",
                  "help": "RapidCloud currently only supports Linux EC2 Instances"
                }
              ]
            }
          ],
          "order": 40,
          "info": "### Workload Security Groups\n\n\n\nCreating EC2 (computer) groups is useful from an organizational point of view and it speeds up the process of applying and managing policies."
        },
        {
          "type": "Theia::Action",
          "label": "Application Security Groups",
          "id": "trendmicro_application_create_group",
          "module": "trendmicro",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_file_storage",
              "datasource": "trendmicro/as/groups?test=test",
              "env_param_required": true,
              "columns": [
                "tm_as_name",
                "tm_as_group_id",
                "tm_as_activated_on"
              ],
              "title": "Application Security Groups",
              "allowMarkdown": true,
              "description": "<b>Trend Micro Cloud One - Application Security Groups</b><br/>Protect your **Python Lambda Fucntions**. (_More runtimes are coming soon_)<br/><a href='https://cloudone.trendmicro.com/application#/policies' target='_blank'>Open Application Security Console</a>\n\n\n"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_application_create_group",
              "title": "",
              "description": "",
              "env_param_required": true,
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save Group Settings",
                  "command": {
                    "phase": "trendmicro",
                    "command": "application_create_group"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Group Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_as_group_id",
                  "label": "Group ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_as_activated_on",
                  "label": "Activated On",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_credential_stuffing",
                  "label": "Credential Stuffing Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_file_access",
                  "label": "Illegal File Access Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_ip_protection",
                  "label": "IP Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_malicious_file_upload",
                  "label": "Malicious File Upload Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_malicious_payload",
                  "label": "Malicious Payload Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_rce",
                  "label": "Remote Command Execution Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_redirect",
                  "label": "Redirect Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_sqli",
                  "label": "SQL Injection Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_group_secret",
                  "label": "Group Secret (this is Secrets Manager Secret name, not actual secret)",
                  "help": "Group Secret is encrypted and saved in Secretes Manager",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 50,
          "info": "### Trend Micro Cloud One \u2013 Application Security\n\n\n\n**Application Security Groups**\n\n\n\nAn application security group is a collection of Lambda Functions sharing a common set of policies."
        },
        {
          "type": "Theia::Action",
          "label": "Enable Conformity",
          "id": "trendmicro_conformity_enable",
          "module": "trendmicro",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_conformity_enable",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=trendmicro,conformity_enable",
              "env_param_required": true,
              "columns": [
                "name",
                "trendmicro_conformity_environment",
                "timestamp"
              ],
              "title": "Enable Conformity",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_conformity_enable",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Enable",
                  "command": {
                    "phase": "trendmicro",
                    "command": "conformity_enable",
                    "refresh_status": true
                  }
                },
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_account_name",
                  "label": "AWS Account Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_conformity_environment",
                  "label": "Conformity Environment",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_conformity_tags",
                  "label": "Tags",
                  "help": "",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Trend Micro Cloud One - Conformity\n\n\n\nTrend Micro Conformity highlights violations of AWS and Azure best practices, delivering over 750 different checks across all key areas \u2014 security, reliability, cost optimisation, performance efficiency, operational excellence in one easy-to-use package.\n\n\n\n**Account Name**\n\n\n\nThe name of your account\n\n\n\n**Environment**\n\n\n\nThe environment for your account\n\n\n\n**Tags**\n\n\n\nTags to add to your account. You can use groups to group accounts together based on tags."
        },
        {
          "type": "Theia::Action",
          "label": "Create Conformity Group",
          "id": "trendmicro_conformity_create_group",
          "module": "trendmicro",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_conformity_create_group",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=trendmicro,conformity_create_group",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "Create Conformity Group",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_conformity_create_group",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "trendmicro",
                    "command": "conformity_create_group",
                    "refresh_status": true
                  }
                },
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Group Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_conformity_tags",
                  "label": "Tags",
                  "help": "",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Compute",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/microchip-solid.svg",
      "route": "compute",
      "id": "compute",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Lambda Functions",
          "id": "lambda",
          "module": "lambda",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "lambda",
              "datasource": "data?type=metadata&filter_name=module&filter_value=lambda",
              "env_param_required": true,
              "columns": [
                "module",
                "name",
                "timestamp"
              ],
              "title": "Lambda Functions",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "lambda",
              "title": "",
              "description": "",
              "readonly": false,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "lambda",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_name": "name",
                  "label": "Lambda Function Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lambda_memory_size",
                  "label": "Memory Size",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lambda_timeout",
                  "label": "Enter Lambda Function timeout in Seconds (default is 900)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lambda_schedule",
                  "label": "Enter a cron expression",
                  "help": "Example: run every day at midnight => 0 4 * * ? *",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "lambda_env_vars",
                  "label": "Environment Variables",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=lambda,${name}&result=params,lambda_env_vars",
                  "add_value_label": "Add new environment variable for your Lambda Function"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "image_uri",
                  "label": "Enter a valid ECR Image URI",
                  "help": "Use a valid image uri from ECR.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "lambda_include_layers",
                  "label": "Add Lambda Layers",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "RapidCloud Common Layer",
                      "value": "kc_common"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AWS SDK for pandas (awswrangler)",
                      "value": "awswrangler"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PostgreSQL database adapter for the Python",
                      "value": "psycopg2"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Lambda Function\n\n\n\nCreate Lamabda Function. RapidCloud generates function template for you as well as helkpful Lambda Layers for common Python Lambda operations, including boto3 (awswrangler) and various database drivers.\n\n\n\n**Lambda Function Name**\n\n\n\nLambda Function Name\n\n\n\n**Memory**\n\n\n\nSpecify how much memory to allocate for this Lambda Function. Default is 128 MB\n\n\n\n**Schedule**\n\n\n\nEnter a cron expression if you want this lambda function to be automatically invoked on a specific schedule. This will create a CloudWatch Event Rule.\n\n\n\nExample: run every day at midnight => `0 4 * * ? *`\n\n\n\n**Environment Variables**\n\n\n\nEnvironment Variables for this Lambda Function\n"
        },
        {
          "type": "Theia::Action",
          "label": "Managed EC2 Instances",
          "id": "ec2",
          "module": "ec2",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ec2",
              "env_param_required": true,
              "columns": [
                "name",
                "ec2_instance_type",
                "ec2_ami_id",
                "ec2_availability_zone",
                "ec2_volume_size",
                "timestamp"
              ],
              "title": "Managed EC2 Instances",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "ec2",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name (characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_instance_type",
                  "cli_id": "instance_type",
                  "label": "Instance Type",
                  "help": "EC2 Instance Type",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_ami_id_selected",
                  "label": "AMI",
                  "help": "",
                  "datasource": "formdata_from_aws?type=amis&module_name_arg=ec2"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_ami_id",
                  "cli_id": "ami_id",
                  "label": "Provide AMI ID here if you do not see it in the list above. This value takes precedence.",
                  "help": "",
                  "default": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_key_name",
                  "cli_id": "key_name",
                  "label": "Key pair name",
                  "help": "Key pair name",
                  "datasource": "formdata_from_aws?type=key_pairs&module_name_arg=ec2"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_vpc_id",
                  "cli_id": "vpc_id",
                  "label": "VPC ID",
                  "help": "The ID of the VPC in which the instance is running",
                  "datasource": "formdata_from_aws?type=vpcs&module_name_arg=ec2"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_availability_zone",
                  "label": "Availability Zone",
                  "help": "AWS availability zone to deploy instance to",
                  "datasource": "formdata_from_aws?type=availability_zones&module_name_arg=ec2"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_subnet_id",
                  "label": "Subnet Id to place this EC2",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=ec2"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "ec2_vpc_security_group_ids",
                  "label": "Security Group Ids",
                  "help": "Select one or more",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=ec2"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_role_name",
                  "label": "Existing Role to create an Instance Profile",
                  "help": "",
                  "datasource": "formdata_from_aws?type=roles&module_name_arg=ec2"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_volume_size",
                  "cli_id": "volume_size",
                  "label": "Volume Size",
                  "help": "Volume size for instance in GB",
                  "inputType": "text",
                  "default": "8"
                },
                {
                  "type": "Theia::Control::TextArea",
                  "id": "ec2_user_data",
                  "label": "User Data",
                  "help": "User Data",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Elastic Compute Cloud\n\n\n\nScalable compute instances in the cloud\n\n\n\n**Name**\n\n\n\nThe name of your instance\n\n\n\n**Instance Type**\n\n\n\nThe instance type to use for your instance, defaults to `t2.micro`.\n\nView available instance types [here](https://aws.amazon.com/ec2/instance-types)\n\n\n\n**Availability Zone**\n\n\n\nAZ to start the instance in\n\n\n\n**Volume Size**\n\n\n\nSize of the attached volume in gibibytes (GiB)"
        },
        {
          "type": "Theia::Action",
          "label": "EC2 Backend",
          "id": "ec2_plus",
          "module": "ec2_plus",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2_plus",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ec2_plus",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "EC2 Backend",
              "description": "EC2 Backend with supporting services (auto-scaling, load balancing, file storage, etc)",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2_plus",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "ec2_plus",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::CompositeModule",
                  "id": "composite_module",
                  "modules": [
                    {
                      "type": "Theia::Control::Toggle",
                      "id": "ec2_enabled",
                      "label": "Create EC2 Instance",
                      "controls": [
                        {
                          "type": "Theia::Control::Input",
                          "id": "ec2_name",
                          "cli_id": "name",
                          "label": "Name",
                          "help": "Name (characters)",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "ec2_instance_type",
                          "cli_id": "instance_type",
                          "label": "Instance Type",
                          "help": "EC2 Instance Type",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "ec2_ami_id_selected",
                          "label": "AMI",
                          "help": "",
                          "datasource": "formdata_from_aws?type=amis"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "ec2_ami_id",
                          "cli_id": "ami_id",
                          "label": "Provide AMI ID here if you do not see it in the list above. This value takes precedence.",
                          "help": "",
                          "default": "",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "ec2_key_name",
                          "cli_id": "key_name",
                          "label": "Key pair name",
                          "help": "Key pair name",
                          "datasource": "formdata_from_aws?type=key_pairs"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "ec2_vpc_id",
                          "cli_id": "vpc_id",
                          "label": "VPC ID",
                          "help": "The ID of the VPC in which the instance is running",
                          "datasource": "formdata_from_aws?type=vpcs"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "ec2_availability_zone",
                          "label": "Availability Zone",
                          "help": "AWS availability zone to deploy instance to",
                          "datasource": "formdata_from_aws?type=availability_zones"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "ec2_subnet_id",
                          "label": "Subnet Id to place this EC2",
                          "help": "",
                          "datasource": "formdata_from_aws?type=subnets"
                        },
                        {
                          "type": "Theia::Control::MultiSelect",
                          "id": "ec2_vpc_security_group_ids",
                          "label": "Security Group Ids",
                          "help": "Select one or more",
                          "datasource": "formdata_from_aws?type=vpc_security_groups"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "ec2_role_name",
                          "label": "Existing Role to create an Instance Profile",
                          "help": "",
                          "datasource": "formdata_from_aws?type=roles"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "ec2_volume_size",
                          "cli_id": "volume_size",
                          "label": "Volume Size",
                          "help": "Volume size for instance in GB",
                          "inputType": "text",
                          "default": "8"
                        },
                        {
                          "type": "Theia::Control::TextArea",
                          "id": "ec2_user_data",
                          "label": "User Data",
                          "help": "User Data",
                          "inputType": "text"
                        }
                      ]
                    },
                    {
                      "type": "Theia::Control::Toggle",
                      "id": "asg_enabled",
                      "label": "Create Auto-Scaling Group",
                      "controls": [
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_name",
                          "cli_id": "name",
                          "label": "Name",
                          "help": "Name",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_launch_template_name",
                          "cli_id": "launch_template_name",
                          "label": "Launch Template Name",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_launch_template_version",
                          "cli_id": "launch_template_version",
                          "label": "Launch Template Version",
                          "inputType": "text",
                          "default": "$Latest"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_instance_type",
                          "cli_id": "instance_type",
                          "label": "EC2 Instance Type",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_ami_id",
                          "cli_id": "ami_id",
                          "label": "AMI ID",
                          "help": "RapidCLoud currently only supports Amazon Linux based AMIs. Default is 'ami-0022f774911c1d690', Amazon Linux 2 Kernel 5.10 AMI 2.0.20220426.0 x86_64 HVM gp2",
                          "default": "ami-0022f774911c1d690",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_placement_group_name",
                          "cli_id": "placement_group_name",
                          "label": "Placement Group Name",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "asg_placement_group_strategy",
                          "cli_id": "placement_group_strategy",
                          "label": "Placement Group Strategy",
                          "options": [
                            {
                              "type": "Theia::Option",
                              "label": "Cluster",
                              "value": "cluster"
                            },
                            {
                              "type": "Theia::Option",
                              "label": "Partition",
                              "value": "partition"
                            },
                            {
                              "type": "Theia::Option",
                              "label": "Spread",
                              "value": "spread"
                            }
                          ]
                        },
                        {
                          "type": "Theia::Control::MultiSelect",
                          "id": "asg_vpc_zone_identifier",
                          "cli_id": "vpc_zone_identifier",
                          "label": "Subnets",
                          "help": "",
                          "datasource": "formdata_from_aws?type=subnets"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_desired_capacity",
                          "cli_id": "desired_capacity",
                          "label": "Desired Capacity",
                          "help": "The number of EC2 instances running in the group",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_min_size",
                          "cli_id": "min_size",
                          "label": "Min Size",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "asg_max_size",
                          "cli_id": "max_size",
                          "label": "Max Size",
                          "inputType": "text"
                        }
                      ]
                    },
                    {
                      "type": "Theia::Control::Toggle",
                      "id": "fsx_enabled",
                      "label": "Create File System for Windows File Server",
                      "controls": [
                        {
                          "type": "Theia::Control::Input",
                          "id": "fsx_name",
                          "cli_id": "name",
                          "label": "Name",
                          "help": "Name",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "fsx_ad_service_name",
                          "cli_id": "ad_service_name",
                          "label": "AD Service Name",
                          "help": "Directory FQN (corp.example.com)",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "fsx_ad_admin_password",
                          "cli_id": "ad_admin_password",
                          "label": "AD Admin Password",
                          "inputType": "password"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "fsx_storage_capacity",
                          "cli_id": "storage_capacity",
                          "label": "Storage Capacity",
                          "help": "(GiB) minimum of 32 and maximum of 65536",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Input",
                          "id": "fsx_throughput_capacity",
                          "cli_id": "throughput_capacity",
                          "label": "Throughput Capacity",
                          "help": "Throughput (MB/s) of the file system in power of 2 increments, minimum of 8 and maximum of 2048",
                          "inputType": "text"
                        }
                      ]
                    },
                    {
                      "type": "Theia::Control::Toggle",
                      "id": "lb_enabled",
                      "label": "Create Application Load Balancer",
                      "controls": [
                        {
                          "type": "Theia::Control::Input",
                          "id": "lb_name",
                          "cli_id": "name",
                          "label": "Name",
                          "help": "Load Balancer Name. Up to 26 characters.",
                          "inputType": "text"
                        },
                        {
                          "type": "Theia::Control::Toggle",
                          "id": "lb_is_internal",
                          "cli_id": "is_internal",
                          "label": "Internal?",
                          "help": ""
                        },
                        {
                          "type": "Theia::Control::Select",
                          "id": "lb_type",
                          "cli_id": "type",
                          "label": "Load Balancer Type",
                          "help": "",
                          "default": "application",
                          "options": [
                            {
                              "type": "Theia::Option",
                              "label": "Application",
                              "value": "application"
                            },
                            {
                              "type": "Theia::Option",
                              "label": "Network",
                              "value": "network"
                            }
                          ]
                        },
                        {
                          "type": "Theia::Control::MultiSelect",
                          "id": "lb_subnets",
                          "cli_id": "subnets",
                          "label": "Subnets",
                          "help": "",
                          "datasource": "formdata_from_aws?type=subnets"
                        },
                        {
                          "type": "Theia::Control::MultiSelect",
                          "id": "lb_security_group_ids",
                          "label": "Security Group Ids",
                          "help": "",
                          "datasource": "formdata_from_aws?type=vpc_security_groups"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "order": 35,
          "info": "### EC2 Backend\n\n\n\nThis is a quickstart for creating an EC2 backend with supporting services, including auto-scaling, load balancing, file storage (EBS, FSx for Windows, EFS)"
        },
        {
          "type": "Theia::Action",
          "label": "Unmanaged EC2 Instances",
          "id": "ec2_list",
          "module": "ec2",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2_list",
              "datasource": "resources/ec2?p=dummy",
              "env_param_required": true,
              "columns": [
                "ec2_instance_id",
                "ec2_instance_type",
                "ec2_instance_name",
                "ec2_launch_time",
                "ec2_enable_trend"
              ],
              "title": "Unmanaged EC2 Instances",
              "description": "This list only includes instances not managed by RapidCloud",
              "submit": "Continue",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2_list",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Enable Trend Cloud One Workload Security",
                  "command": {
                    "phase": "ec2",
                    "command": "enable_trend",
                    "refresh_status": false
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_instance_name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_instance_id",
                  "label": "Instance ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 40
        },
        {
          "type": "Theia::Action",
          "label": "EC2 Launch Templates",
          "id": "ec2_list_launch_templates",
          "module": "ec2",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2_list_launch_templates",
              "datasource": "resources/ec2_launch_templates?p=dummy",
              "env_param_required": true,
              "columns": [
                "ec2_launch_template_name",
                "ec2_launch_template_id",
                "default_version",
                "latest_version",
                "create_time"
              ],
              "title": "EC2 Launch Templates",
              "description": "This list only includes existing Launch Templates",
              "submit": "Continue",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2_list_launch_templates",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Submit",
                  "command": {
                    "phase": "ec2",
                    "command": "enable_trend",
                    "target": "launch_template"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_launch_template_name",
                  "label": "EC2 Launch Template Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_launch_template_id",
                  "label": "EC2 Launch Template ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 50
        },
        {
          "type": "Theia::Action",
          "label": "Auto Scaling Groups",
          "id": "asg",
          "module": "asg",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "asg",
              "datasource": "data?type=metadata&filter_name=module&filter_value=asg",
              "env_param_required": true,
              "columns": [
                "name",
                "asg_launch_template_name",
                "asg_launch_template_version",
                "asg_instance_type",
                "asg_ami_id",
                "asg_placement_group_name",
                "asg_placement_group_strategy",
                "asg_vpc_zone_identifier",
                "asg_desired_capacity",
                "asg_min_size",
                "asg_max_size",
                "timestamp"
              ],
              "title": "Auto Scaling Groups",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "asg",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "asg",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_launch_template_name",
                  "cli_id": "launch_template_name",
                  "label": "Launch Template Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_launch_template_version",
                  "cli_id": "launch_template_version",
                  "label": "Launch Template Version",
                  "inputType": "text",
                  "default": "$Latest"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_instance_type",
                  "cli_id": "instance_type",
                  "label": "EC2 Instance Type",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_ami_id",
                  "cli_id": "ami_id",
                  "label": "AMI ID",
                  "help": "RapidCLoud currently only supports Amazon Linux based AMIs. Default is 'ami-0022f774911c1d690', Amazon Linux 2 Kernel 5.10 AMI 2.0.20220426.0 x86_64 HVM gp2",
                  "default": "ami-0022f774911c1d690",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_placement_group_name",
                  "cli_id": "placement_group_name",
                  "label": "Placement Group Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "asg_placement_group_strategy",
                  "cli_id": "placement_group_strategy",
                  "label": "Placement Group Strategy",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Cluster",
                      "value": "cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Partition",
                      "value": "partition"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Spread",
                      "value": "spread"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "asg_vpc_zone_identifier",
                  "cli_id": "vpc_zone_identifier",
                  "label": "Subnets",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=asg"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_desired_capacity",
                  "cli_id": "desired_capacity",
                  "label": "Desired Capacity",
                  "help": "The number of EC2 instances running in the group",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_min_size",
                  "cli_id": "min_size",
                  "label": "Min Size",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_max_size",
                  "cli_id": "max_size",
                  "label": "Max Size",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 60,
          "info": "### AutoScaling Groups\n\n\n\nAn Auto Scaling group is a logical grouping of EC2 instances that manages automatic scaling\n\n\n\n**Launch Template Name**\n\n\n\nA Launch Template specifies the necessary information to configure the EC2 instances in the ASG\n\n\n\n**Launch Template Version**\n\n\n\nThe version of the launch template to use, defaults to $Latest\n\n\n\n**Instance Type**\n\n\n\nThe instance type to use for your instance, defaults to `t2.micro`.\n\nView available instance types [here](https://aws.amazon.com/ec2/instance-types)\n\n\n\n**AMI ID**\n\n\n\nThe Amazon Machine Image to use for the EC2 instances in the ASG\n\n\n\n**Placement Group Name**\n\n\n\nThe name of the placement group into which you'll launch your instances\n\n\n\n**Placement Group Strategy**\n\n\n\nThe placement strategy, allowed values are (cluster | partition | spread).\n\nFind more information [here](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html)\n\n\n\n**Subnets**\n\n\n\nA comma-separated list of subnet IDs to attach to the LB\n\n\n\n**Desired Capacity**\n\n\n\nThe number of Amazon EC2 instances that should be running in the ASG\n\n\n\n**Min Size**\n\n\n\nThe minimum size of the Auto Scaling Group\n\n\n\n**Max Size**\n\n\n\nThe maximum size of the Auto Scaling Group"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Containers",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/box-solid.svg",
      "route": "containers",
      "id": "containers",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Elastic Container Registry",
          "id": "ecr",
          "module": "ecr",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ecr",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ecr",
              "env_param_required": true,
              "columns": [
                "name",
                "ecr_image_tag_mutability",
                "ecr_scan_on_push",
                "ecr_encryption_type",
                "ecr_kms_key",
                "timestamp"
              ],
              "title": "Elastic Container Registry",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ecr",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "ecr",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecr_image_tag_mutability",
                  "cli_id": "image_tag_mutability",
                  "label": "Image Tag Mutability",
                  "help": "Prevent image tags from being overwritten",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "MUTABLE",
                      "value": "MUTABLE"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "IMMUTABLE",
                      "value": "IMMUTABLE"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "ecr_scan_on_push",
                  "cli_id": "scan_on_push",
                  "label": "Scan Images on Push"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecr_encryption_type",
                  "cli_id": "encryption_type",
                  "label": "Encryption Type",
                  "default": "AES256",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "AES256",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AES256",
                        "disableControls": [
                          "ecr_kms_key"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "KMS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "KMS",
                        "enableControls": [
                          "ecr_kms_key"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecr_kms_key",
                  "cli_id": "kms_key",
                  "label": "KMS Key",
                  "help": "KMS Key ARN. If not specified, uses the default AWS managed key for ECR.",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Elastic Container Registry\n\n\n\nECR is an AWS managed container image registry\n\n\n\n**Name**\n\n\n\nRepository name, will be prefixed with your RapidCloud environment name\n\n\n\n**Image Tag Mutability**\n\n\n\nPrevent image tags from being overwritten, allowed values are `(MUTABLE | IMMUTABLE)`\n\n\n\n**Scan Images on Push**\n\n\n\nIdentify software vulnerabilities in your container images on image push. Scanning can still be performed manually if set to false.\n\n\n\n**Encryption Type**\n\n\n\nThe encryption type to use for the repository, defaults to `AES256`. allowed values are `(AES256 | KMS)`.\n\n\n\n**KMS Key**\n\n\n\nThe KMS Key ARN to use when the selected encryption type is `KMS`. If no KMS Key is provided then the default AWS managed key for ECR will be used."
        },
        {
          "type": "Theia::Action",
          "label": "AWS ECS",
          "id": "ecs",
          "module": "ecs",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ecs",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ecs",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp",
                "ecs_image_url",
                "ecs_image_tag",
                "ecs_task_cpu_units",
                "ecs_task_memory",
                "ecs_container_cpu_units",
                "ecs_container_memory",
                "ecs_open_ports",
                "ecs_task_role_arn",
                "ecs_desired_count",
                "ecs_assign_public_ip",
                "ecs_subnet_ids",
                "ecs_security_groups",
                "ecs_environment_variables"
              ],
              "title": "AWS ECS",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ecs",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "ecs",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_image_url",
                  "cli_id": "image_url",
                  "label": "Image URL",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_image_tag",
                  "cli_id": "image_tag",
                  "label": "Image Tag",
                  "inputType": "text",
                  "default": "latest"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_task_cpu_units",
                  "cli_id": "task_cpu_units",
                  "label": "Task CPU Units",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_task_memory",
                  "cli_id": "task_memory",
                  "label": "Task Memory (MiB)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_container_cpu_units",
                  "cli_id": "container_cpu_units",
                  "label": "Container CPU Units",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_container_memory",
                  "cli_id": "container_memory",
                  "label": "Container Memory (MiB)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_open_ports",
                  "cli_id": "open_ports",
                  "label": "Open Ports",
                  "help": "Comma-Separated List of Ports to Make Available",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_desired_count",
                  "cli_id": "desired_count",
                  "label": "Desired Task Count",
                  "help": "Number of Task Instances Desired",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_task_role_arn",
                  "cli_id": "task_role_arn",
                  "label": "Task Role ARN",
                  "help": "If Blank, RapidCloud Will Create an Empty Role",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "ecs_assign_public_ip",
                  "cli_id": "assign_public_ip",
                  "label": "Assign Public IP?"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecs_subnet_ids",
                  "cli_id": "subnet_ids",
                  "label": "Subnet IDs",
                  "help": "Comma-Separated List of Subnets to Associate",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=ecs"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecs_security_groups",
                  "cli_id": "security_groups",
                  "label": "Security Groups",
                  "help": "Comma-Separated List of Security Groups to Associate",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=ecs"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_environment_variables",
                  "cli_id": "environment_variables",
                  "label": "Environment Variables",
                  "help": "Comma-Separated List of Key/Value Pairs (foo=bar, env=test)",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Elastic Container Service\n\n\n\nECS is a fully managed container orchestration service that makes it easy for you to deploy, manage, and scale containerized applications\n\n\n\n**Image URL**\n\n\n\nThe location of the image you're deploying\n\n\n\n**Image Tag**\n\n\n\nThe tag of the image you're deploying, defaults to `latest`\n\n\n\n**Enable Container Insights**\n\n\n\nContainer Insights collects metrics at the cluster, task and service levels. It also provides diagnostic information, such as container restart failures, to help you isolate issues and resolve them quickly.\n\n\n\n**Task CPU Units**\n\n\n\nThe hard limit of CPU units to present for the task, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size)\n\n\n\n**Task Memory**\n\n\n\nThe hard limit of memory (in MiB) to present to the task, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size)\n\n\n\n**Container CPU Units**\n\n\n\nThe number of cpu units the Amazon ECS container agent reserves for the container, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definition_environment)\n\n\n\n**Container Memory**\n\n\n\nThe amount (in MiB) of memory to present to the container, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#standard_container_definition_params)\n\n\n\n**Open Ports**\n\n\n\nSpecify which ports to make available in your ECS service\n\n\n\n**Desired Count**\n\n\n\nNumber of task instances desired\n\n\n\n**Task Role ARN**\n\n\n\nARN of IAM Role to attach to task. If left blank, RapidCloud will create an empty role\n\n\n\n**Assign Public IP**\n\n\n\nWhether to assign a public IP address to the ENI\n\n\n\n**Subnet IDs**\n\n\n\nComma-separated list of subnets to associate\n\n\n\n**Security Groups**\n\n\n\nComma-separated list of security groups to associate\n\n\n\n**Environment Variables**\n\n\n\nComma-separated list of key/value pairs. E.g. env=dev, name=my-ecs-service"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "EKS",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/boxes-stacked-solid.svg",
      "route": "eks",
      "id": "EKS",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "EKS Cluster",
          "id": "eks_create_cluster",
          "module": "eks",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "eks_create_cluster",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=eks,create_cluster",
              "env_param_required": true,
              "columns": [
                "cluster_name",
                "eks_cluster_name",
                "eks_eks_version",
                "eks_subnet_ids",
                "eks_endpoint_public_access",
                "eks_endpoint_public_access_cidrs",
                "timestamp"
              ],
              "title": "EKC Cluster",
              "description": "Create an EKS cluster",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "eks_create_cluster",
              "title": "EKS Cluster",
              "description": "Create an EKS Cluster",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Prior to removing this EKS cluster, Make sure to remove the AWS AUTH and EXTRAS and apply your changes!!!",
                  "command": {
                    "phase": "eks",
                    "command": "remove_eks_cluster",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "eks",
                    "command": "create_cluster",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_cluster_name",
                  "label": "Cluster Name",
                  "help": "The EKS Cluster Name",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_eks_version",
                  "label": "EKS Version",
                  "help": "The EKS Cluster Version",
                  "inputType": "text",
                  "default": "1.26"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "eks_subnet_ids",
                  "label": "Subnets",
                  "help": "Select 2 subnet ids to place your EKS control plane api in",
                  "datasource": "custom/module_eks_subnets?extra=true&module_name_arg=eks"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_endpoint_public_access",
                  "label": "Public Api Access",
                  "help": "Enable public api access to your EKS control plane (Not Recommended)",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_endpoint_public_access_cidrs",
                  "label": "Public Api Access Cidrs",
                  "help": "A comma separated list of CIDRs that are allowed to access your Public EKS control plane",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "eks_log_types",
                  "label": "Log Types",
                  "help": "Select the log types you wish to log to cloudwatch",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "api",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "api",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "audit",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "audit",
                        "disableControls": [
                          "route_tables"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "authenticator",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "authenticator",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "controllerManager",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "controllerManager",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "scheduler",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "scheduler",
                        "disableControls": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_cluster_log_retention_period",
                  "label": "Log retention in days",
                  "help": "Log retention in days",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "0",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "0",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "1",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "1",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "3",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "3",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "5",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "5",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "7",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "7",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "14",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "14",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "30",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "30",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "60",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "60",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "90",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "90",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "120",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "120",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "150",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "150",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "180",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "180",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "365",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "365",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "400",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "400",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "545",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "545",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "731",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "731",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "1096",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "1096",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "1827",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "1827",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "2192",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "2192",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "2557",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "2557",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "2922",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "2922",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "3288",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "3288",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "3653",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "3653",
                        "disableControls": [
                          ""
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_tags",
                  "label": "Tags",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_tags",
                  "add_value_label": "Tags for your resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### EKS Cluster\n\n\n\nCreate the `EKS` cluster control plane\n\n---\n\n## Inputs\n\n\n\n**Cluster Name**\n\nThe name of the `EKS` cluster, your `profile` name will be prefixed to this value.\n\n\n\n**EKS Version**\n\nThe `EKS` Cluster versions, a list of supported versions can be found <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html\" target=\"_blank\">here</a>\n\n\n\n**Subnets**\n\nSpecify two subnets to place the `EKS` cluster API nodes in, it is recommended to use private `VPC` subnets to host your control plane. \n\n\n\n**Public API Access**\n\nToggle this to allow access to your `EKS` control plan from the internet.\n\n\n\n**Public Api Access CIDRs** \n\nIf you chose to allow internet access, you will need to provide a comma separated list of CIDRs to allow access, for example `10.0.0.1/32` \n\n\n\n**Log Types**\n\nThe `EKS` control plane logging provides audit and diagnostic logs directly from the Amazon EKS control plane to Cloudwatch Logs in your account.\n\n\n\n```\n\nAPI server (api) \u2013 Your cluster's API server is the control plane component that exposes the Kubernetes API. If you enable API server logs when you launch the cluster, or shortly thereafter, the logs include API server flags that were used to start the API server. For more information, see kube-apiserver and the audit policy in the Kubernetes documentation.\n\n\n\nAudit (audit) \u2013 Kubernetes audit logs provide a record of the individual users, administrators, or system components that have affected your cluster. For more information, see Auditing in the Kubernetes documentation.\n\n\n\nAuthenticator (authenticator) \u2013 Authenticator logs are unique to Amazon EKS. These logs represent the control plane component that Amazon EKS uses for Kubernetes Role Based Access Control (RBAC) authentication using IAM credentials. For more information, see Cluster management.\n\n\n\nController manager (controllerManager) \u2013 The controller manager manages the core control loops that are shipped with Kubernetes. For more information, see kube-controller-manager in the Kubernetes documentation.\n\n\n\nScheduler (scheduler) \u2013 The scheduler component manages when and where to run pods in your cluster. For more information, see kube-scheduler in the Kubernetes documentation.\n\n```\n\n\n\nSelect the log groups you wish to export.\n\n\n\n**Log Retention**\n\nHow long should the above logs be retained in Cloudwatch\n\n\n\n**Tags**\n\nTags for your `EKS` cluster \n"
        },
        {
          "type": "Theia::Action",
          "label": "Managed Node Group",
          "id": "eks_create_node_group",
          "module": "eks",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "eks_create_node_group",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=eks,create_node_group",
              "env_param_required": true,
              "columns": [
                "eks_node_group_name",
                "eks_cluster_name",
                "eks_instance_types",
                "eks_capacity_type",
                "eks_desired_size",
                "eks_min_size",
                "eks_max_size",
                "timestamp"
              ],
              "title": "Managed Node Group",
              "description": "Create and attached a Managed Node Group to an EKS Cluster",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "eks_create_node_group",
              "title": "EKS Node Group",
              "description": "Create an EKS Node Group",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "eks",
                    "command": "remove_node_group",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "eks",
                    "command": "create_node_group",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_node_group_name",
                  "label": "Node Group Name",
                  "help": "Node Group Name",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_cluster_name",
                  "label": "Cluster Name",
                  "help": "Select the Cluster name you wish to attach this Node Group to",
                  "datasource": "custom/module_eks_clusters?extra=true&module_name_arg=eks",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "eks_subnet_ids",
                  "label": "Subnets",
                  "help": "Select at least two subnets to place your EKS nodes in",
                  "datasource": "custom/module_eks_subnets?extra=true&module_name_arg=eks"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_instance_types",
                  "label": "Instance Types",
                  "help": "Node Group instance types, seperated by comma",
                  "inputType": "text",
                  "default": "t3.medium,t3a.medium"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_desired_size",
                  "label": "Desired Size",
                  "help": "The Node Group desired size",
                  "inputType": "text",
                  "default": "2"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_max_size",
                  "label": "Max Size",
                  "help": "The Node Group max size",
                  "inputType": "text",
                  "default": "5"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_min_size",
                  "label": "Min Size",
                  "help": "The Node Group minimum size",
                  "inputType": "text",
                  "default": "0"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_capacity_type",
                  "label": "Capacity Type",
                  "help": "The Node Group instance capacity type",
                  "inputType": "text",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "SPOT",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "SPOT",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "On Demand",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "ON_DEMAND"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_volume_size",
                  "label": "Volume Size",
                  "help": "The size of the EBS volume attached to nodes in this Node Group",
                  "inputType": "text",
                  "default": "10"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_volume_type",
                  "label": "Volume Type",
                  "help": "The type of the EBS volume attached to nodes in this Node Group",
                  "inputType": "text",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "GP3",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "gp3",
                        "disableControls": [
                          ""
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "GP2",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "gp2"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_force_update_version",
                  "label": "Force node version updates",
                  "help": "Force version update if existing pods are unable to be drained due to a pod disruption budget issue",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_labels",
                  "label": "Labels",
                  "help": "Labels you wish to apply to the nodes in this Node Group",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_labels",
                  "add_value_label": "Labels for your resource"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_tags",
                  "label": "Tags",
                  "help": "Labels you wish to apply to the nodes in this Node Group",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_tags",
                  "add_value_label": "Tags for your resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Node Groups\n\n\n\nCreate and attach an `EKS Managed Node Group` to an `EKS` cluster.\n\n<a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html)\" target=\"_blank\">EKS Managed Node Group</a>\n\n\n\n\n\n---\n\n## Inputs\n\n**Node Group Name**\n\n\n\nThe name of your `Node Group`, your profile name will be prefixed to it.\n\n\n\n**Cluster Name**\n\nSelect the `EKS` Cluster you wish to attach this `Node Group` to.\n\n\n\n**Subnets**\n\nSelect at least two subnets to place your EKS nodes in.\n\n\n\n**Instance Types**\n\nComma separated list of instance types for your node group, you should pick different families with similar CPU/RAM sizes for better availability\n\n\n\n**Node Group Sizing**\n\n`Desired Size`: the amount of initial nodes provisioned in this `Node Group`\n\n`Max Size`: the maximum amount of initial nodes provisioned in this `Node Group`\n\n`Min Size`: the minimum amount of initial nodes provisioned in this `Node Group`\n\n\n\n**Capacity Type**\n\n`SPOT`: use spot instances for this `Node Group`\n\n`ON DEMAND`: use on demand instances for this `Node Group`\n\n\n\n**Volume Size**\n\nThe size of the `EBS` volume attached to each node in this `Node Group` \n\n\n\n**Volume Type**\n\nThe type of the `EBS` volume attached to each node in this `Node Group` \n\n\n\n**Force Node Version Update**\n\nForce version update if existing pods are unable to be drained due to a pod disruption budget issue, as described <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managed-node-update-behavior.html\" target=\"_blank\">here</a>\n\n\n\n**Labels**\n\n`EKS` labels for each node in this `Node Group`\n\n\n\n**Tags**\n\n`AWS` tags for each node in this `Node Group`\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "Fargate Profile",
          "id": "eks_create_fargate_profile",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "eks_create_fargate_profile",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=eks,create_fargate_profile",
              "env_param_required": true,
              "columns": [
                "eks_profile_name",
                "eks_cluster_name",
                "eks_eks_version",
                "timestamp"
              ],
              "title": "Fargate Profile",
              "description": "Create an EKS fargate profile",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "eks_create_fargate_profile",
              "title": "EKS Fargate Profile",
              "description": "Create an EKS Fargate Profile",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "eks",
                    "command": "remove_node_group",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "eks",
                    "command": "create_fargate_profile",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_profile_name",
                  "label": "Fargate Profile Name",
                  "help": "Fargate Profile Name",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_cluster_name",
                  "label": "Cluster Name",
                  "help": "Select the Cluster name you wish to attach this Node Group to",
                  "datasource": "custom/module_eks_clusters?extra=true&module_name_arg=eks",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "eks_subnet_ids",
                  "label": "Subnets",
                  "help": "Select at least two subnets to place your EKS fargate nodes in",
                  "datasource": "custom/module_eks_subnets?extra=true&module_name_arg=eks"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_namespace_1",
                  "label": "Namespace 1",
                  "help": "First Namespace (out of 5)",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "First Namespace is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_namespace_1_labels",
                  "label": "Namespace 1 labels",
                  "help": "labels to use with Namespace 1",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_namespace_1_labels",
                  "add_value_label": "labels for Namespace 1"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_namespace_2",
                  "label": "Namespace 2",
                  "help": "Second Namespace (out of 5)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_namespace_2_labels",
                  "label": "Namespace 2 labels",
                  "help": "labels to use with Namespace 2",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_namespace_2_labels",
                  "add_value_label": "labels for Namespace 2"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_namespace_3",
                  "label": "Namespace 3",
                  "help": "Third Namespace (out of 5)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_namespace_3_labels",
                  "label": "Namespace 3 labels",
                  "help": "labels to use with Namespace 3",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_namespace_3_labels",
                  "add_value_label": "labels for Namespace 3"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_namespace_4",
                  "label": "Namespace 4",
                  "help": "Forth Namespace (out of 5)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_namespace_4_labels",
                  "label": "Namespace 4 labels",
                  "help": "labels to use with Namespace 4",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_namespace_4_labels",
                  "add_value_label": "labels for Namespace 4"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_namespace_5",
                  "label": "Namespace 5, Leave empty if you plan to install CORE DNS addons!",
                  "help": "Fifth Namespace (out of 5)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_namespace_5_labels",
                  "label": "Namespace 5 labels",
                  "help": "labels to use with Namespace 5",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_namespace_5_labels",
                  "add_value_label": "labels for Namespace 5"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "eks_tags",
                  "label": "Tags",
                  "help": "Tags you wish to apply to the Fargate profile",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=eks,${name}&result=params,eks_tags",
                  "add_value_label": "Tags for your resource"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### This file is optional\n\n\n\nCreate a `Fargate` Profile \n\n\n\n---\n\n## Inputs\n\n\n\n**Profile Name**\n\nThe name of the `Fargate` profile, your `rapidcloud` profile will be prefixed to it.\n\n\n\n**Cluster Name**\n\nThe name of the `EKS` cluster to attach this `Fargate` profile to.\n\n\n\n**Namespaces**\n\n`Fargate` Allows for up to five namespaces per profile, you may specificy the following for each namespace:\n\n\n\n`Namespace (1-5)`: the name of the namespace to create.\n\n`Namespace (1-5) Labels`: map of Kubernetes labels for selection of where to place pods. \n\n\n\nIf you plan on using `CORE DNS` which may be deployed using the `Addons` section, remember to use only four of the possible five namespaces, since the addon would need its own `Fargate` compute resources and namespace.\n\n\n\n**Tags**\n\nTags to apply to the `Fargate` profile.\n"
        },
        {
          "type": "Theia::Action",
          "label": "Addons",
          "id": "eks_manage_addons",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "eks_manage_addons",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=eks,manage_addons",
              "env_param_required": true,
              "columns": [
                "eks_cluster_name",
                "eks_compute_type",
                "eks_enable_aws_coredns",
                "eks_enable_aws_kube_proxy",
                "eks_enable_aws_vpc_cni",
                "eks_enable_aws_ebs_csi",
                "timestamp"
              ],
              "title": "Addons",
              "description": "Deploy AWS EKS addons",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "eks_manage_addons",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "eks",
                    "command": "manage_addons",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_cluster_name",
                  "label": "Cluster Name",
                  "help": "The name of the Cluster to install addons to",
                  "datasource": "custom/module_eks_clusters?extra=true&module_name_arg=eks",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_compute_type",
                  "label": "Compute Type",
                  "help": "The Compute Type of the Cluster",
                  "inputType": "text",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "EC2",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "ec2",
                        "disableControls": [
                          "eks_subnet_ids"
                        ],
                        "enbaleControls": [
                          "eks_enable_aws_kube_proxy",
                          "eks_aws_kube_proxy_version",
                          "eks_enable_aws_vpc_cni",
                          "eks_aws_vpc_cni_version",
                          "eks_enable_aws_ebs_csi",
                          "eks_aws_ebs_csi_version"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Fargate",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "fargate",
                        "enableControls": [
                          "eks_subnet_ids"
                        ],
                        "disableControls": [
                          "eks_enable_aws_kube_proxy",
                          "eks_aws_kube_proxy_version",
                          "eks_enable_aws_vpc_cni",
                          "eks_aws_vpc_cni_version",
                          "eks_enable_aws_ebs_csi",
                          "eks_aws_ebs_csi_version"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "eks_subnet_ids",
                  "label": "Subnets",
                  "help": "Select two subnets to place your addon pods in (Fargate Only)",
                  "datasource": "custom/module_eks_subnets?extra=true&module_name_arg=eks"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_enable_aws_coredns",
                  "label": "Enable COREDNS addon",
                  "help": "Enable COREDNS addon",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_aws_coredns_version",
                  "label": "COREDNS Version",
                  "help": "Enable COREDNS addon",
                  "inputType": "text",
                  "dynamic_datasource": "custom/module_eks_addon_version?extra=true&module_name_arg=eks&a=coredns&v=${eks_cluster_name}"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_aws_coredns_replica_count",
                  "label": "COREDNS Pod Count",
                  "help": "How many COREDNS pods should be running",
                  "inputType": "text",
                  "default": "2"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_enable_aws_kube_proxy",
                  "label": "Enable KUBE PROXY addon",
                  "help": "Enable KUBE PROXY addon",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_aws_kube_proxy_version",
                  "label": "KUBE PROXY version",
                  "dynamic_datasource": "custom/module_eks_addon_version?extra=true&module_name_arg=eks&a=kube-proxy&v=${eks_cluster_name}"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_enable_aws_vpc_cni",
                  "label": "Enable VPC CNI addon",
                  "help": "Enable VPC CNI addon",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_aws_vpc_cni_version",
                  "label": "VPC CNI version",
                  "help": "Enable VPC CNI addon version",
                  "dynamic_datasource": "custom/module_eks_addon_version?extra=true&module_name_arg=eks&a=vpc-cni&v=${eks_cluster_name}"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_enable_aws_ebs_csi",
                  "label": "Enable EBS CSI addon",
                  "help": "Enable EBS CSI addon",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_aws_ebs_csi_version",
                  "label": "EBS CSI version",
                  "help": "EBS CSI addon version",
                  "dynamic_datasource": "custom/module_eks_addon_version?extra=true&module_name_arg=eks&a=aws-ebs-csi-driver&v=${eks_cluster_name}"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### This file is optional\n\n\n\nInstall `EKS Addons` provided and managed by AWS.\n\n\n\n---\n\n## Inputs \n\n\n\n**Cluster Name**\n\nThe name of the `EKS` cluster the addons should be installed to. \n\n\n\n**Compute Type**\n\n`Fargate`: only supports `CORE DNS`, requires a fargate profile with an available namespace.\n\n`EC2`: supports all addons, requires at least 2 managed nodes.\n\n\n\n**Subnets**\n\nWhen installing to `Fargate` a profile will be created using at least two subnets, select the subnets you wish to deploy the `CORE DNS` `Fargate` profile to.\n\n\n\n**CORE DNS**\n\n```\n\nA flexible, extensible DNS server that can serve as the Kubernetes cluster DNS. The self-managed or managed type of this add-on was installed, by default, when you created your cluster. When you launch an Amazon EKS cluster with at least one node, two replicas of the CoreDNS image are deployed by default, regardless of the number of nodes deployed in your cluster. The CoreDNS pods provide name resolution for all pods in the cluster. You can deploy the CoreDNS pods to Fargate nodes if your cluster includes an AWS Fargate profile with a namespace that matches the namespace for the CoreDNS deployment.\n\n```\n\n\n\n`Enable`: toggle on/off to install the addon.\n\n`Version`: select the version for your cluster.\n\n`Pod Count`: by default, AWS will launch two `CORE DNS` pods, this field allows you to add pods to your replica set.\n\n\n\n**Kube Proxy**\n\n```\n\nMaintains network rules on each Amazon EC2 node. It enables network communication to your pods. The self-managed or managed type of this add-on is installed on each Amazon EC2 node in your cluster, by default.\n\n```\n\n\n\n`Enable`: toggle on/off to install the addon.\n\n`Version`: select the version for your cluster.\n\n\n\n**VPC CNI**\n\n```\n\nprovides native VPC networking for your cluster. The self-managed or managed type of this add-on is installed on each Amazon EC2 node, by default.\n\n```\n\n\n\n`Enable`: toggle on/off to install the addon.\n\n`Version`: select the version for your cluster.\n\n\n\n**EBS CSI**\n\n```\n\nA Kubernetes Container Storage Interface (CSI) plugin that provides Amazon EBS storage for your cluster.\n\n```\n\n\n\n`Enable`: toggle on/off to install the addon.\n\n`Version`: select the version for your cluster.\n"
        },
        {
          "type": "Theia::Action",
          "label": "EKS Extras",
          "id": "eks_manage_extras",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "eks_manage_extras",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=eks,manage_extras",
              "env_param_required": true,
              "columns": [
                "eks_cluster_name",
                "eks_install_efs_csi",
                "eks_fs_name",
                "eks_install_cluster_autoscaler",
                "eks_install_cluster_autoscaler",
                "eks_install_fluentbit_cloudwatch",
                "eks_install_ingress_alb",
                "eks_install_metrics_server",
                "timestamp"
              ],
              "title": "EKS Extras",
              "description": "Installs several kubernetes extras",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "manage_extras",
              "title": "Install EKS Extras",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "eks",
                    "command": "manage_extras",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_cluster_name",
                  "label": "Cluster Name",
                  "help": "Select the Cluster name you wish to attach this Node Group to",
                  "datasource": "custom/module_eks_clusters?extra=true&module_name_arg=eks",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_vpc_id",
                  "label": "VPC ID",
                  "help": "The VPC the cluster is deployed to",
                  "datasource": "custom/module_eks_vpcs?extra=true&module_name_arg=eks",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "VPC ID is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_install_efs_csi",
                  "label": "Install the EFS CSI integration",
                  "help": "Allows you to map EFS file systems to kubernetes PVCs",
                  "inputType": "text",
                  "default": "false",
                  "disableControls": [
                    "eks_fs_name"
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_fs_name",
                  "label": "EFS Name",
                  "help": "Select the EFS file system you wish to use with this cluster",
                  "datasource": "custom/module_eks_efs_filesystems?extra=true&module_name_arg=eks",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "FS Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_install_cluster_autoscaler",
                  "label": "Cluster Autoscaler",
                  "help": "Install Cluster Autoscaler's latest helm chart",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_install_ingress_alb",
                  "label": "ALB Ingress Controller",
                  "help": "Install the latest ALB Ingress Controller helm chart",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_install_metrics_server",
                  "label": "Metrics Server",
                  "help": "Install the latest Metrics Server helm chart",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "eks_install_fluentbit_cloudwatch",
                  "label": "Fluent-Bit log shipping to Cloudwatch",
                  "help": "Forward container logs to Cloudwatch via Fluent-bit",
                  "inputType": "text",
                  "default": "false"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_fluentbit_log_retention_in_days",
                  "label": "Fluent-Bit Cloudwatch Group Log Retention in Days",
                  "help": "How long to keep application logs in Cloudwatch",
                  "inputType": "text",
                  "default": 7
                }
              ]
            }
          ],
          "order": 1000,
          "info": "# EKS EXTRAS \n\n\n\nThe following EKS extras are opinionated deploys, they will work with predefined defaults described below. \n\n\n\n---\n\n\n\n## Global Inputs\n\n\n\n**Cluster Name**\n\n\n\nThe EKS cluster you wish to use with the EFS CSI Driver.\n\n\n\n\n\n## EFS CSI Driver\n\n\n\nInstalls <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html\" target=\"_blank\">EFS CSI Controller</a> and creates an `efs-sc` kubernetes `storageClass` using the EFS file system selected.\n\nOnce deployed you will be able to deploy PVCs with an EFS back end, see below for an example:\n\n\n\n```\n\napiVersion: v1\n\nkind: PersistentVolumeClaim\n\nmetadata:\n\n  name: efs-claim\n\nspec:\n\n  accessModes:\n\n    - ReadWriteMany\n\n  storageClassName: efs-sc\n\n  resources:\n\n    requests:\n\n      storage: 5Gi\n\n---\n\napiVersion: v1\n\nkind: Pod\n\nmetadata:\n\n  name: efs-app\n\nspec:\n\n  containers:\n\n    - name: app\n\n      image: centos\n\n      command: [\"/bin/sh\"]\n\n      args: [\"-c\", \"while true; do echo $(date -u) >> /data/out; sleep 5; done\"]\n\n      volumeMounts:\n\n        - name: persistent-storage\n\n          mountPath: /data\n\n  volumes:\n\n    - name: persistent-storage\n\n      persistentVolumeClaim:\n\n        claimName: efs-claim\n\n\n\n```\n\n\n\n--- \n\n\n\n## Cluster Autoscaler \n\n\n\nInstalls <a href=\"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md\" target=\"_blank\">Cluster Autoscaler</a>\n\n\n\n--- \n\n## ALB Ingress Controller \n\nInstalls <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/aws-load-balancer-controller.html\" target=\"_blank\">AWS Load Balancer Controller</a>\n\n\n\n\n\n### Prerequisites\n\nTo create internal load balancers you will need to tag at least two private subnets with the following tags:\n\n```\n\nkubernetes.io/role/internal-elb: 1\n\n```\n\n\n\nTo create internet facing load balancers you will need to tag at least two private subnets with the following tags:\n\n```\n\nkubernetes.io/role/elb: 1\n\n```\n\n\n\n### Ingress Class\n\n\n\nThis install creates an ingress class named `alb` which you can use in your `Ingress manifests` to create an ingress, the example below will create an ALB with listeners on port 80/443. Note the `kubernetes.io/ingress.class` annotation is `alb`.\n\n\n\n```\n\n\n\napiVersion: networking.k8s.io/v1\n\nkind: Ingress\n\nmetadata:\n\n  namespace: app1\n\n  name: app1-ingress\n\n  annotations:\n\n    kubernetes.io/ingress.class: alb\n\n    alb.ingress.kubernetes.io/scheme: internet-facing\n\n    alb.ingress.kubernetes.io/backend-protocol: \"HTTP\"\n\n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\":443}]'\n\n    alb.ingress.kubernetes.io/actions.ssl-redirect: '{\"Type\": \"redirect\", \"RedirectConfig\": { \"Protocol\": \"HTTPS\", \"Port\": \"443\", \"StatusCode\": \"HTTP_301\"}}'\n\nspec:\n\n  rules:\n\n    - host: test-app.kinect.internal\n\n      http:\n\n        paths:      \n\n        - backend:\n\n            service:\n\n              name: ssl-redirect\n\n              port:\n\n                name: use-annotation\n\n          path: /\n\n          pathType: ImplementationSpecific\n\n        - backend:\n\n            service:\n\n              name: app1\n\n              port:\n\n                number: 80\n\n          path: /*\n\n          pathType: ImplementationSpecific              \n\n```\n\n\n\nFor a full list of annotations refer to <a href=\"https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/annotations/\" target=\"_blank\">this link</a>\n\n\n\n\n\n---\n\n## Metrics Server\n\nInstalls <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/metrics-server.html\" target=\"_blank\">Metrics Server</a>\n\n\n\n\n\n---\n\n## Fluent-Bit log shipping to Cloudwatch\n\nInstalls <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-setup-logs-FluentBit.html\" target=\"_blank\">Fluent-Bit Logs to Cloudwatch</a>\n\nOnce installed container logs will ship to cloudwatch, you can set the retention policies by setting the `Log Retention in Days` input.\n\nThe logs will be stored in `/aws/eks/<cluster_name>/logs` \n"
        },
        {
          "type": "Theia::Action",
          "label": "AWS Auth",
          "id": "eks_manage_aws_auth",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "eks_manage_aws_auth",
              "datasource": "custom/module_eks_aws_auth?extra=true&module_name_arg=eks",
              "env_param_required": true,
              "columns": [
                "eks_cluster_name",
                "eks_map_roles_values",
                "eks_map_users_values",
                "timestamp"
              ],
              "title": "AWS Auth",
              "description": "Manage the AWS EKS Auth Config Map",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "eks_manage_aws_auth",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "eks",
                    "command": "manage_aws_auth",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "eks_cluster_name",
                  "label": "Cluster Name",
                  "help": "Select the Cluster name you wish to attach this Node Group to",
                  "datasource": "custom/module_eks_clusters?extra=true&module_name_arg=eks",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ],
                  "disableControls": [
                    "eks_fargate_profiles",
                    "eks_node_groups"
                  ]
                },
                {
                  "type": "Theia::Control::TextArea",
                  "id": "eks_map_roles_values",
                  "label": "Map Roles",
                  "help": "Map Roles",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::TextArea",
                  "id": "eks_map_users_values",
                  "label": "Map Users",
                  "help": "Map Users",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_fargate_profiles",
                  "label": "Fargate Profile (Read Only)",
                  "help": "A list of Fargate Profiles attached to this cluster, will be added to aws_auth map",
                  "inputType": "text",
                  "readonly": "true"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "eks_node_groups",
                  "label": "Node Groups (Read Only)",
                  "help": "A list of Node Groups attached to this cluster, will be added to aws_auth map",
                  "inputType": "text",
                  "readonly": "true"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### EKS AWS Auth Config Map\n\n\n\nThis section allows you to add users and roles to the EKS `aws-auth` config map.\n\n\n\nNote:\n\n\n\n- It is recommended to add roles and users AFTER you created at least one compute resource (Fargate or Managed Group)\n\n- You should remove this configuration and `apply` before removing an EKS cluster.\n\n\n\n---\n\n## Inputs\n\n\n\n**Cluster Name**\n\nThe name of the `EKS` cluster, your `profile` name will be prefixed to this value.\n\n\n\n**Map Roles**\n\nProvide a json list of maps containing roles you wish to add to the `aws-auth` map. \n\n\n\nExample: \n\n\n\n```\n\n[\n\n  {\n\n    \"rolearn\": \"arn:aws:iam::123456789:role/RoleOne\",\n\n    \"username\": \"user.one\",\n\n    \"groups\": [\n\n      \"some:group\",\n\n      \"some:another-group\"\n\n    ]\n\n  },\n\n  {\n\n    \"rolearn\": \"arn:aws:iam::123456789:role/RoleTwo\",\n\n    \"username\": \"user.two\",\n\n    \"groups\": [\n\n      \"system:masters\"\n\n    ]\n\n  },\n\n  {\n\n    \"rolearn\": \"arn:aws:iam::123456789:role/user.three\",\n\n    \"username\": \"user.three\",\n\n    \"groups\": [\n\n      \"system:masters\"\n\n    ]\n\n  }\n\n]\n\n\n\n```\n\n\n\n**Map Users**\n\nProvide a json list of maps containing users you wish to add to the `aws-auth` map. \n\n\n\nExample:\n\n\n\n```\n\n[\n\n  {\n\n    \"userarn\": \"arn:aws:iam::123456789:user/user.one\",\n\n    \"username\": \"user.one\",\n\n    \"groups\": [\n\n      \"group:main\",\n\n      \"group:misc\",\n\n      \"group:others\"\n\n    ]\n\n  },\n\n  {\n\n    \"userarn\": \"arn:aws:iam::123456789:user/user.two\",\n\n    \"username\": \"user.two\",\n\n    \"groups\": [\n\n      \"system:masters\",\n\n      \"group:others\"\n\n    ]\n\n  },\n\n  {\n\n    \"userarn\": \"arn:aws:iam::123456789:user/user.three\",\n\n    \"username\": \"user.three\",\n\n    \"groups\": [\n\n      \"system:masters\"\n\n    ]\n\n  }\n\n]\n\n```\n\n\n\n\n\n**Fargate Profile**\n\nRapidCloud will auto populate this field when adding or removing a Fargate profile.\n\n\n\n\n\n**Node Groups**\n\nRapidCloud will auto populate this field when adding or removing a Managed node group.\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Content Delivery",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/road-solid.svg",
      "route": "networking",
      "id": "networking",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Cloudfront Distribution",
          "id": "cloudfront",
          "module": "cloudfront",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "cloudfront",
              "datasource": "data?type=metadata&filter_name=module&filter_value=cloudfront",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp",
                "cloudfront_bucket_name",
                "cloudfront_bucket_regional_domain_name",
                "cloudfront_origin_id"
              ],
              "title": "Cloudfront Distributions",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "cloudfront",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Register",
                  "command": {
                    "phase": "cloudfront",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "cloudfront_bucket_name",
                  "cli_id": "bucket_name",
                  "label": "Bucket Name",
                  "help": "Bucket that CloudFront will route requests to",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=s3,create_bucket&field=name&module_name_arg=cloudfront"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cloudfront_origin_id",
                  "cli_id": "origin_id",
                  "label": "Origin ID",
                  "help": "A unique identifier for the origin",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "waf_name",
                  "cli_id": "waf_name",
                  "label": "WAF Name",
                  "help": "WAF to protect this distribution",
                  "datasource": "formdata?type=metadata&filter_name=module,command,cf_associated&filter_value=waf,create,True&field=name&module_name_arg=cloudfront"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Cloudfront Distribution\n\n\n\nAmazon CloudFront is a web service that speeds up distribution of your static/dynamic web content and image files to your users\n\n\n\n**Bucket Name**\n\n\n\nThe S3 bucket that you want CloudFront to route requests to when a request matches the path pattern for the default cache behavior\n\n\n\n**DNS Name**\n\n\n\nThe DNS domain name of either the S3 bucket, or web site of your custom origin\n\n\n\n**Origin ID**\n\n\n\nA unique identifier for your origin"
        },
        {
          "type": "Theia::Action",
          "label": "REST APIs",
          "id": "api_create",
          "module": "api",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "api_create",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=api,create",
              "env_param_required": true,
              "columns": [
                "name",
                "api_disable_execute_api_endpoint",
                "api_endpoint_type",
                "timestamp"
              ],
              "title": "REST APIs",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "api_create",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "api",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "api_disable_execute_api_endpoint",
                  "cli_id": "disable_execute_api_endpoint",
                  "label": "Disable Default Endpoint?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_endpoint_type",
                  "cli_id": "endpoint_type",
                  "label": "Endpoint Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "EDGE",
                      "value": "EDGE"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "REGIONAL",
                      "value": "REGIONAL"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PRIVATE",
                      "value": "PRIVATE"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### API Create\n\n\n\n**Name**\n\n\n\nName of your API\n\n\n\n**Disable Execute API Endpoint**\n\n\n\nDisable the default API Gateway endpoint, defaults to false\n\n\n\n**Endpoint Type**\n\n\n\nRefers to the hostname of the API and can be edge-optimized, regional, or private, depending on where the majority of your API traffic originates from. See more information [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-endpoint-types.html).\n"
        },
        {
          "type": "Theia::Action",
          "label": "API Lambda Integrations",
          "id": "api_add_lambda_integration",
          "module": "api",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "api_add_lambda_integration",
              "datasource": "data?type=metadata&filter_name=command&filter_value=add_lambda_integration",
              "env_param_required": true,
              "columns": [
                "name",
                "api_http_method",
                "api_rest_api_name",
                "api_parent_resource_name",
                "timestamp"
              ],
              "title": "API Lambda Integrations",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "api_add_lambda_integration",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "api",
                    "command": "remove_lambda_integration"
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "api",
                    "command": "add_lambda_integration",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Resource Name",
                  "help": "creates new API resource if it does not exist",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "api_parent_resource_name",
                  "cli_id": "parent_resource_name",
                  "label": "Parent Resource Name",
                  "default": "root",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_rest_api_name",
                  "cli_id": "rest_api_name",
                  "label": "REST API",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=api,create&field=name&module_name_arg=api"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_http_method",
                  "cli_id": "http_method",
                  "label": "HTTP Method",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "GET",
                      "value": "GET"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "POST",
                      "value": "POST"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PUT",
                      "value": "PUT"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PATCH",
                      "value": "PATCH"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "DELETE",
                      "value": "DELETE"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HEAD",
                      "value": "HEAD"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "OPTIONS",
                      "value": "OPTIONS"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ANY",
                      "value": "ANY"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_lambda_name",
                  "cli_id": "lambda_name",
                  "label": "Lambda Integration",
                  "datasource": "formdata?type=metadata&filter_name=module&filter_value=lambda&field=name&module_name_arg=api"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### API Add Lambda Integration\n\n\n\n**Name**\n\n\n\nAPI Resource Name to create integration for\n\n\n\n**Parent Resource Name**\n\n\n\nIf this is a subresource, specify the name of its parent resource here. If not, leave the default of 'root'\n\n\n\n**Rest API Name**\n\n\n\nName of the REST API that this integration belongs to\n\n\n\n**HTTP Method**\n\n\n\nThe HTTP method for this integration\n\n\n\n**Lambda Name**\n\n\n\nName of the lambda function to handle this integration\n"
        },
        {
          "type": "Theia::Action",
          "label": "Load Balancers",
          "id": "lb_create",
          "module": "lb",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "lb",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=lb,create",
              "env_param_required": true,
              "columns": [
                "name",
                "lb_is_internal",
                "lb_type",
                "lb_subnets",
                "lb_security_group_ids",
                "timestamp"
              ],
              "title": "Load Balancers",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "lb",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "lb",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Load Balancer Name. Up to 26 characters.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "lb_is_internal",
                  "cli_id": "is_internal",
                  "label": "Internal?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_type",
                  "cli_id": "type",
                  "label": "Load Balancer Type",
                  "help": "",
                  "default": "application",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Application",
                      "value": "application"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Network",
                      "value": "network"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "lb_subnets",
                  "cli_id": "subnets",
                  "label": "Subnets",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=lb"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "lb_security_group_ids",
                  "label": "Security Group Ids",
                  "help": "",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=lb"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Elastic Load Balancer\n\n\n\nElastic Load Balancing automatically distributes incoming application traffic across multiple targets and virtual appliances in one or more Availability Zones.\n\n\n\n**Name**\n\n\n\nThe name of your load balancer.\n\n\n\n**Is Internal**\n\n\n\nSpecifies whether your load balancer should be internet-facing.\n\n\n\n**Type**\n\n\n\nAllowed values are `(application | network)`, defaults to `application`.\n\n\n\n**Subnets**\n\n\n\nA comma-separated list of subnet IDs to attach to the LB.\n"
        },
        {
          "type": "Theia::Action",
          "label": "LB Listeners",
          "id": "lb_add_listener",
          "module": "lb",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "lb_add_listener",
              "datasource": "data?type=metadata&filter_name=command&filter_value=add_listener",
              "env_param_required": true,
              "columns": [
                "name",
                "lb_load_balancer_name",
                "lb_port",
                "lb_protocol",
                "lb_target_group_name",
                "lb_alpn_policy",
                "lb_ssl_policy",
                "lb_certificate_arn",
                "timestamp"
              ],
              "title": "LB Listeners",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "lb_add_listener",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "lb",
                    "command": "add_listener",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_load_balancer_name",
                  "cli_id": "load_balancer_name",
                  "label": "Load Balancer",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=lb,create&field=name&module_name_arg=lb"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lb_port",
                  "cli_id": "port",
                  "label": "Port",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_protocol",
                  "cli_id": "protocol",
                  "label": "Protocol",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "HTTP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "HTTP",
                        "disableControls": [
                          "lb_alpn_policy",
                          "lb_ssl_policy",
                          "lb_certificate_arn"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HTTPS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "HTTPS",
                        "disableControls": [
                          "lb_alpn_policy"
                        ],
                        "enableControls": [
                          "lb_certificate_arn",
                          "lb_ssl_policy"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TLS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "TLS",
                        "enableControls": [
                          "lb_alpn_policy",
                          "lb_ssl_policy"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TCP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "TCP",
                        "disableControls": [
                          "lb_alpn_policy",
                          "lb_ssl_policy",
                          "lb_certificate_arn"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TCP_UDP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "TCP_UDP",
                        "disableControls": [
                          "lb_alpn_policy",
                          "lb_ssl_policy",
                          "lb_certificate_arn"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_target_group_name",
                  "cli_id": "target_group_name",
                  "label": "Target Group",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=lb,create_target_group&field=name&module_name_arg=lb"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_alpn_policy",
                  "cli_id": "alpn_policy",
                  "label": "ALPN Policy",
                  "help": "Protocol TLS Only",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "HTTP1Only",
                      "value": "HTTP1Only"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HTTP2Only",
                      "value": "HTTP2Only"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HTTP2Optional",
                      "value": "HTTP2Optional"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HTTP2Preferred",
                      "value": "HTTP2Preferred"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "None",
                      "value": "None"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lb_ssl_policy",
                  "cli_id": "ssl_policy",
                  "label": "SSL Policy",
                  "help": "Protocol TLS/HTTPS Only",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lb_certificate_arn",
                  "cli_id": "certificate_arn",
                  "label": "Certificate ARN",
                  "help": "Protocol TLS/HTTPS Only",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### LB Listeners\n\n\n\n**Name**\n\n\n\nName of the listener\n\n\n\n**Load Balancer Name**\n\n\n\nName of the load balancer in RC\n\n\n\n**Port**\n\n\n\nPort on which the load balancer is listening\n\n\n\n**Protocol**\n\n\n\nProtocol for connections from clients to the load balancer\n\n\n\n**Target Group Name**\n\n\n\nName of target group in RC to route traffic to\n\n\n\n**ALPN Policy**\n\n\n\nName of the Application-Layer Protocol Negotiation (ALPN) policy (valid for TLS protocol only)\n\n\n\n**SSL Policy**\n\n\n\nName of the SSL Policy for the listener, required for protocols TLS/HTTPS\n\n\n\n**Certificate ARN**\n\n\n\nARN of the default SSL server certificate, required if protocol is HTTPS"
        },
        {
          "type": "Theia::Action",
          "label": "LB Target Groups",
          "id": "lb_create_target_group",
          "module": "lb",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "lb_create_target_group",
              "datasource": "data?type=metadata&filter_name=command&filter_value=create_target_group",
              "env_param_required": true,
              "columns": [
                "name",
                "lb_port",
                "lb_protocol",
                "lb_target_type",
                "lb_vpc_id",
                "lb_load_balancer_type",
                "lb_load_balancing_algorithm_type",
                "lb_preserve_client_ip",
                "lb_ip_address_type",
                "lb_protocol_version",
                "lb_targets",
                "timestamp"
              ],
              "title": "LB Target Groups",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "lb_create_target_group",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "lb",
                    "command": "create_target_group",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lb_port",
                  "cli_id": "port",
                  "label": "Port",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_protocol",
                  "cli_id": "protocol",
                  "label": "Protocol",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "HTTP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "HTTP",
                        "enableControls": [
                          "lb_protocol_version"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HTTPS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "HTTPS",
                        "enableControls": [
                          "lb_protocol_version"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TLS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "TLS",
                        "disableControls": [
                          "lb_protocol_version"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TCP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "TCP",
                        "disableControls": [
                          "lb_protocol_version"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TCP_UDP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "TCP_UDP",
                        "disableControls": [
                          "lb_protocol_version"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "GENEVE",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "GENEVE",
                        "disableControls": [
                          "lb_protocol_version"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_target_type",
                  "cli_id": "target_type",
                  "label": "Target Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Instance",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "instance",
                        "disableControls": [
                          "lb_ip_address_type",
                          "lb_ip_targets"
                        ],
                        "enableControls": [
                          "lb_ec2_targets"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "IP",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "ip",
                        "enableControls": [
                          "lb_ip_address_type",
                          "lb_ip_targets"
                        ],
                        "disableControls": [
                          "lb_ec2_targets"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_vpc_id",
                  "cli_id": "vpc_id",
                  "label": "VPC ID",
                  "help": "",
                  "datasource": "formdata_from_aws?type=vpcs&module_name_arg=lb"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_load_balancer_type",
                  "cli_id": "load_balancer_type",
                  "label": "LB Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "ALB",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "alb",
                        "disableControls": [
                          "lb_preserve_client_ip"
                        ],
                        "enableControls": [
                          "lb_load_balancing_algorithm_type"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "NLB",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "nlb",
                        "disableControls": [
                          "lb_load_balancing_algorithm_type"
                        ],
                        "enableControls": [
                          "lb_preserve_client_ip"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_load_balancing_algorithm_type",
                  "cli_id": "load_balancing_algorithm_type",
                  "label": "LB Algorithm Type",
                  "help": "ALB Only",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Round Robin",
                      "value": "round_robin"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Least Outstanding Requests",
                      "value": "least_outstanding_requests"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "lb_preserve_client_ip",
                  "cli_id": "preserve_client_ip",
                  "label": "Preserve Client IP?",
                  "help": "NLB Only"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_ip_address_type",
                  "cli_id": "ip_address_type",
                  "label": "IP Address Type",
                  "help": "Target Type IP Only",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "IPV4",
                      "value": "ipv4"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "IPV6",
                      "value": "ipv6"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_protocol_version",
                  "cli_id": "protocol_version",
                  "label": "Protocol Version",
                  "help": "Protocol HTTP/HTTPS Only",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "HTTP/1.1",
                      "value": "HTTP1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HTTP/2",
                      "value": "HTTP2"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "gRPC",
                      "value": "GRPC"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lb_ip_targets",
                  "cli_id": "ip_targets",
                  "label": "IP Targets",
                  "help": "Comma-separated list of IPs",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "lb_ec2_targets",
                  "cli_id": "ec2_targets",
                  "label": "EC2 Targets",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=ec2,create&field=name&module_name_arg=lb"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### LB Target Groups\n\n\n\n**Name**\n\n\n\nName of the target group\n\n\n\n**Port**\n\n\n\nPort on which targets receive traffic\n\n\n\n**Protocol**\n\n\n\nProtocol to use for routing traffic to the targets\n\n\n\n**Target Type**\n\n\n\nTarget Type for the group (instance|ip)\n\n\n\n**VPC ID**\n\n\n\nIdentifier of the VPC in which to create the target group\n\n\n\n**Load Balancer Type**\n\n\n\nLoad Balancer Type to be used with target group (ALB|NLB)\n\n\n\n**Load Balancing Algorithm Type**\n\n\n\nValid only for ALB (round_robin|least_outstanding_requests)\n\n\n\n**Preserve Client IP**\n\n\n\nWhether client IP preservation is enabled, valid only for NLB. See more information [here](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#client-ip-preservation)\n\n\n\n**IP Address Type**\n\n\n\nValid only for IP target type (IPV4|IPV6)\n\n\n\n**Protocol Version**\n\n\n\nValid only when protocol is HTTP/HTTPS (gRPC|HTTP1|HTTP2)\n\n\n\n**IP Targets**\n\n\n\nComma-separated list of IPs\n\n\n\n**EC2 Targets**\n\n\n\nEC2 instances to attach to the target group"
        },
        {
          "type": "Theia::Action",
          "label": "Route 53 Records",
          "id": "route53_add_record",
          "module": "route53",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "route53",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=route53,add_record",
              "env_param_required": true,
              "columns": [
                "route53_record_name",
                "timestamp",
                "route53_record_type",
                "route53_zone_id",
                "route53_ttl",
                "route53_record_list"
              ],
              "title": "Route 53 records",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "route53",
              "title": "Add record",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Add Record",
                  "command": {
                    "phase": "route53",
                    "command": "add_record",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_record_name",
                  "cli_id": "record_name",
                  "label": "Record Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "route53_record_type",
                  "cli_id": "record_type",
                  "label": "Record Type",
                  "help": "Valid values are: A",
                  "default": "A",
                  "inputType": "text",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "A (non-alias)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "A",
                        "disableControls": [
                          "alias_name",
                          "alias_zone_id",
                          "evaluate_target_health",
                          ""
                        ],
                        "enableControls": [
                          "route53_record_list"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "A (alias)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "a-alias",
                        "enableControls": [
                          "alias_name",
                          "alias_zone_id",
                          "evaluate_target_health",
                          "alias_name"
                        ],
                        "disableControls": [
                          "route53_record_list"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "NS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "NS",
                        "disableControls": [
                          "alias_name",
                          "alias_zone_id",
                          "evaluate_target_health"
                        ],
                        "enableControls": [
                          "route53_record_list"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "CNAME",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "CNAME",
                        "disableControls": [
                          "alias_name",
                          "alias_zone_id",
                          "evaluate_target_health"
                        ],
                        "enableControls": [
                          "route53_record_list"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "CNAME (alias)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "cname-alias",
                        "enableControls": [
                          "alias_name",
                          "alias_zone_id",
                          "evaluate_target_health",
                          "alias_name"
                        ],
                        "disableControls": [
                          "route53_record_list"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "TXT",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "TXT",
                        "disableControls": [
                          "alias_name",
                          "alias_zone_id",
                          "evaluate_target_health"
                        ],
                        "enableControls": [
                          "route53_record_list"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "route53_zone_id",
                  "cli_id": "zone_id",
                  "label": "Hosted zone name",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=route53,create_hosted_zone&field=name&module_name_arg=route53",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_ttl",
                  "cli_id": "ttl",
                  "label": "Record TTL (seconds)",
                  "inputType": "text",
                  "help": "TTL defaults to 300"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_record_list",
                  "cli_id": "record_list",
                  "label": "Record List",
                  "inputType": "text",
                  "help": "Comma-separated list of records"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "alias_name",
                  "cli_id": "alias_name",
                  "label": "Alias record name",
                  "inputType": "text",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "alias_zone_id",
                  "cli_id": "alias_zone_id",
                  "label": "Alias Zone ID",
                  "inputType": "text",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "evaluate_target_health",
                  "cli_id": "evaluate_target_health",
                  "label": "Evaluate targets health",
                  "inputType": "text",
                  "help": ""
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### AWS Route 53\n\n\n\nAmazon Route 53 is a highly available and scalable DNS web service\n\n\n\n**Record Name**\n\n\n\nThe name of the record\n\n\n\n**Record Type**\n\n\n\nThe record type. Valid values are: A alias and non-alias, NS, CNAME, CNAME alias and TXT\n\n\n\n**Hosted Zone Name**\n\n\n\nHosted zone name for a Route 53 record\n\n\n\n**TTL**\n\n\n\nThe TTL (Time to live) of the record. (Default is 300)\n\n\n\n**Record List**\n\n\n\nComma-separated list of records\n\n\n\n**Alias record name**\n\n\n\nThe dns of the destination where this record will redirect to.\n\n\n\n\n\n**Alias zone Id**\n\nZone id of the destination record this alias record will point to. Only applicable to S3 buckets, Cloudfront distributions and other records in the same route 53 zone.\n\n\n\n**Evaluate targets health**\n\nSet to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set."
        },
        {
          "type": "Theia::Action",
          "label": "Route 53 Hosted zones",
          "id": "route53_create_hosted_zone",
          "module": "route53",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "route53",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=route53,create_hosted_zone",
              "env_param_required": true,
              "columns": [
                "route53_name",
                "timestamp",
                "route53_zone_comment",
                "route53_zone_delegation_set_id",
                "route53_zone_vpc_id"
              ],
              "title": "Route 53 hosted zones",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "route53",
              "title": "Create hosted zone",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "route53",
                    "command": "create_hosted_zone",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_name",
                  "cli_id": "route53_name",
                  "label": "Hosted zone domain",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_zone_comment",
                  "cli_id": "route53_zone_comment",
                  "label": "Zone comment",
                  "help": "A comment to help you identify the zones purpose.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "route53_private_zone",
                  "cli_id": "route53_private_zone",
                  "label": "Hosted zone type",
                  "default": true,
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Private",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": true,
                        "enableControls": [
                          "route53_zone_vpc_id"
                        ],
                        "disableControls": [
                          "route53_add_delegation_set",
                          "route53_zone_delegation_set_id"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Public",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": false,
                        "disableControls": [
                          "route53_zone_vpc_id"
                        ],
                        "enableControls": [
                          "route53_add_delegation_set",
                          "route53_zone_delegation_set_id"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "route53_add_delegation_set",
                  "cli_id": "route53_add_delegation_set",
                  "label": "Add delegation set (Public zones only)",
                  "help": "Explicitly add a reusable delegation set to this zone.",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "true",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": true,
                        "enableControls": [
                          "route53_zone_delegation_set_id"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "false",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": false,
                        "disableControls": [
                          "route53_zone_delegation_set_id"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_zone_delegation_set_id",
                  "cli_id": "route53_zone_delegation_set_id",
                  "label": "Delegation set id (Public zones only)",
                  "datasource": "?module_name_arg=route53",
                  "help": "Add the id of an existing delegation set id"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "route53_zone_vpc_id",
                  "cli_id": "route53_zone_vpc_id",
                  "label": "VPC Id to associate this zone to (Private zones only)",
                  "datasource": "custom/module_net_vpcs?extra=true&module_name_arg=net",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "route53_zone_force_destroy",
                  "cli_id": "route53_zone_force_destroy",
                  "label": "Force destroy records",
                  "help": "Whether to destroy all records (possibly managed outside of Terraform) in the zone when destroying the zone."
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### AWS Route 53 Hosted zone\n\n\n\nA hosted zone is a container for records, and records contain information about how you want to route traffic for a specific domain, such as test.io, and its subdomains (dev.test.io, qa.test.io). A hosted zone and the corresponding domain have the same name. \n\n\n\n**Hosted zone domain**\n\nA domain to associate to your zone\n\n\n\n**Zone comment**\n\nA comment to help you identify the zones purpose.\n\n\n\n**Hosted zone type**\n\nA **private** hosted zone is a container that holds information about how you want Amazon Route 53 to respond to DNS queries for a domain and its subdomains within one or more VPCs that you create with the Amazon VPC service. More details [here](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/hosted-zones-private.html).\n\n\n\nA **public** hosted zone is a container that holds information about how you want to route traffic on the internet for a specific domain. More details [here](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/AboutHZWorkingWith.html).\n\n\n\n**Add delegation set**\n\nExplicitly add a reusable delegation set to this zone.\n\n\n\n**Delegation set id**\n\nAdd the id of an existing delegation set id\n\n\n\n**VPC Id**\n\nTo make a zone **private** you need to associate it with a VPC\n\n\n\n**Force destroy records**\n\nWhether to destroy all records (possibly managed outside of Terraform) in the zone when destroying the zone.\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Search",
      "short_name": "SEA",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/magnifying-glass-solid.svg",
      "route": "search",
      "id": "search",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "OpenSearch",
          "id": "opensearch",
          "module": "opensearch",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "opensearch_create",
              "datasource": "data?type=metadata&filter_name=module&filter_value=opensearch",
              "env_param_required": true,
              "columns": [
                "name",
                "instance_type",
                "nodes",
                "ebs_storage_size",
                "timestamp"
              ],
              "title": "OpenSearch Clusters",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "opensearch_create",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "opensearch",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name of the cluster (also referred to as the OpenSearch \"Domain\")",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "instance_type",
                  "cli_id": "instance_type",
                  "label": "Instance Type",
                  "help": "Set the OpenSearch instance type (r5.large.search, etc.)",
                  "default": "r5.large.search",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "high_availability",
                  "cli_id": "high_availability",
                  "label": "Enable High-Availability",
                  "default": true,
                  "help": ""
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "nodes",
                  "cli_id": "nodes",
                  "label": "Nodes",
                  "help": "Total number of nodes (if high-availability is disabled, must be a multiple of 2)",
                  "default": 2,
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ebs_storage_size",
                  "cli_id": "ebs_storage_size",
                  "label": "EBS Storage Size",
                  "help": "Storage capacity (GiB) per node, minimum of 10 and maximum of 2048",
                  "default": 10,
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "subnet_ids",
                  "label": "Subnet Ids",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets&module_name_arg=opensearch"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "security_group_ids",
                  "label": "Security Group Ids",
                  "help": "",
                  "datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=opensearch"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### OpenSearch Notes\n\nSearch and analytics suite used for a broad set of use cases like real-time application monitoring, log analytics, and website search.\n\n\n\n**Name**\n\nEquivalent to the OpenSearch Domain.\n\n\n\n**Instance Type**\n\nSets the instance type for the nodes in the OpenSearch cluster.\n\n\n\n**Available options:**\n\n - c5.large.search\n\n - c5.xlarge.search\n\n - c5.2xlarge.search\n\n - c5.4xlarge.search\n\n - c5.9xlarge.search\n\n - c5.18xlarge.search\n\n - c6g.large.search\n\n - c6g.xlarge.search\n\n - c6g.2xlarge.search\n\n - c6g.4xlarge.search\n\n - c6g.8xlarge.search\n\n - c6g.12xlarge.search\n\n - i3.large.search\n\n - i3.xlarge.search\n\n - i3.2xlarge.search\n\n - i3.4xlarge.search\n\n - i3.8xlarge.search\n\n - i3.16xlarge.search\n\n - m5.large.search\n\n - m5.xlarge.search\n\n - m5.2xlarge.searc\n\n - m5.4xlarge.search\n\n - m5.12xlarge.search\n\n - m6g.large.search\n\n - m6g.xlarge.search\n\n - m6g.2xlarge.search\n\n - m6g.4xlarge.search\n\n - m6g.8xlarge.search\n\n - m6g.12xlarge.search\n\n - r5.large.search\n\n - r5.xlarge.search\n\n - r5.2xlarge.search\n\n -  r5.4xlarge.search\n\n - r5.12xlarge.search\n\n - r5.large.search\n\n - r5.xlarge.search\n\n - r5.2xlarge.search\n\n - r5.4xlarge.search\n\n - r5.12xlarge.search\n\n - r6gd.large.search\n\n - r6gd.xlarge.search\n\n - r6gd.2xlarge.search\n\n - r6gd.4xlarge.search\n\n - r6gd.8xlarge.search\n\n - r6gd.12xlarge.search\n\n - r6gd.16xlarge.search\n\n\n\n**Autotune**\n\nAutotune in Amazon OpenSearch Service uses performance and usage metrics from your OpenSearch cluster to suggest memory-related configuration changes, including queue and cache sizes and Java virtual machine (JVM) settings on your nodes. These optional changes improve cluster speed and stability.\n\n\n\n**High Availability**\n\nSets the availability zones to 3 - recommended for production workloads with higher availability requirements.\n\n\n\n**Nodes**\n\nTotal number of nodes (if high-availability is disabled, must be a multiple of 2).\n\n\n\n**EBS Storage Size**\n\nStorage capacity (GiB) per node, minimum of 10 and maximum of 2048.\n\n\n\n**Ultra Warm**\n\nUltraWarm is a fully-managed, low-cost, warm storage tier for Amazon OpenSearch Service, enabling you to analyze data using the same tools that Amazon OpenSearch Service provides today. UltraWarm seamlessly integrates with Amazon OpenSearch Service\u2019s existing features such as integrated alerting, SQL querying, and more. \n\n\n\nUltraWarm enables you to cost effectively expand the data you want to analyze on Amazon OpenSearch Service gaining valuable insights on data that previously may have been deleted or archived. With UltraWarm, you can now economically retain more of your data to interactively analyze it whenever you want.\n\n\n\n**Dedicated Master Nodes**\n\nAmazon OpenSearch Service uses dedicated master nodes to increase cluster stability. A dedicated master node performs cluster management tasks, but does not hold data or respond to data upload requests. This offloading of cluster management tasks increases the stability of your domain. Just like all other node types, you pay an hourly rate for each dedicated master node.\n\n\n\nDedicated master nodes perform the following cluster management tasks:\n\n- Track all nodes in the cluster.\n\n- Track the number of indexes in the cluster.\n\n- Track the number of shards belonging to each index.\n\n- Maintain routing information for nodes in the cluster.\n\n- Update the cluster state after state changes, such as creating an index and adding or removing nodes in the cluster.\n\n- Replicate changes to the cluster state across all nodes in the cluster.\n\n- Monitor the health of all cluster nodes by sending heartbeat signals, periodic signals that monitor the availability of the data nodes in the cluster."
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Storage",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/folder-closed-solid.svg",
      "route": "storage",
      "id": "storage",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "S3",
          "id": "s3_create_bucket",
          "module": "s3",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "s3_create_bucket",
              "datasource": "metadata/s3?type=aws_infra&filter_name=resource_type&filter_value=s3_bucket",
              "env_param_required": true,
              "columns": [
                "bucket",
                "name",
                "timestamp"
              ],
              "title": "S3 Buckets",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "s3_create_bucket",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to continue?",
                  "new_hide": true,
                  "command": {
                    "phase": "s3",
                    "command": "enable_trend"
                  }
                },
                {
                  "label": "Create Bucket",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to create a bucket?",
                  "editable_hide": true,
                  "command": {
                    "phase": "s3",
                    "command": "create_bucket",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "Do not prefix with environment name. It will be added automatically by RapidCloud",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "bucket",
                  "label": "Bucket Name",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 5,
          "info": "### S3\n\n\n\nSimple object storage service.\n\n## Name\n\n\n\nName of your s3 bucket. See bucket naming rules [here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html)."
        },
        {
          "type": "Theia::Action",
          "label": "FSx for Windows",
          "id": "fsx",
          "module": "fsx",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "fsx",
              "datasource": "data?type=metadata&filter_name=module&filter_value=fsx",
              "env_param_required": true,
              "columns": [
                "name",
                "fsx_ad_service_name",
                "fsx_storage_capacity",
                "fsx_throughput_capacity",
                "timestamp"
              ],
              "title": "FSx for Windows",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "fsx",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "fsx",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_ad_service_name",
                  "cli_id": "ad_service_name",
                  "label": "AD Service Name",
                  "help": "Directory FQN (corp.example.com)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_ad_admin_password",
                  "cli_id": "ad_admin_password",
                  "label": "AD Admin Password",
                  "inputType": "password"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_storage_capacity",
                  "cli_id": "storage_capacity",
                  "label": "Storage Capacity",
                  "help": "(GiB) minimum of 32 and maximum of 65536",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_throughput_capacity",
                  "cli_id": "throughput_capacity",
                  "label": "Throughput Capacity",
                  "help": "Throughput (MB/s) of the file system in power of 2 increments, minimum of 8 and maximum of 2048",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### FSx Windows File System\n\n\n\nAWS-managed Microsoft Windows file servers, backed by a fully native Windows file system\n\n\n\n**Name**\n\n\n\nThe name of the resource\n\n\n\n**AD Service Name**\n\n\n\nThe fully qualified name for the directory, such as `corp.example.com`\n\n\n\n**AD Admin Password**\n\n\n\nThe password for the directory administrator\n\n\n\n**Storage Capacity**\n\n\n\nStorage capacity (GiB) of the file system, must be between 32 and 65536\n\n\n\n**Throughput Capacity**\n\n\n\nThroughput (MB/s) of the file system in power of 2 increments, must be between 8 and 2048"
        },
        {
          "type": "Theia::Action",
          "label": "EFS",
          "id": "efs_create",
          "module": "efs",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "efs",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=efs,create",
              "env_param_required": true,
              "columns": [
                "efs_fs_name",
                "efs_encrypted",
                "efs_performance_mode",
                "efs_throughput_mode",
                "efs_transition_to_ia",
                "timestamp"
              ],
              "title": "EFS (Managed File Storage for EC2)",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "efs",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "efs",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "efs_fs_name",
                  "label": "EFS Name",
                  "help": "Name of the EFS File system to create the Mount Target in",
                  "datasource": "custom/module_efs_filesystems?extra=true&module_name_arg=efs",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Name is required"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "efs_encrypted",
                  "cli_id": "encrypted",
                  "label": "Encrypted?",
                  "default": "true"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "efs_enable_backups",
                  "cli_id": "enable_backups",
                  "label": "Enable Backups?",
                  "default": "true"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "efs_performance_mode",
                  "label": "Performance Mode",
                  "help": "The file system performance mode",
                  "inputType": "text",
                  "default": "generalPurpose",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "generalPurpose",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "generalPurpose"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "maxIO",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "maxIO"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "efs_throughput_mode",
                  "label": "Throughput Mode",
                  "help": "The file system throughput mode",
                  "inputType": "text",
                  "default": "bursting",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "bursting",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "bursting",
                        "disableControls": [
                          "provisioned_throughput_in_mibps"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "elastic",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "elastic",
                        "disableControls": [
                          "provisioned_throughput_in_mibps"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "provisioned",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "provisioned"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "efs_provisioned_throughput_in_mibps",
                  "label": "Provisioned Throughput In MiB/s, only if you selected \"provisioned\"",
                  "help": "The throughput, measured in MiB/s, that you want to provision for the file system",
                  "default": "0"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "efs_transition_to_ia",
                  "label": "Transition to IA Storage",
                  "help": "Set policy to transition files to the IA storage class",
                  "inputType": "text",
                  "default": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "none",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": ""
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AFTER_1_DAY",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AFTER_1_DAY"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AFTER_7_DAYS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AFTER_7_DAYS"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AFTER_14_DAYS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AFTER_14_DAYS"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AFTER_30_DAYS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AFTER_30_DAYS"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AFTER_60_DAYS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AFTER_60_DAYS"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AFTER_90_DAYS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AFTER_90_DAYS"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "efs_transition_to_primary",
                  "label": "Transition files from IA",
                  "help": "Set policy Set policy to transition a file from IA storage to primary storage",
                  "inputType": "text",
                  "default": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "none",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": ""
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AFTER_1_ACCESS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AFTER_1_ACCESS"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "efs_vpc_id",
                  "label": "VPC ID",
                  "help": "The VPC to create a mount target in",
                  "datasource": "custom/module_efs_vpcs?extra=true&module_name_arg=efs"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "efs_subnet_ids",
                  "label": "Subnets",
                  "help": "Select the subnets to create a mount Target in (1 per availability zone)",
                  "datasource": "custom/module_efs_subnets?extra=true&module_name_arg=efs"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Amazon Elastic File System\n\n\n\nAmazon Elastic File System is a cloud storage service that provides scalable, elastic, and encrypted file storage.\n\nThis module will create the following: \n\n- EFS File System \n\n- Security Group Allowing EFS access from a selected VPC CIDR\n\n- Mount Target in VPC Subnets, you should select at least 2 subnets and preferably private ones.\n\n\n\n\n\n---\n\n\n\n**File System Name**\n\n\n\nThe name of the file system, used by RapidCloud to identify the resource.\n\n\n\n**Encrypted**\n\n\n\nIf true, the disk will be encrypted\n\n\n\n**Performance Mode**\n\n\n\nThe file system performance mode. Valid values: \n\n - generalPurpose (Default)\n\n - maxIO\n\n\n\n**Throughput Mode**\n\n\n\nThe file system throughput mode. Valid values: \n\n - bursting (Default)\n\n - provisioned\n\n - elastic\n\n\n\n**Provisioned Throughput In MiB/s**\n\n\n\nWith Throughput mode `provisioned` set the throughput, measured in MiB/s, that you want to provision for the file system.\n\n\n\n**Transition to IA Storage**\n\n\n\nSet a policy to transition a file to IA storage\", Valid Values:\n\n- AFTER_1_DAY\n\n- AFTER_7_DAYS\n\n- AFTER_14_DAYS\n\n- AFTER_30_DAYS\n\n- AFTER_60_DAYS\n\n- AFTER_90_DAYS\n\n\n\n\n\n**Transition files from IA**\n\n\n\nSet a policy to transition a file from IA storage to primary storage, Valid Values:\n\n- AFTER_1_ACCESS\n\n\n\n**VPC ID**\n\n\n\nThis module will create a security group allowing the VPC your select CIDR access to the EFS mount target.\n\n\n\n**Subnet IDs**\n\n\n\nThe ID of the subnets to add the EFS mount target in, it is recommended to use at least two subnets in different availability zones.\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Deploy",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/circle-play-regular.svg",
      "route": "deploy",
      "id": "deploy",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Terraform Actions",
          "id": "tf",
          "module": "tf",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "tf",
              "title": "Terraform Actions",
              "allowMarkdown": true,
              "description": "**Generate Terraform Modules**\n\n\n\nThis runs `kc tf init`, which in turn executes `terraform init`. Hang on ... this may take a minute. You can view the log in the terminal window. Generated terraform modules for your environment will be saved in `kc-rapid-cloud/terraform/{env}` directory\n\n\n\n**Generate Terraform Deployment Plan**\n\n\n\nThis runs `kc tf plan`, which in turn executes `terraform plan`. Hang on ... this may take a few minutes. You can view the log in the terminal window. Terraform plan will be saved in `kc-rapid-cloud/terraform/{env}/plan.log`\n\n\n\n**Apply Terraform Plan - Deploy Infrastructure**\n\n\n\nThis runs `kc tf apply`, which in turn executes `terraform apply`. Hang on ... this may take a while, depending on your environment complexity. \n\n\n\n_**We recommend running this from your RapidCloud terminal, to see the progress, instead of running via console.**_\n\n\n\n**Destroy Current Environment Infrastructure**\n\n\n\nThis runs `kc tf destroy`, which in turn executes `terraform destroy`. Hang on ... this may take a few minutes. \n\n\n\n_**Note: S3 buckets which are not empty will not be deleted. You must empty the buckets first.**_\n\n\n\n\n\n\n",
              "submit": "Submit",
              "commands": [
                {
                  "label": "init",
                  "command": {
                    "phase": "tf",
                    "command": "init"
                  }
                },
                {
                  "label": "plan",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to run terraform planfor this environment? This may take a few minutes. You can view the log in the terminal window.",
                  "command": {
                    "phase": "tf",
                    "command": "plan"
                  }
                },
                {
                  "label": "apply",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to deploy infrastucture changes to your environment? This may take a while. You can view the log in the terminal window.",
                  "command": {
                    "phase": "tf",
                    "command": "apply",
                    "refresh_status": true
                  }
                },
                {
                  "label": "destroy",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to destroy all infrastucture components for current environment? This may take a while. You can view the log in the terminal window.",
                  "command": {
                    "phase": "tf",
                    "command": "destroy",
                    "refresh_status": true
                  }
                }
              ]
            }
          ],
          "order": 20
        },
        {
          "type": "Theia::Action",
          "label": "Terraform Modules",
          "id": "tf_modules",
          "module": "tf",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "tf_modules",
              "datasource": "tf_modules?test=test",
              "env_param_required": true,
              "columns": [
                "filename"
              ],
              "title": "Terraform Modules",
              "description": "",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Form",
              "id": "tf_modules",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "filename",
                  "label": "File Location",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Code",
                  "label": "",
                  "id": "contents",
                  "language": "hcl"
                }
              ]
            }
          ],
          "order": 25
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Pause & Resume",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/clock-regular.svg",
      "route": "workload",
      "id": "workload",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Settings",
          "id": "workload_enable_pause",
          "module": "workload",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "workload_enable_pause",
              "title": "Workload Pause/Resume Settings",
              "description": "Enable pause and resume functionality for the following AWS resources",
              "env_param_required": true,
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=workload,enable_pause",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save Settings",
                  "command": {
                    "phase": "workload",
                    "command": "enable_pause",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_instance",
                  "label": "Enable Stop/Start EC2 Instances (aws_instance)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_autoscaling_group",
                  "label": "Enable Downsize/Upsize Auto Scaling Groups (aws_autoscaling_group)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_ecs_cluster",
                  "label": "Enable Downsize/Upsize ECS Fargate Cluster (aws_ecs_cluster)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_db_instance",
                  "label": "Enable Start/Stop RDS Instances (aws_db_instance)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_rds_cluster",
                  "label": "Enable Start/Stop Aurora Clusters, including read replica (aws_rds_cluster)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_redshift_cluster",
                  "label": "Enable Pause/Resume Redshift Clusters (aws_redshift_cluster)"
                }
              ]
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "Schedule",
          "id": "workload_schedule",
          "module": "workload",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "workload_schedule",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=workload,schedule",
              "env_param_required": true,
              "columns": [
                "name",
                "workload_resource_type",
                "workload_schedule_description",
                "workload_scheduled_pause",
                "workload_scheduled_resume",
                "timestamp"
              ],
              "title": "Workload Pause/Resume Schedules",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "workload_schedule",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this schedule?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Schedule",
                  "command": {
                    "phase": "workload",
                    "command": "schedule",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Schedule Name",
                  "help": "Up to 12 characters, no spaces",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload_schedule_description",
                  "label": "Schedule Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "workload_resource_type",
                  "label": "Resource Types to Pause",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=workload,enable_pause&field_prefix=workload_module_&module_name_arg=workload"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload_scheduled_pause",
                  "label": "Enter cron expression to schedule workload pause",
                  "help": "Example: pause every weekday at 7 PM EST => `0 0 ? * MON-FRI *`",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload_scheduled_resume",
                  "label": "Enter cron expression to schedule workload resume",
                  "help": "Example: resume every weekday at 7 AM EST => `0 12 ? * MON-FRI *`",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Workload Schedule\n\n\n\nUse this page to schedule pause and resume times for your workload. You can create multiple schedules to fit your requirements.\n\n\n\nFor example, separate schedule for compute resources vs database resources. Or different schedule for weekdays vs weekends.\n\n\n\n**Schedule Name**\n\n\n\nShort identifier for this schedule. Up to 12 characters, no spaces.\n\n\n\n**Schedule Description**\n\n\n\nSchedule description\n\n\n\n**Resource Types to Pause**\n\n\n\nOne or more resource types to be paused/resumed on this schedule\n\n\n\n\n\n**Enter cron expression to schedule workload pause**\n\n\n\n_Example:_ pause every weekday at 7 PM EST => `0 0 ? * MON-FRI *`\n\n\n\n**Enter cron expression to schedule workload resume**\n\n\n\n_Example:_ resume every weekday at 7 AM EST => `0 12 ? * MON-FRI *`\n"
        },
        {
          "type": "Theia::Action",
          "label": "Status",
          "id": "workload_status",
          "module": "workload",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "workload_status",
              "datasource": "workload/status?extra=true",
              "env_param_required": true,
              "columns": [
                "service",
                "res_type",
                "status",
                "arn"
              ],
              "title": "Workload Status for Paused/Resumed Resources",
              "description": "",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "workload_status",
              "title": "",
              "description": ""
            }
          ],
          "order": 25
        },
        {
          "type": "Theia::Action",
          "label": "Pause",
          "id": "workload_pause",
          "module": "workload",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "workload_pause",
              "title": "Pause Workload Resources",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "pause",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to pause selected resource types right now?",
                  "command": {
                    "phase": "workload",
                    "command": "pause"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "workload_resource_type",
                  "label": "Resource Types to Pause",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=workload,enable_pause&field_prefix=workload_module_&module_name_arg=workload"
                }
              ]
            }
          ],
          "order": 30
        },
        {
          "type": "Theia::Action",
          "label": "Resume",
          "id": "workload_resume",
          "module": "workload",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "workload_resume",
              "title": "Resume Workload Resources",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "resume",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to resume selected resource types right now?",
                  "command": {
                    "phase": "workload",
                    "command": "resume"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "workload_resource_type",
                  "label": "Resource Types to Resume",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=workload,enable_pause&field_prefix=workload_module_&module_name_arg=workload"
                }
              ]
            }
          ],
          "order": 40
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Logging",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/clock-rotate-left-solid.svg",
      "route": "logs",
      "id": "logs",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Trail",
          "id": "cloudtrail_create_trail",
          "module": "cloudtrail",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "cloudtrail_create_trail",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=cloudtrail,create_trail",
              "env_param_required": true,
              "columns": [
                "cloudtrail_trail_name",
                "cloudtrail_s3_bucket_name",
                "cloudtrail_kms_key_id",
                "cloudtrail_include_global_service_events",
                "cloudtrail_enable_log_file_validation",
                "cloudtrail_is_organization_trail",
                "cloudtrail_is_multi_region_trail",
                "timestamp"
              ],
              "title": "Trail",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "cloudtrail_create_trail",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "cloudtrail",
                    "command": "create_trail",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "cloudtrail_trail_name",
                  "label": "Trail Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cloudtrail_s3_bucket_name",
                  "label": "S3 Bucket Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cloudtrail_kms_key_id",
                  "label": "KMS Key ARN",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "cloudtrail_include_global_service_events",
                  "label": "Include global service events?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "cloudtrail_enable_log_file_validation",
                  "label": "Enable log file validation?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "cloudtrail_is_organization_trail",
                  "label": "Is this an organization trail?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "cloudtrail_is_multi_region_trail",
                  "label": "Is this a multiregion trail?",
                  "help": ""
                }
              ]
            }
          ],
          "order": 1,
          "info": "# Cloudtrail\n\n\n\nAWS CloudTrail monitors and records account activity across your AWS infrastructure, giving you control over storage, analysis, and remediation actions.\n\n\n\n## Trail Name\n\n\n\nThis is the trail name. Please look at the S3 Bucket Name and KMS Key ARN sections to see how the trail name should be used on the policies. \n\n\n\n## S3 Bucket Name\n\n\n\nIn order to create a new trail, you need to create a S3 bucket to store the logs, so on the S3 Bucket Name you will set the S3 bucket name that you created.\n\nFurthermore, this S3 bucket should have a special bucket policy so Cloudtrail can be able to store logs there. Please see the example bellow to make sure you are using the right policy.\n\n\n\n```\n\n{\n\n    \"Version\": \"2012-10-17\",\n\n    \"Statement\": [\n\n        {\n\n            \"Sid\": \"AWSCloudTrailAclCheck20150319\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": \"s3:GetBucketAcl\",\n\n            \"Resource\": \"arn:aws:s3:::<bucket-name>\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\"\n\n                }\n\n            }\n\n        },\n\n        {\n\n            \"Sid\": \"AWSCloudTrailWrite20150319\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": \"s3:PutObject\",\n\n            \"Resource\": \"arn:aws:s3:::<<bucket-name>>/AWSLogs/<account-id>/*\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\",\n\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n\n                }\n\n            }\n\n        },\n\n        {\n\n            \"Sid\": \"AWSCloudTrailWrite20150319\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": \"s3:PutObject\",\n\n            \"Resource\": \"arn:aws:s3:::<bucket-name>/AWSLogs/<organization-id>/*\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\",\n\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n\n                }\n\n            }\n\n        }\n\n    ]\n\n}\n\n```\n\n\n\n## KMS Key ARN\n\n\n\nCloudtrail also requires a KMS key to encrypt the logs, so you have to create a KMS key ahead and use special key policy. Please take a look at the example bellow to make sure you are using the right policy.\n\n\n\n```\n\n{\n\n    \"Version\": \"2012-10-17\",\n\n    \"Id\": \"Key policy created by CloudTrail\",\n\n    \"Statement\": [\n\n        {\n\n            \"Sid\": \"Enable IAM User Permissions\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"AWS\": \"arn:aws:iam::<account-id>:root\"\n\n            },\n\n            \"Action\": \"kms:*\",\n\n            \"Resource\": \"*\"\n\n        },\n\n        {\n\n            \"Sid\": \"Allow CloudTrail to encrypt logs\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": [\n\n                \"kms:GenerateDataKey*\",\n\n                \"kms:DescribeKey\",\n\n                \"kms:Decrypt\",\n\n                \"kms:ReEncryptFrom\"\n\n            ],\n\n            \"Resource\": \"*\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\"\n\n                },\n\n                \"StringLike\": {\n\n                    \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:<account-id>:trail/*\"\n\n                }\n\n            }\n\n        }\n\n    ]\n\n}\n\n```\n\n\n\n## Include global service events?\n\n\n\nWhether the trail is publishing events from global services such as IAM to the log files\n\n\n\n## Enable log file validation?\n\n\n\nWhether log file integrity validation is enabled\n\n\n\n## Is this an organization trail?\n\n\n\nWhether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account\n\n\n\n## Is this a multiregion trail?\n\n\n\nWhether the trail is created in the current region or in all regions"
        },
        {
          "type": "Theia::Action",
          "label": "CDC Log (Semi-Structured)",
          "id": "cdc_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "cdc_log",
              "datasource": "data?type=cdc_log&filter_name=enable_textract&filter_value=False",
              "env_param_required": true,
              "columns": [
                "dataset_name",
                "status",
                "cdc_timestamp",
                "job_name"
              ],
              "title": "CDC Log (Semi-Structured)",
              "description": "Log of Lambda Function executions to apply CDC to raw bucket for Semi-Structured Data (json, excel, csv, xml)",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "cdc_log",
              "title": "",
              "description": ""
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "DMS Replication Log",
          "id": "cdc_tracker",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "cdc_tracker",
              "datasource": "data?type=cdc_tracker",
              "env_param_required": true,
              "columns": [
                "task_status",
                "dms_task_id",
                "cdc_start_timestamp",
                "cdc_end_timestamp"
              ],
              "title": "DMS Replication Log",
              "description": "Timestamp based DMS Replication Tracker",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "cdc_tracker",
              "title": "DMS CDC Tracker",
              "description": ""
            }
          ],
          "order": 20
        },
        {
          "type": "Theia::Action",
          "label": "Document Processing Log",
          "id": "textract_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "textract_log",
              "datasource": "paginated_data?type=cdc_log&filter_name=enable_textract&filter_value=True",
              "pagination": "paginated_data_info?type=cdc_log&filter_name=enable_textract&filter_value=True&sort_by=last_modified&sort_order=desc",
              "env_param_required": true,
              "columns": [
                "status",
                "document_match",
                "s3_key",
                "last_modified",
                "job_name"
              ],
              "title": "Amazon Textract Log",
              "description": "Log of Amazon Textract processing results",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "textract_log",
              "title": "",
              "description": ""
            }
          ],
          "order": 25
        },
        {
          "type": "Theia::Action",
          "label": "Transform log",
          "id": "transform_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "transform_log",
              "datasource": "data?type=transform_log",
              "env_param_required": true,
              "columns": [
                "status",
                "update_timestamp",
                "job_name",
                "dataset_name"
              ],
              "title": "Transform log",
              "description": "Log of Transformation Glue job executions",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "transform_log",
              "title": "Transform Log",
              "description": ""
            }
          ],
          "order": 30
        },
        {
          "type": "Theia::Action",
          "label": "Publish Log",
          "id": "publish_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "publish_log",
              "datasource": "data?type=publish_log",
              "env_param_required": true,
              "columns": [
                "status",
                "update_timestamp",
                "job_name",
                "dataset_name"
              ],
              "title": "Publish log",
              "description": "Log of Publish Glue job executions",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "publish_log",
              "title": "Publish log",
              "description": ""
            }
          ],
          "order": 40
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "SaaS Management",
      "icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/network-wired-solid.svg",
      "route": "saas",
      "id": "saas",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "View Tenants (dev)",
          "id": "saas_list_tenants_dev",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "saas_list_tenants_dev",
              "datasource": "saas?action=list_tenants&include_log=true&aws_profile=default",
              "env_param_required": true,
              "columns": [
                "domain",
                "status",
                "acct_id",
                "ec2_instance_id",
                "public_ip_address",
                "timestamp"
              ],
              "title": "Tenants",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Json",
              "id": "report_log"
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Tenant Administration (dev)",
          "id": "saas_exec_dev",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "saas_exec_dev",
              "datasource": "saas?action=list_tenants&status=true&aws_profile=default",
              "env_param_required": true,
              "columns": [
                "domain",
                "status",
                "acct_id",
                "ec2_instance_id",
                "public_ip_address",
                "timestamp"
              ],
              "title": "Tenant Administration (dev)",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "saas_exec_dev",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "exec (dev)",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "saas",
                    "command": "exec",
                    "refresh_status": false
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "aws_profile",
                  "hidden": true,
                  "default": "default"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "email",
                  "label": "Email",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "action",
                  "label": "Action",
                  "help": "",
                  "datasource": "saas_actions?app_env=dev"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cmd",
                  "label": "Command"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "output_key",
                  "label": "SSM Command Output Key"
                }
              ]
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "View Tenants (prod)",
          "id": "saas_list_tenants_prod",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "saas_list_tenants_prod",
              "datasource": "saas?action=list_tenants&include_log=true&aws_profile=rc_prod",
              "env_param_required": true,
              "columns": [
                "domain",
                "status",
                "acct_id",
                "ec2_instance_id",
                "public_ip_address",
                "timestamp"
              ],
              "title": "Tenants",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Json",
              "id": "report_log"
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Tenant Administration (prod)",
          "id": "saas_exec_prod",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "saas_exec_prod",
              "datasource": "saas?action=list_tenants&status=true&aws_profile=rc_prod",
              "env_param_required": true,
              "columns": [
                "domain",
                "status",
                "acct_id",
                "ec2_instance_id",
                "public_ip_address",
                "timestamp"
              ],
              "title": "Tenant Administration (prod)",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "saas_exec_prod",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "exec (prod)",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "saas",
                    "command": "exec",
                    "refresh_status": false
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "aws_profile",
                  "hidden": true,
                  "default": "rc_prod"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "email",
                  "label": "Email",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "action",
                  "label": "Action",
                  "help": "",
                  "datasource": "saas_actions?app_env=dev"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cmd",
                  "label": "Command"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "output_key",
                  "label": "SSM Command Output Key"
                }
              ]
            }
          ],
          "order": 1000
        }
      ]
    }
  ]
}