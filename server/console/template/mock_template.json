{
"type": "Theia::Template",
"title": "RapidCloud for AWS - Automation and Acceleration Framework",
"footer": {
"type": "Theia::Footer",
"columns": [
{
"class": "text-muted text-start",
"content": "Copyright Â© 2020-2023 <a href='https://www.kinect-consulting.com/' target='_blank'>Kinect Consulting, LLC</a>."
},
{
"class": "text-muted text-start",
"content": "<a href='https://rapid-cloud.io/documentation/' target='_blank'>Documentation</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://kinect-rapid-cloud.s3.amazonaws.com/docs/RapidCloud-Terms-of-Service.html' target='_blank'>Terms of Service</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://rapid-cloud.io/contact-us/' target='_blank'>Contact Us</a>"
},
{
"class": "text-muted text-end",
"content": "v1.7.5 (aws)"
}
]
},
"sections": [
{
"type": "Theia::Section",
"label": "Home",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/house-solid.svg",
"route": "home",
"id": "home",
"static": true,
"enabled": true,
"actions": [
{
"id": "dashboard",
"type": "Theia::Dashboard",
"label": "Dashboard",
"rows": [
{
"columns": [
{
"size": 12,
"panel": {
"type": "Theia::Panel::Markdown",
"title": "RapidCloud for AWS - Automation & Acceleration Framework",
"content": "RapidCloud is the answer to complexity of building cloud-native platforms on AWS. RapidCloud supports popular data, analytics, web and mobile use cases, which include: \n\n\n\n* Database and Data Warehouse migration to AWS\n\n* Ingestion of Relational, Semi-structured and Unstructured data\n\n* Real-time replication, CDC (Change Data Capture), ETL/ELT, Event streaming\n\n* Governance, Security, Compliance\n\n* Serverless, Containers, Web and Mobile Applications\n\n* Or any other use-case or application via RapidCloud <a href=\"https://rapid-cloud.io/custom-modules/\" target=\"_blank\">Custom Modules</a>\n\n\n\n### RapidCloud Conceptual Architecture\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/rapidcloud-conceptual.png?1\" alt=\"RapidCloud by Kinect\" width=\"820\" />\n\n\n\n## Support\n\n\n\n* [Contact Us](https://www.kinect-consulting.com/contact-us/) or (305) 428-8255\n\n\n"
}
}
]
}
]
}
]
},
{
"type": "Theia::Section",
"label": "Settings",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/list-check-solid.svg",
"route": "setup",
"id": "setup",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Subscription Information",
"id": "activate",
"module": "activate",
"env_not_required": true,
"steps": [
{
"type": "Theia::Step::Form",
"id": "activate",
"title": "Subscription Information",
"stripe_enabled": true,
"description_upgrade_dev": "<b>Upgrade to RapidCloud Premium:</b>&nbsp;&nbsp;<a href='https://buy.stripe.com/test_eVa6rBfaY1r33aE6op' target='_blank'>Annual Subscription</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://buy.stripe.com/test_9AQbLV8MAfhTh1u3cc' target='_blank'>Monthly Subscription</a>",
"description_upgrade_live": "<b>Upgrade to RapidCloud Premium:</b>&nbsp;&nbsp;<a href='https://buy.stripe.com/28oeWw9n15au9EI3cc' target='_blank'>Annual Subscription</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://buy.stripe.com/aEU4hS0QvbyS7wA289' target='_blank'>Monthly Subscription</a>",
"description": "",
"datasource": "account_info?extra=true",
"submit": "Activate",
"commands": [
{
"label": "Save",
"command": {
"phase": "activate",
"command": ""
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "email",
"label": "Email",
"help": "Enter your work email address",
"inputType": "text",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "Email is required"
},
{
"type": "Theia::Validation::Email",
"message": "Invalid email"
}
],
"readonly_edit": true
},
{
"type": "Theia::Control::Select",
"id": "tier",
"label": "Subscription Tier",
"help": "",
"readonly": "true",
"default": "1",
"options": [
{
"type": "Theia::Option",
"label": "Basic (FREE)",
"value": "1"
},
{
"type": "Theia::Option",
"label": "Premium",
"value": "2"
},
{
"type": "Theia::Option",
"label": "Kinect Consulting Team",
"value": "3"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 10,
"info": "### Activate RapidCloud\n\n\n\n**Email**\n\n\n\nYour work email address\n"
},
{
"type": "Theia::Action",
"label": "Roles",
"id": "access_create_role",
"module": "access",
"app_roles": "admin",
"env_not_required": true,
"steps": [
{
"type": "Theia::Step::Grid",
"id": "access_create_role",
"datasource": "roles?extra=true",
"columns": [
"name",
"access_all",
"access_description"
],
"title": "Roles",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "access_create_role",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Save",
"command": {
"phase": "access",
"command": "create_role"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Role Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "access_description",
"label": "Role Description",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "access_all",
"label": "Access to All RapidCloud Features",
"default": "granular",
"options": [
{
"type": "Theia::Option",
"label": "granular",
"value": {
"type": "Theia::DataOption",
"value": "granular",
"enableControls": [
"access_access",
"access_account",
"access_acm",
"access_activate",
"access_analytics",
"access_api",
"access_asg",
"access_aws",
"access_az_lz",
"access_az_net",
"access_cloudfront",
"access_datalake",
"access_datasync",
"access_deploy",
"access_ebs",
"access_ec2",
"access_ec2_plus",
"access_ecr",
"access_ecs",
"access_edb",
"access_efs",
"access_eks",
"access_elasticache",
"access_emr",
"access_fsx",
"access_gcp_net",
"access_gcp_org",
"access_ingest",
"access_init",
"access_lambda",
"access_lb",
"access_metadata",
"access_module",
"access_net",
"access_newrelic",
"access_opensearch",
"access_org",
"access_publish",
"access_publishing",
"access_rdbms-pipeline",
"access_rds",
"access_redshift",
"access_remove",
"access_route53",
"access_rules",
"access_s3",
"access_saas",
"access_secure",
"access_semi-structured-pipeline",
"access_storagegateway",
"access_tf",
"access_transform",
"access_trendmicro",
"access_undo-command",
"access_workload"
]
}
},
{
"type": "Theia::Option",
"label": "read-only",
"value": {
"type": "Theia::DataOption",
"value": "read-only",
"disableControls": [
"access_access",
"access_account",
"access_acm",
"access_activate",
"access_analytics",
"access_api",
"access_asg",
"access_aws",
"access_az_lz",
"access_az_net",
"access_cloudfront",
"access_datalake",
"access_datasync",
"access_deploy",
"access_ebs",
"access_ec2",
"access_ec2_plus",
"access_ecr",
"access_ecs",
"access_edb",
"access_efs",
"access_eks",
"access_elasticache",
"access_emr",
"access_fsx",
"access_gcp_net",
"access_gcp_org",
"access_ingest",
"access_init",
"access_lambda",
"access_lb",
"access_metadata",
"access_module",
"access_net",
"access_newrelic",
"access_opensearch",
"access_org",
"access_publish",
"access_publishing",
"access_rdbms-pipeline",
"access_rds",
"access_redshift",
"access_remove",
"access_route53",
"access_rules",
"access_s3",
"access_saas",
"access_secure",
"access_semi-structured-pipeline",
"access_storagegateway",
"access_tf",
"access_transform",
"access_trendmicro",
"access_undo-command",
"access_workload"
]
}
},
{
"type": "Theia::Option",
"label": "read-write",
"value": {
"type": "Theia::DataOption",
"value": "read-write",
"disableControls": [
"access_access",
"access_account",
"access_acm",
"access_activate",
"access_analytics",
"access_api",
"access_asg",
"access_aws",
"access_az_lz",
"access_az_net",
"access_cloudfront",
"access_datalake",
"access_datasync",
"access_deploy",
"access_ebs",
"access_ec2",
"access_ec2_plus",
"access_ecr",
"access_ecs",
"access_edb",
"access_efs",
"access_eks",
"access_elasticache",
"access_emr",
"access_fsx",
"access_gcp_net",
"access_gcp_org",
"access_ingest",
"access_init",
"access_lambda",
"access_lb",
"access_metadata",
"access_module",
"access_net",
"access_newrelic",
"access_opensearch",
"access_org",
"access_publish",
"access_publishing",
"access_rdbms-pipeline",
"access_rds",
"access_redshift",
"access_remove",
"access_route53",
"access_rules",
"access_s3",
"access_saas",
"access_secure",
"access_semi-structured-pipeline",
"access_storagegateway",
"access_tf",
"access_transform",
"access_trendmicro",
"access_undo-command",
"access_workload"
]
}
},
{
"type": "Theia::Option",
"label": "none",
"value": {
"type": "Theia::DataOption",
"value": "none",
"disableControls": [
"access_access",
"access_account",
"access_acm",
"access_activate",
"access_analytics",
"access_api",
"access_asg",
"access_aws",
"access_az_lz",
"access_az_net",
"access_cloudfront",
"access_datalake",
"access_datasync",
"access_deploy",
"access_ebs",
"access_ec2",
"access_ec2_plus",
"access_ecr",
"access_ecs",
"access_edb",
"access_efs",
"access_eks",
"access_elasticache",
"access_emr",
"access_fsx",
"access_gcp_net",
"access_gcp_org",
"access_ingest",
"access_init",
"access_lambda",
"access_lb",
"access_metadata",
"access_module",
"access_net",
"access_newrelic",
"access_opensearch",
"access_org",
"access_publish",
"access_publishing",
"access_rdbms-pipeline",
"access_rds",
"access_redshift",
"access_remove",
"access_route53",
"access_rules",
"access_s3",
"access_saas",
"access_secure",
"access_semi-structured-pipeline",
"access_storagegateway",
"access_tf",
"access_transform",
"access_trendmicro",
"access_undo-command",
"access_workload"
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_access",
"label": "access (User Roles and Permissions)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_account",
"label": "account (RapidCloud Account Information)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_acm",
"label": "acm (Amazon Certificate Manager)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_activate",
"label": "activate (RapidCloud Activation)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_analytics",
"label": "analytics (Analytics Jobs via Glue or EMR)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_api",
"label": "api (API Gateway and Lambda Integrations)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_asg",
"label": "asg (Auto Scaling Groups)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_aws",
"label": "aws (Ad-hoc AWS commands)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_az_lz",
"label": "az_lz (Azure Landing Zone)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_az_net",
"label": "az_net (Azure Networking)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_cloudfront",
"label": "cloudfront (CloudFront)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_datalake",
"label": "datalake (S3 Datalake)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_datasync",
"label": "datasync (DataSync)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_deploy",
"label": "deploy",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_ebs",
"label": "ebs (Elastic Block Store)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_ec2",
"label": "ec2 (EC2)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_ec2_plus",
"label": "ec2_plus (EC2 Backend)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_ecr",
"label": "ecr (Elastic Container Registry)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_ecs",
"label": "ecs (ECS Fargate)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_edb",
"label": "edb (EDB)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_efs",
"label": "efs (Elastic File System)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_eks",
"label": "eks (EKS)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_elasticache",
"label": "elasticache (ElastiCache)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_emr",
"label": "emr (EMR)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_fsx",
"label": "fsx (FSx for Windows)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_gcp_net",
"label": "gcp_net (GCP Networking)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_gcp_org",
"label": "gcp_org (GCP Org)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_ingest",
"label": "ingest (Data Ingestion)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_init",
"label": "init (RapidCloud Environments)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_lambda",
"label": "lambda (Lambda Functions)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_lb",
"label": "lb (Load Balancing)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_metadata",
"label": "metadata (RapidCloud Metadata)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_module",
"label": "module (RapidCloud Modules)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_net",
"label": "net (Networking)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_newrelic",
"label": "newrelic (New Relic Integration)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_opensearch",
"label": "opensearch (OpenSearch)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_org",
"label": "org (Organizations and Accounts)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_publish",
"label": "publish (Data Publishsing to RDS, Aurora or Redshift)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_publishing",
"label": "publishing (Data Publishsing to RDS, Aurora or Redshift)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_rdbms-pipeline",
"label": "rdbms-pipeline (RDBMS Ingestion Pipeline)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_rds",
"label": "rds (RDS)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_redshift",
"label": "redshift (Redshift)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_remove",
"label": "remove (Remove Metadata)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_route53",
"label": "route53 (Route53 Record Sets)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_rules",
"label": "rules (PII Rules)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_s3",
"label": "s3 (S3)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_saas",
"label": "saas (RapidCLoud SaaS Tenant Management)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_secure",
"label": "secure (PII Rules)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_semi-structured-pipeline",
"label": "semi-structured-pipeline (Semi-Structured Files Ingestion Pipeline)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_storagegateway",
"label": "storagegateway (AWS Storage Gateway)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_tf",
"label": "tf (Terraform Actions)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_transform",
"label": "transform (Transformation Jobs via Glue)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_trendmicro",
"label": "trendmicro (Trend Micro Cloud One Integration)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_undo-command",
"label": "undo-command (Undo RapidCloud Command)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Select",
"id": "access_workload",
"label": "workload (Pause and Resume Resources)",
"default": "read-only",
"options": [
{
"type": "Theia::Option",
"label": "read-only",
"value": "read-only"
},
{
"type": "Theia::Option",
"label": "read-write",
"value": "read-write"
},
{
"type": "Theia::Option",
"label": "none",
"value": "none"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 12
},
{
"type": "Theia::Action",
"label": "Users",
"id": "users",
"module": "access",
"env_not_required": true,
"steps": [
{
"type": "Theia::Step::Grid",
"id": "users",
"datasource": "account_users",
"columns": [
"access_email",
"access_role",
"ux_context",
"status",
"timestamp"
],
"title": "Users",
"hide_add": true
},
{
"type": "Theia::Step::Form",
"id": "users",
"title": "Assign Role",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Submit",
"command": {
"phase": "access",
"command": "assign_role"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "access_email",
"label": "User",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Select",
"id": "access_role",
"label": "Role",
"help": "",
"datasource": "role_names_for_select?extra=true&module_name_arg=access",
"env_not_required": true
},
{
"type": "Theia::Control::Select",
"id": "access_ux_context",
"label": "User Experience Context",
"help": "",
"default": "admin",
"options": [
{
"type": "Theia::Option",
"label": "Admin (all features within currently assigned role)",
"value": "admin"
},
{
"type": "Theia::Option",
"label": "Engineer (non-admin features)",
"value": "engineer"
},
{
"type": "Theia::Option",
"label": "User (non-engineer features)",
"value": "user"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 15
},
{
"type": "Theia::Action",
"label": "Environments",
"id": "environments",
"module": "init",
"env_not_required": true,
"steps": [
{
"type": "Theia::Step::Grid",
"id": "environments",
"datasource": "data?type=profile",
"columns": [
"name",
"created_by",
"shared",
"account",
"region",
"vpc",
"aws_profile",
"timestamp"
],
"title": "Environments",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "environments",
"title": "Environment",
"submit": "Submit",
"description": "",
"allowMarkdown": true,
"commands": [
{
"label": "Submit",
"command": {
"phase": "init",
"command": "create-env"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Environment Name",
"help": "Environment name is comprised of {org}_{workload}_{environment}. For example: myorg_bitools_dev or abccorp_orders_test. Use three fields below.",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "client",
"label": "Company or organization name",
"help": "Enter your company or organization name (no spaces or special characters allowed)",
"inputType": "text",
"readonly_edit": true
},
{
"type": "Theia::Control::Input",
"id": "workload",
"label": "Workload/Application",
"help": "Workload or Application Name (no spaces or special characters allowed)",
"inputType": "text",
"readonly_edit": true
},
{
"type": "Theia::Control::Input",
"id": "env",
"cli_arg": "env_suffix",
"label": "Environment",
"help": "Enter Environment (e.g. dev|qa|uat|stg|prod)",
"inputType": "text",
"readonly_edit": true
},
{
"type": "Theia::Control::Toggle",
"id": "shared",
"label": "Is this environment shared with other engineers?"
},
{
"type": "Theia::Control::MultiSelect",
"id": "shared_with",
"label": "Shared With",
"help": "",
"datasource": "users_for_select?extra=true",
"env_not_required": true,
"default": ""
},
{
"type": "Theia::Control::Select",
"id": "aws_profile",
"label": "AWS Profile",
"help": "Select AWS Profile to allow RapidCloud access to your Environment's AWS Account",
"datasource": "cloud_profiles?cloud_arg=aws",
"env_not_required": true
},
{
"type": "Theia::Control::Input",
"id": "x_acct_role_arn",
"label": "Cross-Account Role ARN",
"help": "If `AWS Profile` is not available or not selected above, specify Cross-Account Role ARN to allow RapidCloud access to your Environment's AWS Account. To create a role, use the link at the top of this form",
"env_not_required": true
},
{
"type": "Theia::Control::Select",
"id": "vpc",
"label": "VPC",
"help": "AWS VPC",
"datasource": "formdata_from_aws?type=vpcs",
"env_not_required": true,
"readonly_edit": true
},
{
"type": "Theia::Control::Select",
"id": "region",
"label": "Region",
"help": "e.g us-east-1, us-east-2",
"readonly_edit": true,
"options": [
{
"type": "Theia::Option",
"label": "US East (N. Virginia): us-east-1",
"value": "us-east-1"
},
{
"type": "Theia::Option",
"label": "US East (Ohio): us-east-2",
"value": "us-east-2"
},
{
"type": "Theia::Option",
"label": "US West (N. California): us-west-1",
"value": "us-west-1"
},
{
"type": "Theia::Option",
"label": "US West (Oregon): us-west-2",
"value": "us-west-2"
},
{
"type": "Theia::Option",
"label": "Canada (Central): ca-central-1",
"value": "ca-central-1"
},
{
"type": "Theia::Option",
"label": "South America (SÃ£o Paulo): sa-east-1",
"value": "sa-east-1"
},
{
"type": "Theia::Option",
"label": "AWS GovCloud (US-East): us-gov-east-1",
"value": "us-gov-east-1"
},
{
"type": "Theia::Option",
"label": "AWS GovCloud (US): us-gov-west-1",
"value": "us-gov-west-1"
}
]
},
{
"type": "Theia::Control::Input",
"id": "ssh_pub_key",
"cli_arg": "ssh-pub-key",
"label": "SSH Public Key",
"help": "SSH Public Key will be used to access EMR clusters through SSH (if applicable)",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "ips_for_ssh",
"label": "Allowed IP Addresses",
"help": "Comma separated list of IP Addresses to be allowed SSH Access to EMR Cluster"
},
{
"type": "Theia::Control::Toggle",
"id": "vpn_only",
"label": "Using VPN to connect to AWS"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 1000,
"info": "### Environments\n\n\n\nAn environment is a specific AWS workload or application, with its own business logic, security, data catalog, data lake, databases, compute services and other cloud resources.\n\n\n\nYou can create as many environments as you want, in any AWS Account, region and VPC.\n\n\n\nEach environment is completely isolated and managed separately from other environments.\n\n\n\nEnvironment name is comprised of  {`org`}\\_{`workload`}\\_{`environment`}. for example: `kinect_bitools_dev` or `abccorp_orders_test`\n\n\n\n**Company or organization**\n\n\n\nEnter your company or organization name without spaces or special characters.\n\n\n\n**Workload/Application**\n\n\n\nWorkload Name without spaces or special characters. This should uniquely identify the type of workload or application you're creating this environment for.\n\n\n\n**Environment**\n\n\n\nThis is a specific instance of the environment (e.g. dev|qa|uat|stg|prod)\n\n\n\n**AWS Profile**\n\n\n\nSelect the name of AWS Profile that will allow RapidCloud access to your Environment's AWS account. AWS Profile must be previosely set up on the machine that hosts RapidCloud. \n\n\n\nRapidCloud will run `aws configure list-profiles` command to present available AWS Profiles. Please make sure AWS CLI is properly configured and use `aws configure` command to create your profile.\n\n\n\n**Cross-Account Role ARN**\n\n\n\nSpecify Cross-Account Role ARN that will allow RapidCloud access to your Environment's AWS Account.\n\n\n\n**VPC**\n\n\n\nAWS VPC ID where VPC specific resources will be created.\n\n\n\n**Region**\n\n\n\nAWS Region where region specific resources will be created.\n\n\n\n**SSH Public Key**\n\n\n\nSSH Public Key will be used to access EMR clusters through SSH. This is only applicable for workloads that require EMR.\n\n\n\n**Allowed IP Addresses**\n\n\n\nComma separated list of IP Addresses to be allowed SSH Access to EMR Cluster.\n\n\n\n**Are you using VPN to connect to your cloud account?**\n\n\n\nWe recommend always using VPN to connect to your cloud account.\n"
}
]
},
{
"type": "Theia::Section",
"label": "Architecture",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/sitemap-solid.svg",
"route": "modeling",
"id": "modeling",
"enabled": true,
"actions": [
{
"id": "aws_architecture",
"enabled": true,
"label": "Environment State",
"component": {
"file": "architecture",
"className": "ArchitectureComponent"
},
"dynamic": true,
"type": "Theia::Action",
"order": 1000
},
{
"id": "aws_solution_wizard",
"label": "Solution Architecture",
"order": 1000,
"dynamic": true,
"component": {
"file": "architecture-wizard",
"className": "ArchitectureWizardComponent",
"data": {
"id": "aws_solution_wizard",
"endpoint": "diagram/solution",
"info": "",
"command": {
"label": "Save",
"command": {
"phase": "architecture",
"command": "save-wizard",
"diagram_type": "solution"
}
}
}
},
"type": "Theia::Action"
},
{
"id": "aws_lz_wizard",
"label": "Landing Zone",
"order": 1000,
"dynamic": true,
"component": {
"file": "architecture-wizard",
"className": "ArchitectureWizardComponent",
"data": {
"id": "aws_lz_wizard",
"endpoint": "diagram/lz",
"info": "",
"command": {
"label": "Save",
"command": {
"phase": "architecture",
"command": "save-wizard",
"diagram_type": "lz"
}
}
}
},
"type": "Theia::Action"
},
{
"id": "aws_net_wizard",
"label": "Network",
"order": 1000,
"dynamic": true,
"component": {
"file": "architecture-wizard",
"className": "ArchitectureWizardComponent",
"data": {
"id": "aws_net_wizard",
"endpoint": "diagram/net",
"info": "",
"command": {
"label": "Save",
"command": {
"phase": "architecture",
"command": "save-wizard",
"diagram_type": "net"
}
}
}
},
"type": "Theia::Action"
}
]
},
{
"type": "Theia::Section",
"label": "Environment",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/sliders-solid.svg",
"route": "metadata",
"id": "metadata",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Metadata",
"id": "modules",
"module": "module",
"env_not_required": true,
"steps": [
{
"type": "Theia::Step::Grid",
"id": "modules",
"datasource": "data?type=metadata&flatten=false",
"env_param_required": true,
"columns": [
"module",
"command",
"name",
"timestamp",
"fqn",
"cmd_id"
],
"title": "Environment Metadata",
"description": "",
"hide_add": true
},
{
"type": "Theia::Step::Json",
"id": "modules",
"title": "",
"description": ""
}
],
"order": 10,
"info": "### Environment Metadata\n\n\n\nThis is top level metadata for current environment. Each metadata item may represent multiple AWS resources. To see AWS resource specific configurations, click on `AWS Resources` menu option.\n\n\n"
},
{
"type": "Theia::Action",
"label": "Infrastructure Resources",
"id": "infra_resources",
"module": "status",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "infra_resources",
"datasource": "status?test=test",
"env_param_required": true,
"columns": [
"created",
"resource_type",
"resource_name",
"phase",
"command",
"timestamp",
"cmd_id"
],
"title": "Infrastructure Resources",
"description": "This page shows all the Cloud Infrastructure Resources deployed or to be deployed as part of your current environment.\n",
"allowMarkdown": true,
"hide_add": true
},
{
"type": "Theia::Step::Json",
"id": "history",
"title": "",
"description": ""
}
],
"order": 20
},
{
"type": "Theia::Action",
"label": "Remove Metadata",
"id": "clean",
"module": "metadata",
"steps": [
{
"type": "Theia::Step::Form",
"id": "clean",
"title": "Remove Environment Metadata",
"allowMarkdown": true,
"description": "This removes all metadata for the environment \n\n\n\nFrom CLI: `kc metadata remove` \n\n\n\nImportant: this does not destroy environment resources. \n\n\n\nIf your goal is to remove the environment and all resources, then first do `Deploy -> Terraform Actions -> Destroy` (`kc tf destroy`) and then `Metadata -> Remove Metadata` (`kc metadata remove`)",
"submit": "Remove Environment Metadata",
"commands": [
{
"label": "Clean",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove all metadata associated with your environment?",
"command": {
"phase": "metadata",
"command": "remove",
"refresh_status": true
}
}
]
}
],
"order": 30
},
{
"type": "Theia::Action",
"label": "Export",
"id": "export",
"module": "metadata",
"steps": [
{
"type": "Theia::Step::Form",
"id": "export",
"title": "Export Current Environment",
"description": "Create snapshot for current environment metadata. Snapshot will be saved as json file in ~/kc-rapidcloud/config/environments directory",
"submit": "Submit",
"commands": [
{
"label": "Export",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to create snapshot for this environment's metadata?",
"command": {
"phase": "metadata",
"command": "export"
}
}
]
}
],
"order": 1000
},
{
"type": "Theia::Action",
"label": "Import",
"id": "import",
"module": "metadata",
"steps": [
{
"type": "Theia::Step::Form",
"id": "import",
"title": "Import Environment",
"description": "Import environment metadata from current environment's latest snapshot",
"submit": "Submit",
"env_param_required": false,
"commands": [
{
"label": "Import",
"require_confirmation": true,
"confirmation_message": "Target environment metadata will be replaced. This is irreversible. Are you sure you want to import latest snapshot from current environment into selected target environemt?",
"command": {
"phase": "metadata",
"command": "import"
}
}
],
"controls": [
{
"type": "Theia::Control::Select",
"id": "target_env",
"label": "Select Target Environment",
"help": "Snapshot will be applied to target environment. Target environment metadata will be replaced.",
"datasource": "formdata?type=profile&field=name"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 1000
},
{
"type": "Theia::Action",
"label": "Properties",
"id": "properties",
"module": "init",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "properties",
"datasource": "data?type=property",
"env_param_required": true,
"columns": [
"type",
"name",
"default_value",
"value"
],
"title": "Properties",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "data",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Save",
"command": {
"phase": "init",
"command": "set-property",
"refresh_status": false
}
}
],
"controls": [
{
"type": "Theia::Control::Select",
"id": "type",
"label": "Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "general",
"value": "general"
},
{
"type": "Theia::Option",
"label": "api_gateway",
"value": "api_gateway"
},
{
"type": "Theia::Option",
"label": "aurora_mysql_instance",
"value": "aurora_mysql_instance"
},
{
"type": "Theia::Option",
"label": "aurora_postgresql_instance",
"value": "aurora_postgresql_instance"
},
{
"type": "Theia::Option",
"label": "cloudwatch_event_rule",
"value": "cloudwatch_event_rule"
},
{
"type": "Theia::Option",
"label": "dms_event_subscription",
"value": "dms_event_subscription"
},
{
"type": "Theia::Option",
"label": "dms_replication_instance",
"value": "dms_replication_instance"
},
{
"type": "Theia::Option",
"label": "dms_replication_task",
"value": "dms_replication_task"
},
{
"type": "Theia::Option",
"label": "dms_s3_target_endpoint",
"value": "dms_s3_target_endpoint"
},
{
"type": "Theia::Option",
"label": "dms_source_endpoint",
"value": "dms_source_endpoint"
},
{
"type": "Theia::Option",
"label": "emr_cluster",
"value": "emr_cluster"
},
{
"type": "Theia::Option",
"label": "glue_catalog_database",
"value": "glue_catalog_database"
},
{
"type": "Theia::Option",
"label": "glue_classifier",
"value": "glue_classifier"
},
{
"type": "Theia::Option",
"label": "glue_connection",
"value": "glue_connection"
},
{
"type": "Theia::Option",
"label": "glue_crawler",
"value": "glue_crawler"
},
{
"type": "Theia::Option",
"label": "glue_job",
"value": "glue_job"
},
{
"type": "Theia::Option",
"label": "glue_trigger",
"value": "glue_trigger"
},
{
"type": "Theia::Option",
"label": "kinesis_firehose_s3_delivery_stream",
"value": "kinesis_firehose_s3_delivery_stream"
},
{
"type": "Theia::Option",
"label": "kinesis_stream",
"value": "kinesis_stream"
},
{
"type": "Theia::Option",
"label": "kms_key",
"value": "kms_key"
},
{
"type": "Theia::Option",
"label": "lambda_event_source_mapping",
"value": "lambda_event_source_mapping"
},
{
"type": "Theia::Option",
"label": "lambda_function",
"value": "lambda_function"
},
{
"type": "Theia::Option",
"label": "lambda_layer",
"value": "lambda_layer"
},
{
"type": "Theia::Option",
"label": "msk_cluster",
"value": "msk_cluster"
},
{
"type": "Theia::Option",
"label": "rds_mysql_instance",
"value": "rds_mysql_instance"
},
{
"type": "Theia::Option",
"label": "rds_postgresql_instance",
"value": "rds_postgresql_instance"
},
{
"type": "Theia::Option",
"label": "redshift_cluster",
"value": "redshift_cluster"
},
{
"type": "Theia::Option",
"label": "s3_bucket",
"value": "s3_bucket"
},
{
"type": "Theia::Option",
"label": "s3_bucket_notification",
"value": "s3_bucket_notification"
},
{
"type": "Theia::Option",
"label": "s3_bucket_object",
"value": "s3_bucket_object"
},
{
"type": "Theia::Option",
"label": "sns_topic",
"value": "sns_topic"
},
{
"type": "Theia::Option",
"label": "sns_topic_subscription",
"value": "sns_topic_subscription"
}
]
},
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Property",
"help": "Property (no spaces or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "default_value",
"label": "Default Value",
"help": "Default Value",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "value",
"label": "Value",
"help": "Value",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 1000,
"info": "### Properties\n\n\n\nRapidCloud properties are used by infrastructure automation modules to configure AWS resources. Each environment has its own set of default properties. You can modify property value if you want to change how specific resource is configured. \n\n\n\n**Type**\n\n\n\nProperty type is either `general` or for a specific AWS resource type.\n\n\n\n**Property**\n\n\n\nName of the property to set value for.\n\n\n\n**Default Value**\n\n\n\nDefault property value to be used by RapidCloud automation.\n\n\n\n**Value**\n\n\n\nYou can override default value here."
}
]
},
{
"type": "Theia::Section",
"label": "Data Ingestion",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/file-import-solid.svg",
"route": "ingest",
"id": "ingest",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Datalake",
"id": "datalake",
"module": "datalake",
"steps": [
{
"type": "Theia::Step::Form",
"id": "datalake",
"datasource": "data?type=metadata&filter_name=module&filter_value=datalake",
"env_param_required": true,
"title": "Datalake",
"description": "If you see `Datalake Name` below, then you already have a datalake. There can only be one Datalake per environment. Your datalake consists of `S3 buckets`, `roles`, `policies`, `S3 event notifications` and `lambda functions` for safely storing data and managing various data pipelines. Datalake will be automatically created when you configure any data pipeline or analytics jobs.",
"allowMarkdown": true,
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Create",
"command": {
"phase": "datalake",
"command": "create",
"refresh_status": true
},
"editable_hide": true
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Name",
"help": "",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 10,
"info": "### Datalake\n\n\n\nYour datalake consists of `S3 buckets`, `roles`, `policies`, `S3 event notifications` and `lambda functions` for safely storing data and managing various data pipelines\n\n\n\n**Datalake Name**\n\n\n\nThis is optional. If not provided, default is `datalake`"
},
{
"type": "Theia::Action",
"label": "RDBMS: Source Databases",
"id": "databases",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "environment",
"datasource": "data?type=source_database",
"env_param_required": true,
"columns": [
"name",
"engine",
"server",
"schema"
],
"title": "Source Databases",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "database",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Create",
"command": {
"phase": "ingest",
"command": "register-source-database",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Database Name",
"help": "Enter database name (no space or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "engine",
"label": "Database Engine",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "MySQL",
"value": {
"type": "Theia::DataOption",
"value": "mysql",
"disableControls": [
"db"
]
}
},
{
"type": "Theia::Option",
"label": "Oracle",
"value": {
"type": "Theia::DataOption",
"value": "oracle"
}
},
{
"type": "Theia::Option",
"label": "Postgres",
"value": {
"type": "Theia::DataOption",
"value": "postgres"
}
}
]
},
{
"type": "Theia::Control::Input",
"id": "server",
"label": "Database Server Address",
"help": "Enter Database Server Address (dns name or IP address)",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "port",
"label": "Database Server Port",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "db_user",
"label": "Database User",
"help": "Database User with permissions to get schema details",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "password",
"label": "Password",
"help": "Database Password will be encrypted and never stored or transmitted in plain text",
"inputType": "password"
},
{
"type": "Theia::Control::Input",
"id": "db",
"label": "Database/Catalog Name",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "schema",
"label": "Schema Name",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "rate_of_change",
"label": "Database Rate of Change (GB/hr)",
"default": "1"
},
{
"type": "Theia::Control::Toggle",
"id": "use_dms",
"label": "Enable DMS (Database Migration Service)"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 20,
"info": "### Source Databases\n\n\n\nEach RDBMS to be ingested via RapidCloud must be registered here.\n\n\n\n**Database Name**\n\n\n\nEnter database name without space or special characters. This is the name to be used by RapidCloud internally and doesn't have to be the same as the source database name. Use something meaningful (e.g. `orders`, `hr`)\n\n\n\n**Database Engine**\n\n\n\nSelect your source database engine from the list. RapidCloud currently supports Oracle, MS SQL Server, MySQL. PostgreSQL support is coming soon.\n\n\n\n**Database Server Address**\n\n\n\nSpecify DNS name or IP Address for your database.\n\n\n\n**Database Server Port**\n\n\n\nSpecify port for your database.\n\n\n\n**Database User**\n\n\n\nDatabase User with permissions to get schema details, read access to data and proper access to logs for replication.\n\n\n\n**Password**\n\n\n\nDatabase Password will be encrypted and saved in AWS Secrets Manager. It will never be stored or transmitted in plain text.\n\n\n\n**Database/Catalog/SID**\n\n\n\nDatabase name or catalog name \n\n\n\n**Service/Schema name**\n\n\n\nDatabase schema name\n\n\n\n**Database Rate of Change (GB/hr)**\n\n\n\nHow much data is being created or changed on the average every hour? This is important for RapidCloud to determine proper on-going replication architecture."
},
{
"type": "Theia::Action",
"label": "RDBMS: Source Tables",
"id": "datasets",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "datasets",
"datasource": "data?type=dataset",
"env_param_required": true,
"columns": [
"name",
"source_database",
"source_schema",
"source_table",
"size",
"pk",
"partitioned_by",
"cdc_via"
],
"title": "Source Database Tables",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "dataset",
"title": "",
"description": "",
"readonly": false,
"editable_hide": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "ingest",
"command": "add-dataset"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "source_database",
"label": "Database Name",
"help": "Select an already registered database name",
"datasource": "formdata?type=source_database&field=name&data_fields=schema"
},
{
"type": "Theia::Control::Input",
"id": "source_schema",
"label": "Schema Name",
"help": "Enter Schema Name",
"inputType": "text",
"readonly": true,
"dependency": {
"controlId": "source_database",
"field": "schema"
}
},
{
"type": "Theia::Control::MultiSelect",
"id": "source_table",
"cli_arg": "include_tables",
"label": "Include Tables",
"help": "Select table names or type `all` to include all tables",
"dynamic_datasource": "formdata?type=source_table&filter_name=database&filter_value=${source_database}&field=table_name"
},
{
"type": "Theia::Control::Select",
"id": "size",
"label": "Table Size",
"help": "Select size of table to indicate type of DMS task. See help info for details.",
"options": [
{
"type": "Theia::Option",
"label": "n/a",
"value": "n/a"
},
{
"type": "Theia::Option",
"label": "Small",
"value": "small"
},
{
"type": "Theia::Option",
"label": "Medium",
"value": "medium"
},
{
"type": "Theia::Option",
"label": "Large",
"value": "large"
},
{
"type": "Theia::Option",
"label": "Xlarge",
"value": "xlarge"
}
]
},
{
"type": "Theia::Control::Input",
"id": "prefix",
"label": "Dataset Prefix",
"help": "Example: prefix hr_ for source table employee will create dataset hr_employee",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "partitioned_by",
"label": "Partitions",
"help": "Comma separated list of attributes to organize this data in the datalake [default: year,month,day]",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 30,
"info": "### Database Tables\n\n\n\nDepending on your specific use case, you may want to ingest only some tables or all. RapidCloud needs to know that.\n\n\n\n**Database Name**\n\n\n\nSelect an already registered database name from the list\n\n\n\n**Schema Name**\n\n\n\nSchema name is automatically selected based on database selection \n\n\n\n**Include Tables**\n\n\n\nSelect table names or `all` to include all tables\n\n\n\n**Table Size**\n\n\n\nSelect size of table to indicate type of DMS task. `Small` will be ingested and replaced based on schedule. `Medium`, `Large`, and `Xlarge` will be ingested using incremental replication.\n\n\n\n**Dataset Prefix**\n\n\n\nExample: prefix `hr_` for source table employee will create dataset `hr_employee`\n\n\n\n**Partitions**\n\n\n\nComma separated list of attributes to organize this data in the datalake [default: year,month,day]. This will be applied to `raw` (aka organized) bucket in the datalake."
},
{
"type": "Theia::Action",
"label": "RDBMS: DMS Schedules",
"id": "schedules",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "schedules",
"datasource": "data?type=schedule",
"env_param_required": true,
"columns": [
"source_database",
"task",
"type",
"schedule",
"enabled"
],
"title": "Replication Schedules",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "data",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command",
"refresh_status": true
},
"new_hide": true
},
{
"label": "Save",
"command": {
"phase": "ingest",
"command": "schedule"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "task",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "source_database",
"label": "Source Database",
"help": "Select an already registered source database",
"datasource": "formdata?type=source_database&field=name"
},
{
"type": "Theia::Control::Select",
"id": "type",
"label": "Select replication type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Full replication of small tables",
"value": "full"
},
{
"type": "Theia::Option",
"label": "CDC for Inserts",
"value": "inserts"
},
{
"type": "Theia::Option",
"label": "CDC for Updates",
"value": "updates"
}
]
},
{
"type": "Theia::Control::Input",
"id": "schedule",
"label": "Enter schedule as cron expression",
"help": "Example: run every day at midnight => 0 4 * * ? *",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "enabled",
"label": "Enable this migration task"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 40,
"info": "### Replication Schedule\n\n\n\nUse cases that don't use DMS built-in on-going replication require replication scheduling via RapidCloud. This would be the case for larger dataabses with significant rate-of-change. For these use cases RapidCloud allows to set up tree types of replications.\n\n\n\n* Full replication for smaller tables\n\n* CDC for Inserts\n\n* CDC for Updates\n\n\n\n**Replication Type**\n\n\n\nSelect an already registered database name from the list\n\n\n\n**Enter schedule as cron expression**\n\n\n\nExample: run every day at midnight => `0 4 * * ? *`\n\n\n\n**Enable this migration task**\n\n\n\nReplication via DMS Tasks is not enabled by default\n\n\n"
},
{
"type": "Theia::Action",
"label": "RDBMS: Events",
"id": "events",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "events",
"datasource": "data?type=event",
"env_param_required": true,
"columns": [
"name",
"source_database",
"source_table",
"partitions"
],
"title": "Events",
"description": "Each event must correspond to your source database tables (RapidCloud `dataset`). This use case is appropriate when you need to process source database changes in near-realtime. Events are consumed via Kinesis Firehose and saved in S3",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "data",
"title": "",
"description": "Events are processed in near-realtime via Kinesis Firehose",
"submit": "Submit",
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Add Event",
"command": {
"phase": "ingest",
"command": "add-event",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Select",
"id": "name",
"cli_arg": "dataset_name",
"label": "Dataset Name",
"help": "",
"datasource": "formdata?type=dataset&field=name"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 45,
"info": "### Events\n\n\n\nEach event must correspond to your source database tables (RapidCloud `dataset`). This use case is appropriate when you need to process source database changes in near-realtime. Events are consumed via Kinesis Firehose and saved in S3\n\n\n\n**Dataset Name**\n\n\n\nSelect an existing dataset \n"
},
{
"type": "Theia::Action",
"label": "RDBMS: Data Type Mappings",
"id": "datatypes",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "datatypes",
"datasource": "data?type=data_type_translation",
"columns": [
"engine_from",
"engine_to",
"cast_from",
"cast_to"
],
"readonly": true,
"title": "Data Type Mappings",
"description": "Following mappings will be used to ensure proper data type conversions between two database engines when ingesting relational data."
}
],
"order": 50
},
{
"type": "Theia::Action",
"label": "Semi-Structured (Json, CSV, etc)",
"id": "semistructured",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "semistructured",
"datasource": "data?type=dataset_semi_structured",
"env_param_required": true,
"columns": [
"name",
"enabled",
"format",
"category",
"cdc_type",
"enable_enrich",
"enable_transform"
],
"title": "Semi-structured Data",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "data",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Save",
"command": {
"phase": "ingest",
"command": "register-semi-structured",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Enter Dataset Name with no spaces",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "enabled",
"label": "Enable this dataset"
},
{
"type": "Theia::Control::Select",
"id": "cdc_type",
"label": "CDC Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Delta",
"value": "delta"
},
{
"type": "Theia::Option",
"label": "Cumulative",
"value": "cumulative"
},
{
"type": "Theia::Option",
"label": "Cumulative YTD",
"value": "cumulative_year"
},
{
"type": "Theia::Option",
"label": "Cumulative MTD",
"value": "cumulative_month"
}
]
},
{
"type": "Theia::Control::Select",
"id": "format",
"label": "File Format",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "CSV",
"value": {
"type": "Theia::DataOption",
"value": "csv",
"disableControls": [
"sheet_name",
"use_first_row_as_cols"
],
"enableControls": [
"separator_char",
"use_quotes_around_strings"
]
}
},
{
"type": "Theia::Option",
"label": "Excel (XSLX)",
"value": {
"type": "Theia::DataOption",
"value": "xlsx",
"disableControls": [
"separator_char",
"use_quotes_around_strings",
"use_first_row_as_cols"
],
"enableControls": [
"sheet_name"
]
}
},
{
"type": "Theia::Option",
"label": "JSON",
"value": {
"type": "Theia::DataOption",
"value": "json",
"enableControls": [
"use_first_row_as_cols"
],
"disableControls": [
"separator_char",
"use_quotes_around_strings",
"sheet_name"
]
}
},
{
"type": "Theia::Option",
"label": "XML",
"value": {
"type": "Theia::DataOption",
"value": "xml",
"disableControls": [
"separator_char",
"use_quotes_around_strings",
"sheet_name",
"use_first_row_as_cols"
]
}
}
]
},
{
"type": "Theia::Control::Input",
"id": "category",
"label": "Data Category (e.g. financials, legal, products)",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "separator_char",
"label": "Separator Character",
"help": "This applies to CSV only. Deafault: \",\"",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "use_quotes_around_strings",
"label": "Use Quotes Around Strings",
"help": "This applies to CSV only",
"options": [
{
"type": "Theia::Option",
"label": "Yes",
"value": "yes"
},
{
"type": "Theia::Option",
"label": "No",
"value": "no"
}
]
},
{
"type": "Theia::Control::Select",
"id": "use_first_row_as_cols",
"label": "Use First Row as Columns",
"help": "This applies to JSON files",
"options": [
{
"type": "Theia::Option",
"label": "Yes",
"value": "true"
},
{
"type": "Theia::Option",
"label": "No",
"value": "false"
}
]
},
{
"type": "Theia::Control::Input",
"id": "sheet_name",
"label": "Excel Sheet Name",
"help": "Leave empty if Excel file only contains one sheet",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "enable_enrich",
"label": "Enable post-processing / data enrichment for this dataset?"
},
{
"type": "Theia::Control::Input",
"id": "enrich_name",
"label": "Name of Post-processing lambda function",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::KeyValue",
"id": "env-vars",
"label": "Environment Variables for Post-processing Lambda",
"dynamic_datasource": "data?type=aws_infra&filter_name=resource_type,resource_name&filter_value=lambda_function,${enrich_name}&params=env_vars",
"add_value_label": "Add new environment variable for Post-processing Lambda"
},
{
"type": "Theia::Control::Input",
"id": "pk",
"cli_arg": "primary_key",
"label": "Primary Key (if known)",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "partitions",
"label": "Partitions",
"help": "Comma separated list of attributes to organize this dataset [default: year,month,day]",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "source_location",
"cli_arg": "source-location",
"label": "Source Location",
"help": "Source Location for information only",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "enable_transform",
"label": "Enable transformation for this dataset. RapidCloud will automatically trigger Transformation Glue job for this data set upon completion of CDC."
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 60,
"info": "### Semi-structured Data\n\n\n\nRegister each unique type of file. RapidCloud supports ingestion of CSV, JSON, XML and Excel files.\n\n\n\n**Enter Dataset Name with no spaces**\n\n\n\nThis uniquely identifes ingested data. For example, if you're ingesting CSV file that contains list of monthly invoices, then you can name this dataset `monthly_invoices`\n\n\n\n**Enable this dataset?**\n\n\n\nThis instructs RapidCloud to start CDC for this dataset as soon as it is uploaded to `ingestion` bucket.\n\n\n\n**CDC Type**\n\n\n\nCDC (Change Data Capture) type instructs RapidCloud how to apply newly ingested files. \n\n\n\n- Delta (each file only contains incremental changes)\n\n- Cumulative (each file contains all data and replaces previous file)\n\n- Cumulative YTD (each file contains all data for specified year and replaces previous file for that year)\n\n- Cumulative MTD (each file contains all data for specified year/month and replaces previous file for that year/month)\n\n\n\n**File Format**\n\n\n\nChoose file format. RapidCloud currently supports CSV, JSON, XML and Excel files\n\n\n\n**Data Category (e.g. financials, legal, products)**\n\n\n\nData Category is a convenient way of categorizing your files \n\n\n\n**Separator Character**\n\n\n\nThis applies to CSV files only. Deafault: \",\"\n\n\n\n**Use Quotes Around Strings**\n\n\n\nThis applies to CSV only\n\n\n\n**Excel Sheet Name**\n\n\n\nThis only applies to Excel files with multiple worksheets. Leave empty if Excel file only contains one worksheet\n\n\n\n**Enable post-processing / data enrichment for this dataset?**\n\n\n\nThis instructs RapidCloud to automatically trigger a lambda function as soon as file is ingested, to run some post-processing or business logic. For example, enriching dataset with additional data or calculating some derived values.\n\n\n\n**Name of Post-processing lambda function**\n\n\n\nName of the lambda function to be created by RapidCloud to run post-processing logic\n\n\n\n**Env Vars**\n\n\n\nEnvironment Variables for post-processing Lambda Function\n\n\n\n**Enable transformations for this dataset**\n\n\n\nThis instructs RapidCloud to automatically trigger transformation or analysis job for this dataset.\n\n\n\n**Primary Key**\n\n\n\nIf known, enter primary key for this dataset.\n\n\n\n**Partitions**\n\n\n\nComma separated list of attributes to organize this data in the datalake [default: `year,month,day,timestamp`]\n\n\n\n**Source Location**\n\n\n\nSource Location\n"
},
{
"type": "Theia::Action",
"label": "Semi-structured Data Pipeline",
"id": "semi-structured-pipeline",
"module": "semi-structured-pipeline",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "semi-structured-pipeline",
"datasource": "data?type=metadata&filter_name=module&filter_value=semi-structured-pipeline",
"env_param_required": true,
"columns": [
"name",
"rds_name",
"rds_engine",
"rds_type",
"transform_name",
"transform_job_type",
"timestamp"
],
"title": "Semi-structured Data Pipeline with Transformations",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "semi-structured-pipeline",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Create",
"command": {
"phase": "semi-structured-pipeline",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Data Pipeline Name",
"help": "Enter Data Pipeline Name (no space or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::CompositeModule",
"id": "composite_module",
"modules": [
{
"type": "Theia::Control::Toggle",
"id": "transform_enabled",
"label": "Add Transformation Glue Job for existing Datasets",
"controls": [
{
"type": "Theia::Control::Input",
"id": "transform_name",
"label": "Transformation Name",
"help": "Transformation Name (no spaces or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::MultiSelect",
"id": "transform_base_datasets",
"label": "Base Datasets",
"help": "Select source datasets for this transformation",
"datasource": "formdata?type=dataset|dataset_semi_structured&field=name"
},
{
"type": "Theia::Control::Select",
"id": "transform_job_type",
"label": "Job Type",
"help": "Comma separated names of previously added datasets",
"options": [
{
"type": "Theia::Option",
"label": "Python shell",
"value": "pythonshell"
},
{
"type": "Theia::Option",
"label": "Python Spark",
"value": "glueetl"
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "transform_refresh_spice",
"label": "Refresh results as QuickSight SPICE dataset"
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "rds_enabled",
"label": "Create RDS or Aurora Database",
"controls": [
{
"type": "Theia::Control::Input",
"id": "rds_name",
"label": "Database Name",
"help": "Enter database name (no space or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "rds_engine",
"label": "Database Engine",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "MySQL",
"value": "mysql"
},
{
"type": "Theia::Option",
"label": "PostgreSQL",
"value": "postgres"
}
]
},
{
"type": "Theia::Control::Select",
"id": "rds_type",
"label": "AWS Database Service",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "RDS",
"value": "rds"
},
{
"type": "Theia::Option",
"label": "Aurora",
"value": "aurora"
}
]
},
{
"type": "Theia::Control::Select",
"id": "rds_multi_az",
"label": "Multi Az",
"help": "Multi Az",
"default": "no",
"options": [
{
"type": "Theia::Option",
"label": "Yes",
"value": "yes"
},
{
"type": "Theia::Option",
"label": "No",
"value": "no"
}
]
},
{
"type": "Theia::Control::Input",
"id": "rds_database_name",
"label": "Schema Name",
"help": "Enter schema name (no space or special characters)",
"inputType": "text"
}
]
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 65,
"info": "### Semi-Structured Data Pipeline\n\n\n\nThis is a quickstart for creating end-to-end data pipeline for semi-structured files (e.g. JSON, CSV). It includes CDC (change data capture), transformation and publishing into RDS database (MySQL or Postgres)  \n\n\n"
},
{
"type": "Theia::Action",
"label": "Semi-Structured Data Formatting",
"id": "formats",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "formats",
"datasource": "data?type=format",
"env_param_required": true,
"columns": [
"phase",
"dataset",
"attr",
"attr_type",
"from_format",
"to_format"
],
"title": "Data Formatting",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "format",
"title": "",
"description": "",
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "ingest",
"command": "add-format"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "pipeline_phase",
"label": "Data Pipeline Phase",
"help": "Data formatting is only supported during ingestion",
"options": [
{
"type": "Theia::Option",
"label": "Ingestion",
"value": "ingestion"
}
]
},
{
"type": "Theia::Control::Select",
"id": "dataset",
"label": "Dataset Name",
"help": "",
"datasource": "formdata?type=dataset_semi_structured&field=name"
},
{
"type": "Theia::Control::Input",
"id": "attr",
"label": "Attribute Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "attr_type",
"label": "Attribute Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Date or Datetime",
"value": "date"
},
{
"type": "Theia::Option",
"label": "Amount",
"value": "amount"
},
{
"type": "Theia::Option",
"label": "Full Name",
"value": "fullname"
},
{
"type": "Theia::Option",
"label": "Any",
"value": "any"
}
]
},
{
"type": "Theia::Control::Input",
"id": "from_format",
"label": "Source Format",
"help": "Dates: '%m/%d/%Y' (10/15/2020), '%m/%d/%Y %H:%M' (10/15/2020 13:59); Amount: '$*' ($152.75); Full Name: 'l,f' (Doe, John), 'f l'",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "to_format",
"label": "Target Format",
"help": "Dates: '%Y-%m-%d' (2020-10-15); Amount: '*' (152.75); Full Name: 'split'",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 70,
"info": "### Data Formatting\n\n\n\nSpecify formatting rules at the field level for a dataset \n\n\n\n**Data Pipeline Phase**\n\n\n\nData formatting is currently only supported during ingestion\n\n\n\n**Dataset Name**\n\n\n\nSelect existing dataset \n\n\n\n**Attribute Name**\n\n\n\nEnter attribute name\n\n\n\n**Attribute Type**\n\n\n\nSelect attribute type \n\n\n\n**Source Format**\n\n\n\nSpecify source format using Python format structure\n\n\n\nExamples:\n\n- Dates: '%m/%d/%Y' (10/15/2020), '%m/%d/%Y %H:%M' (10/15/2020 13:59)\n\n- Amount: '$*' ($152.75) \n\n- Full Name: 'l,f' (Doe, John), 'f l'\n\n- Use \"eval\" to instruct RapidCloud to apply \"`target format`\" by evaluating Python statement\n\n\n\n**Target Format**\n\n\n\nSpecify target format using Python format structure\n\n\n\nExamples:\n\n- Dates: '%Y-%m-%d' (2020-10-15)\n\n- Amount: '*' (152.75)\n\n- Full Name: 'split'\n\n- Enter Python statement (e.g `patient_gender[0].upper()`) if \"`source format`\" is `eval`\n"
},
{
"type": "Theia::Action",
"label": "Enable Semi-structured",
"id": "enable_semi_structured",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Form",
"id": "status",
"title": "Enable Semi-structured Datasets",
"description": "Enable all disabled semi-structured datasets and run CDC for initially uploaded files for the first time",
"submit": "Submit",
"commands": [
{
"label": "Submit",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to enable all disabled semi-structured datasets?",
"command": {
"phase": "ingest",
"command": "enable-semi-structured"
}
}
]
}
],
"order": 80
},
{
"type": "Theia::Action",
"label": "Documents & Binary Files",
"id": "unstructured",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "unstructured",
"datasource": "data?type=dataset_unstructured",
"env_param_required": true,
"columns": [
"name",
"type",
"category",
"enable_transform"
],
"title": "Documents & Binary Files",
"description": "Configure ingestion of binary files (e.g. invoices, documents, audio, video, images, etc)",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "data",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Save",
"command": {
"phase": "ingest",
"command": "register-unstructured"
}
},
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Enter Dataset Name with no spaces",
"help": "e.g. invoices, resumes, scanned_hr_forms, security_videos",
"inputType": "text",
"readonly_edit": true
},
{
"type": "Theia::Control::Input",
"id": "type",
"label": "File Type (optional)",
"help": "e.g. document, image, video, audio",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "category",
"label": "Data Category (optional)",
"help": "e.g. financials, legal, products",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "size",
"label": "Approximate Total Initial Size in GiB (optional)",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "count",
"label": "Approximate number of initial files (optional)",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "rate_of_change",
"label": "Rate of Change in GiB/hr (optional)",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "source_location",
"label": "Location in the filesystem (optional)",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "enable_transform",
"label": "Enable custom transformations for this dataset via Glue Job?"
},
{
"type": "Theia::Control::Toggle",
"id": "enable_textract",
"label": "Enable AWS Textract for this data?"
},
{
"type": "Theia::Control::KeyValue",
"id": "textract_fields",
"key_label": "Field Name",
"value_label": "Minimum Confidence Score",
"label": "Fields to be retrieved from the documents by Amazon Textract. Add field name  as it appears on the document and corresponding confidence score threshold.",
"dynamic_datasource": "data?type=metadata&filter_name=module,command,name&filter_value=ingest,register-unstructured,${name}&result=textract_fields",
"add_value_label": "Add Field"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 90,
"info": "### Unstructured Data\n\n\n\nRegister each unique type of unstructured file\n\n\n\n**Enter Dataset Name with no spaces**\n\n\n\nThis uniquely identifes ingested data. For example, if you're ingesting resumes as PDF files, then you can name this dataset `resumes`\n\n\n\n**File Type**\n\n\n\ne.g. document, image, video, audio\n\n\n\n**Data Category (e.g. financials, legal, products)**\n\n\n\nData Category is a convenient way of categorizing your files \n\n\n\n**Total Initial Size (optional)**\n\n\n\nApproximate Total Initial Size (GB)\n\n\n\n**Initial Count (optional)**\n\n\n\nApproximate number of files (if known)\n\n\n\n**Rate of Change**\n\n\n\nRate of Change (GB/hr if known)\n\n\n\n**Location in the filesystem (optional)**\n\n\n\nSource file Location for reference\n\n\n\n**Enable transformations for this dataset**\n\n\n\nThis instructs RapidCloud to automatically trigger transformation or analysis job for this file\n"
},
{
"type": "Theia::Action",
"label": "Upload Files",
"id": "upload_files",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Form",
"id": "data",
"title": "Upload Files to S3",
"description": "",
"submit": "Submit",
"commands": [],
"controls": [
{
"type": "Theia::Control::Select",
"id": "dataset_type",
"label": "Select File Type to upload",
"help": "",
"default": "dataset_unstructured",
"options": [
{
"type": "Theia::Option",
"label": "Binary/Unstructured (e.g. invoices, documents, audio, video, images, etc)",
"value": {
"type": "Theia::DataOption",
"value": "dataset_unstructured",
"enableControls": [
"samples"
]
}
},
{
"type": "Theia::Option",
"label": "Semi-Structured (Json, CSV, Excel, XML)",
"value": {
"type": "Theia::DataOption",
"value": "dataset_semi_structured",
"disableControls": [
"samples"
]
}
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "samples",
"label": "Uploaded files should only be used for learning purposes. This feature is only available for Binary/Unstructured files."
},
{
"type": "Theia::Control::Select",
"id": "dataset",
"label": "Select existing dataset to upload files for. If you don't see a desired dataset, then you must first add it via `Documents & Binary Files` page. Alternatively, select `Unknown` to use RapidCloud document categorization algorithm (this is only applicable for documents). If you use `Unknown`, then you must first upload sample files",
"help": "Select a dataset",
"dynamic_datasource": "formdata?type=${dataset_type}&field=name&default_option=Unknown",
"default": "Unknown"
},
{
"label": "",
"help": "",
"id": "files",
"type": "Theia::Control::Upload",
"multiple": true,
"dynamic_datasource": "formdata_from_aws?type=generate_presigned_url&dataset_type=${dataset_type}&dataset=${dataset}&samples=${samples}",
"new_hide": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 100,
"info": "### Upload Files\n\n\n\nUpload Files to current environment's `*-ingestion` bucket\n\n\n\n**Select File Type to upload**\n\n\n\nRapidCloud supports two general categories of files:\n\n- Binary/Unstructured (e.g. invoices, documents, audio, video, images, etc)\n\n- Semi-Structured (Json, CSV, Excel, XML)\n\n\n\nBinary/Unstructured files get uploaded using `{env}-ingestion/files/*` S3 Object Key Prefix.\n\n\n\nSemi-Structured files get uploaded using `{env}-ingestion/semistructured/*`  S3 Object Key Prefix.\n\n\n\n**Samples Toggle**\n\n\n\nUploaded files should only be used for learning purposes. This feature is only available for Binary/Unstructured files.\n\n\n\nSample files get uploaded using `{env}-ingestion/files/rc-samples/{dataset_type}/*` S3 Object Key Prefix.\n\n\n\n**File Category (aka Dataset Type)**\n\n\n\nSelect existing dataset to upload files for. If you don't see a desired dataset, then you must first add it via `Documents & Binary Files` page. \n\n\n\nFiles get uploaded using `{env}-ingestion/files/{dataset_type}/*` S3 Object Key Prefix.\n\n\n\nAlternatively, select `Unknown` to use RapidCloud document categorization algorithm (this is only applicable for documents). If you use `Unknown`, then you must first upload sample files.\n\n\n\n`Unknown` files get uploaded using `{env}-ingestion/files/rc-any/*` S3 Object Key Prefix.\n"
},
{
"type": "Theia::Action",
"label": "Streaming (Kinesis or Kafka)",
"id": "streams",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "streams",
"datasource": "data?type=stream",
"env_param_required": true,
"columns": [
"name",
"type",
"consumer",
"enabled"
],
"title": "Streams",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "data",
"title": "",
"description": "Kinesis or Managed Kafka streams are consumed by Lambda function or Glue streaming job in realtime",
"submit": "Submit",
"commands": [
{
"label": "Save Event Source",
"command": {
"phase": "ingest",
"command": "register-stream",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Stream Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "type",
"label": "Stream Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Kinesis Data Streams",
"value": "kinesis"
},
{
"type": "Theia::Option",
"label": "Managed Kafka",
"value": "kafka"
}
]
},
{
"type": "Theia::Control::Input",
"id": "event_source_arn",
"label": "Event Source ARN",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "consumer",
"label": "Consumer Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Lambda Function",
"value": {
"type": "Theia::DataOption",
"value": "lambda_function",
"enableControls": [
"memory_size"
]
}
},
{
"type": "Theia::Option",
"label": "Glue Spark Streaming Job",
"value": {
"type": "Theia::DataOption",
"value": "glue_streaming",
"disableControls": [
"memory_size"
]
}
}
]
},
{
"type": "Theia::Control::Input",
"id": "memory_size",
"label": "Memory Size",
"help": "For Lambda function only",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 110,
"info": "### Streaming \n\n\n\nKinesis or Managed Kafka streams are consumed by Lambda functions or Glue streaming jobs in real-time.\n\n\n\n**Stream Name**\n\n\n\nStream Name (no spaces or special characters)\n\n\n\n**Stream Type**\n\n\n\n`Kinesis Data Streams` and `Managed Kafka` are currently supported\n\n\n\n**Event Source ARN**\n\n\n\nAWS ARN for your streaming service\n\n\n\n**Consumer Type**\n\n\n\n`Lambda Function` and `Glue Spark Streaming Job` are currently supported \n\n\n\n**Memory Size**\n\n\n\nIn MB - for Lambda function only (default 128 MB)"
},
{
"type": "Theia::Action",
"label": "Activate Ingestion Pipelines",
"id": "start",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Form",
"id": "status",
"title": "Activate Environment",
"description": "Equivalent of running `kc ingest start` command. <br/><br/>This action performs the following (where applicable) <br/>- (1) generate DMS table mappings <br/>- (2) generate ingestiondb and rawdb catalog tables for relational data <br/>- (3) generate transformation Glue job templates <br/>- (4) activate daily ingestion schedules via DMS <br/>- (5) generate ingestiondb catalog tables for semi-structured data <br/>- (6) deploy generated Glue jobs (this will replace existing Glue scripts)",
"submit": "Activate Environment",
"commands": [
{
"label": "Submit",
"require_confirmation": true,
"confirmation_message": "Are you sure you want activate data ingestion for this environment?",
"command": {
"phase": "ingest",
"command": "start"
}
}
]
}
],
"order": 1000
},
{
"type": "Theia::Action",
"label": "Datasync",
"id": "datasync",
"module": "datasync",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "datasync",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=datasync,create",
"env_param_required": true,
"columns": [
"name",
"timestamp"
],
"title": "Datasync service",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "datasync",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "datasync",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "Enter RC resource name here.",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "agent_name",
"cli_id": "datasync_agent_name",
"label": "Datasync agent name",
"help": "Name of the DataSync Agent.",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "ip_address",
"cli_id": "datasync_ip_address",
"label": "IP address",
"help": "DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with activation_key. DataSync Agent must be accessible on port 80 from where Terraform is running.",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "nfs_location_name",
"cli_id": "datasync_nfs_location_name",
"label": "(Source) NFS location name",
"help": "Specify a name for this nfs location",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "server_hostname",
"cli_id": "datasync_server_hostname",
"label": "(Source) NFS server hostname",
"help": "Specifies the IP address or DNS name of the NFS server.",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "nfs_subdirectory",
"cli_id": "datasync_nfs_subdirectory",
"label": "(Source) NFS server subdirectory",
"help": "(Source) Subdirectory within the NFS server to perform actions as source. Should be exported by the NFS server.",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "s3_bucket_name",
"cli_id": "datasync_s3_bucket_name",
"label": "(Destination) S3 bucket Name",
"help": "S3 Bucket name for the destination.",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=s3,create_bucket&field=name&module_name_arg=datasync"
},
{
"type": "Theia::Control::Input",
"id": "s3_object_prefix",
"cli_id": "datasync_s3_object_prefix",
"label": "(Destination) S3 bucket object prefix",
"help": "(Destination) Prefix to perform actions within the S3 bucket.",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "endpoint_vpc_id",
"cli_id": "datasync_endpoint_vpc_id",
"label": "VPC ID",
"help": "The ID of the VPC in which the vpc endpoint will be used.",
"datasource": "formdata_from_aws?type=vpcs&module_name_arg=datasync"
},
{
"type": "Theia::Control::MultiSelect",
"id": "endpoint_security_group_ids",
"cli_id": "datasync_endpoint_security_group_idss",
"label": "Security groups ids to assign to the vpc endpoint",
"help": "The ID of one or more security groups to associate with the network interface for the vpc endpoint.",
"datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=datasync"
},
{
"type": "Theia::Control::Select",
"id": "endpoint_subnet_ids",
"cli_id": "datasync_endpoint_subnet_ids",
"label": "Subnets Ids to assing to the vpc endpoint.",
"help": "The ID of one or more subnets in which to create a network interface for the vpc endpoint.",
"datasource": "formdata_from_aws?type=subnets&module_name_arg=datasync"
},
{
"type": "Theia::Control::Select",
"id": "agent_security_groups_ids",
"cli_id": "datasync_agent_security_groups_ids",
"label": "Security group id to assing to the datasync agent.",
"help": "The ID of the security group used to protect your data transfer task subnets.",
"datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=datasync"
},
{
"type": "Theia::Control::Select",
"id": "agent_subnet_ids",
"cli_id": "datasync_agent_subnet_ids",
"label": "Subnet id for the datasync agent.",
"help": "The subnet id in which DataSync will create elastic network interfaces for each data transfer task.",
"datasource": "formdata_from_aws?type=subnets&module_name_arg=datasync"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### Datasync service\n\n\n\nDatasync is a service that will help you transfering data from one location to another.\n\n\n\nAt the moment this service will provide you with a datasync agent, vpc endpoint to access datasync service, nfs location (source) and s3 location (destination).\n\n\n\nPrerequites:\n\nDatasync service running in some sort of compute. We recommend you setup your service as close to the source data as possible. See more on how to setup your service [here](https://docs.aws.amazon.com/datasync/latest/userguide/deploy-agents.html).\n\n\n\n**Rapid cloud resource name**\n\nName for the RC resource that will identify this within the RC console.\n\n\n\n**Agent name**\n\nUser friendly name to assign to the Datasync agent.\n\n\n\n**IP address of the agent**\n\nDataSync Agent IP address to retrieve activation key during resource creation. DataSync Agent must be accessible on port 80 from where Rapidcloud is running.\n\n\n\n**Source NFS server hostname**\n\npecifies the IP address or DNS name of the NFS server. The DataSync Agent(s) use this to mount the NFS server.\n\n\n\n**NFS subdirectory**\n\nSubdirectory to perform actions as source or destination. Should be exported by the NFS server.\n\n\n\n**Destination s3 bucket name**\n\nS3 Bucket name to pick as destination.\n\n\n\n**VPC Id**\n\nThe ID of the VPC in which the endpoint will be used.\n\n\n\n**Security groups for the vpc endpoint**\n\nThe ID of one or more security groups to associate with the network interface.\n\n\n\n**Security groups for the Datasync agent**\n\nThe Ids of the security groups used to protect your data transfer task subnets.\n\n\n\n**Subnet ids for the Datasync agent**\n\nThe Ids of the subnets in which DataSync will create elastic network interfaces for each data transfer task.\n"
},
{
"type": "Theia::Action",
"label": "Data transfer task",
"id": "datasync_create_task",
"module": "datasync",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "datasync_task_create",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=datasync,create_task",
"env_param_required": true,
"columns": [
"name",
"timestamp"
],
"title": "Datasync task",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "datasync_task_create",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "datasync",
"command": "create_task",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "RC Name",
"help": "Enter RC Name with no spaces",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "ds_task_name",
"cli_id": "ds_task_name",
"label": "Datasync task name",
"help": "Enter task name with no spaces",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "dst_datasync_name",
"cli_id": "dst_datasync_name",
"label": "Datasync agent and location",
"help": "Select agent and assigned locations",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=datasync,create&field=name&module_name_arg=datasync"
},
{
"type": "Theia::Control::Input",
"id": "dst_exclude_value",
"cli_id": "dst_exclude_value",
"label": "Exclude Pattern",
"help": "Datasync exclude simple pattern. E.g. /folder1|/folder2 or * to exclude all",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "dst_include_value",
"cli_id": "dst_include_value",
"label": "Include Pattern",
"help": "Datasync include simple pattern. E.g. /folder1|/folder2",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "dst_schedule_expression",
"cli_id": "dst_schedule_expression",
"label": "Schedule expression",
"help": "Specifies the schedule you want your task to use for repeated executions.",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### Datasync task\n\n\n\nA Datasync task is what will actually help you accomplish the data transfer.\n\n\n\nFor a task you will have to pick a source and a destination.\n\n\n\n**Rapid cloud resource name**\n\nName for the RC resource that will identify this within the RC console.\n\n\n\n**Task name**\n\nName of the DataSync Task.\n\n\n\n**Location Destination ID**\n\nLocation ID of the destionation for the data transfer.\n\n\n\n**Location Source ID**\n\nLocation ID of the source for the data transfer.\n\n\n\n**Exclude pattern**\n\nA single filter string that consists of the patterns to exclude. The patterns are delimited by \"|\" (that is, a pipe), for example: /folder1|/folder2\n\n\n\n**Include pattern**\n\nA single filter string that consists of the patterns to exclude. The patterns are delimited by \"|\" (that is, a pipe), for example: /folder1|/folder2\n\n\n\n**Schedule expression**\n\nSpecifies a schedule used to periodically transfer files from a source to a destination location. See more on scheduled expressinos [here](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)."
}
]
},
{
"type": "Theia::Section",
"label": "Data Catalog",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/table-solid.svg",
"route": "catalog",
"id": "catalog",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Update Glue Catalogs",
"id": "update_catalogs",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Form",
"id": "update_catalogs",
"title": "Update Glue Catalog via Glue Crawlers",
"description": "This process runs Glue crawler for the selected datalake area",
"submit": "Run Crawlers",
"commands": [
{
"label": "Run Ingestion Crawlers",
"require_confirmation": true,
"confirmation_message": "Are you sure?",
"command": {
"phase": "deploy",
"command": "run-crawlers",
"pipeline_phase": "ingestion"
}
},
{
"label": "Run Raw Crawlers",
"require_confirmation": true,
"confirmation_message": "Are you sure?",
"command": {
"phase": "deploy",
"command": "run-crawlers",
"pipeline_phase": "raw"
}
},
{
"label": "Run Analysis Crawlers",
"require_confirmation": true,
"confirmation_message": "Are you sure?",
"command": {
"phase": "deploy",
"command": "run-crawlers",
"pipeline_phase": "analysis"
}
}
]
}
],
"order": 10
},
{
"type": "Theia::Action",
"label": "Change Data Types",
"id": "post-crawlers",
"module": "ingest",
"steps": [
{
"type": "Theia::Step::Form",
"id": "post-crawlers",
"title": "Change Glue Data Types (ingestion catalog)",
"description": "This process allows bulk change of data types in ingestion catalog after the initial ingestion process completed and catalog generated for the first time. For example, this might be needed when Glue crawler identifies a field as numeric, but it has to be string",
"commands": [
{
"label": "Change data types",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to run this?",
"command": {
"phase": "ingest",
"command": "post-crawlers"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "from-format",
"label": "From Format",
"help": "e.g double, bigint",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "to-format",
"label": "To Format",
"help": "e.g string",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 20
}
]
},
{
"type": "Theia::Section",
"label": "Analytics",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/magnifying-glass-chart-solid.svg",
"route": "transform",
"id": "transform",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Transformations",
"id": "transformations",
"module": "transform",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "transformations",
"datasource": "data?type=transformation",
"env_param_required": true,
"columns": [
"name",
"base_datasets",
"job_type",
"refresh_spice"
],
"title": "Transformations (ETL/ELT)",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "data",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Save",
"command": {
"phase": "transform",
"command": "add-dataset",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Transformation Name",
"help": "Transformation Name (no spaces or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::MultiSelect",
"id": "base_datasets",
"label": "Base Datasets",
"help": "Select source datasets for this transformation",
"datasource": "formdata?type=dataset|dataset_semi_structured&field=name"
},
{
"type": "Theia::Control::Select",
"id": "job_type",
"label": "Job Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Python shell",
"value": "pythonshell"
},
{
"type": "Theia::Option",
"label": "Python Spark",
"value": "glueetl"
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "refresh_spice",
"label": "Refresh results as QuickSight SPICE dataset"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 10,
"info": "### Transformations\n\n\n\nTransformations are `Glue Jobs` to perform batch style data transformations, aggregations, integrations and analytics. RapidCloud generates Glue job templates for you, based on the selected `Job Type`. Transformations use `raw` catalog for input datasets and `analysis` catalog for the results. Transformations are automatically executed as part of you Data Pipeline, and when completed, they optionally trigger data publishing jobs\n\n\n\n**Transformation Name**\n\n\n\nTransformation Name (no spaces or special characters)\n\n\n\n**Base Datasets**\n\n\n\nSelect source datasets from `raw` catalog for this transformation\n\n\n\n**Job Type**\n\n\n\n`Python Shell` and `Python Spark` job types are currently supported\n\n\n\n**Refresh results as QuickSight SPICE dataset**\n\n\n\nIf enabled, transformation job will automatically update QuickSight SPICE Datasets to improve BI reports and dashboards performance when using Amazon QuickSight"
},
{
"type": "Theia::Action",
"label": "Analytics",
"id": "analytics",
"module": "analytics",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "analytics",
"datasource": "data?type=analytics",
"env_param_required": true,
"columns": [
"name",
"runtime"
],
"title": "Analytics",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "analytics",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Save",
"command": {
"phase": "analytics",
"command": "add-service",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Job Name",
"help": "No spaces or special characters (e.g. fraud_detection, customer_recommendations)",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "runtime",
"label": "Runtime execution service",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "AWS EMR - Spark Streaming",
"value": "emr"
},
{
"type": "Theia::Option",
"label": "AWS Glue Streaming",
"value": "glue"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 20,
"info": "### Analytics\n\n\n\nSet up real-time or near real-time analytics. RapidCloud generates job templates for you, based on the selected `Runtime execution service`\n\n\n\n**Job Name**\n\n\n\nJob Name (no spaces or special characters)\n\n\n\n**Runtime execution service**\n\n\n\n`AWS EMR Spark Streaming` and `AWS Glue Streaming` are currently supported\n"
},
{
"type": "Theia::Action",
"label": "Glue Jobs",
"id": "custom_glue_job",
"module": "aws",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "custom_glue_job",
"datasource": "data?type=aws_infra&filter_name=command&filter_value=add-glue-job&field=job_type&field_value=params.command.name",
"env_param_required": true,
"columns": [
"resource_name",
"resource_type",
"job_type",
"command",
"timestamp"
],
"title": "Custom Glue Job",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "aws_infra",
"title": "",
"description": "",
"readonly": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "aws",
"command": "add-glue-job",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": true
},
{
"type": "Theia::Control::Input",
"id": "resource_name",
"cli_arg": "name",
"label": "Glue Job Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "job_type",
"label": "Job Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Python shell",
"value": "pythonshell"
},
{
"type": "Theia::Option",
"label": "Spark",
"value": "glueetl"
},
{
"type": "Theia::Option",
"label": "Spark streaming",
"value": "gluestreaming"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 30,
"info": "### Custom Glue Job\n\n\n\nCreate a custom Glue Job. RapidCloud generates job templates for you, based on the selected `Job Type`\n\n\n\n**Glue Job Name**\n\n\n\nGlue Job Name (no spaces or special characters)\n\n\n\n**Job Type**\n\n\n\n`Python Shell`, `Python Spark` and `Python Spark Streaming` are currently supported\n"
}
]
},
{
"type": "Theia::Section",
"label": "Databases",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/database-solid.svg",
"route": "databases",
"id": "databases",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Redshift",
"id": "redshift",
"module": "redshift",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "redshift",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=redshift,create",
"env_param_required": true,
"columns": [
"module",
"name",
"redshift_node_count",
"redshift_node_type",
"redshift_vpc_id",
"timestamp"
],
"title": "Redshift Cluster",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "redshift",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "redshift",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Redshift Cluster Name",
"help": "Enter cluster name (no spaces, hyphens or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "redshift_node_count",
"label": "Node Count",
"help": "Amount of nodes in the cluster",
"default": 1
},
{
"type": "Theia::Control::Select",
"id": "redshift_node_type",
"label": "Node Type",
"help": "The Cluster Node Type",
"options": [
{
"type": "Theia::Option",
"label": "dc2.large",
"value": {
"type": "Theia::DataOption",
"value": "dc2.large",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "dc2.8xlarge",
"value": {
"type": "Theia::DataOption",
"value": "dc2.8xlarge",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "ra3.xlplus",
"value": {
"type": "Theia::DataOption",
"value": "ra3.xlplus",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "ra3.4xlarge",
"value": {
"type": "Theia::DataOption",
"value": "ra3.4xlarge",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "ra3.16xlarge",
"value": {
"type": "Theia::DataOption",
"value": "ra3.16xlarge",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_vpc_id",
"label": "VPC ID",
"help": "The VPC the cluster is deployed to",
"datasource": "custom/module_redshift_vpcs?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "VPC ID is required"
}
]
},
{
"type": "Theia::Control::MultiSelect",
"id": "redshift_subnet_ids",
"label": "Subnets",
"help": "Select subnet ids to place your Redshift cluster in",
"datasource": "custom/module_redshift_subnets?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "At leasr one subnet is required"
}
]
},
{
"type": "Theia::Control::KeyValue",
"id": "parameters",
"label": "Parameters",
"help": "Parameters you wish to apply to the Redshift cluster",
"dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=redshift,${name}&result=params,parameters",
"add_value_label": "Paramaeters"
},
{
"type": "Theia::Control::KeyValue",
"id": "tags",
"label": "Tags",
"help": "Tags you wish to apply to the Redshift cluster",
"dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=redshift,${name}&result=params,tags",
"add_value_label": "Tags"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"info": "### Redshift Cluster \n\n\n\nCreate Redshift Cluster\n",
"order": 1000
},
{
"type": "Theia::Action",
"label": "Redshift Tables",
"id": "datawarehouse_tables",
"module": "redshift",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "datawarehouse_tables",
"datasource": "data?type=publishing&filter_name=db_type&filter_value=redshift",
"env_param_required": true,
"columns": [
"name",
"db_name",
"primary_key",
"sort_key",
"dist_key",
"dist_style"
],
"title": "Redshift Tables",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "datawarehouse_tables",
"title": "",
"description": "",
"readonly": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "redshift",
"command": "add_table",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "db_name",
"cli_id": "redshift_db_name",
"label": "Database Name",
"help": "Select an already registered database name",
"datasource": "formdata?type=datawarehouse&field=name"
},
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Table Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "primary_key",
"cli_id": "redshift_primary_key",
"label": "Primary Key",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "sort_key",
"cli_id": "redshift_sort_key",
"label": "Sort Key",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "dist_key",
"cli_id": "redshift_dist_key",
"label": "Distribution Key",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "dist_style",
"cli_id": "redshift_dist_style",
"label": "Data Distribution Style",
"help": "Defines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`",
"options": [
{
"type": "Theia::Option",
"label": "AUTO",
"value": "AUTO"
},
{
"type": "Theia::Option",
"label": "EVEN",
"value": "EVEN"
},
{
"type": "Theia::Option",
"label": "KEY",
"value": "KEY"
},
{
"type": "Theia::Option",
"label": "ALL",
"value": "ALL"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"info": "### Redshift Tables \n\n\n\nDefine Redshift Tables\n\n\n\n**Redshift Database Name**\n\n\n\nSelect existing Redshift Cluster\n\n\n\n**Table Name**\n\n\n\nTable Name\n\n\n\n**Primary Key**\n\n\n\nTable Primary Key\n\n\n\n**Sort Keys**\n\n\n\nComma separated sort keys\n\n\n\n**Distribution Key**\n\n\n\nDistribution Key\n\n\n\n**Distribution Style**\n\n\n\nDefines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`\n",
"order": 1000
},
{
"type": "Theia::Action",
"label": "RDS/Aurora",
"id": "rds",
"module": "rds",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "rds",
"datasource": "data?type=metadata&filter_name=module&filter_value=rds",
"env_param_required": true,
"columns": [
"name",
"rds_engine",
"rds_type"
],
"title": "Databases",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "rds",
"title": "",
"description": "",
"submit": "Submit",
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "rds",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Database Name",
"help": "Enter database name (no space or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "rds_engine",
"label": "Database Engine",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "MySQL",
"value": "mysql"
},
{
"type": "Theia::Option",
"label": "PostgreSQL",
"value": "postgres"
}
]
},
{
"type": "Theia::Control::Select",
"id": "rds_type",
"label": "AWS Database Service",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "RDS",
"value": "rds"
},
{
"type": "Theia::Option",
"label": "Aurora",
"value": "aurora"
}
]
},
{
"type": "Theia::Control::Select",
"id": "rds_multi_az",
"label": "Multi Az",
"help": "Multi Az",
"default": "no",
"options": [
{
"type": "Theia::Option",
"label": "Yes",
"value": "yes"
},
{
"type": "Theia::Option",
"label": "No",
"value": "no"
}
]
},
{
"type": "Theia::Control::Input",
"id": "rds_database_name",
"label": "Schema Name",
"help": "Enter schema name (no space or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 50,
"info": "### RDS or Aurora \n\n\n\nCreate RDS or Aurora Database\n\n\n\n**Database Name**\n\n\n\nEnter database name (no spaces or special characters)\n\n\n\n**Database Engine**\n\n\n\nSelect Database Engine. `MySQL` or `PostgreSQL` \n\n\n\n**AWS Database Service**\n\n\n\nSelect Database Service. `RDS` or `Aurora`\n\n\n\n**Multi Az**\n\n\n\nChoose single or multi-AZ cluster\n\n\n\n**Schema Name**\n\n\n\nEnter Schema Name "
},
{
"type": "Theia::Action",
"label": "RDS/Aurora Tables",
"id": "target_database_tables",
"module": "rds",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "target_database_tables",
"datasource": "data?type=publishing&filter_name=db_type&filter_value=aurora,rds",
"env_param_required": true,
"columns": [
"name",
"db_type",
"db_engine",
"db_name",
"primary_key"
],
"title": "Target Database Tables",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "target_database_tables",
"title": "",
"description": "",
"readonly": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "rds",
"command": "add_table",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "db_name",
"label": "Database Name",
"help": "Select an already registered database name",
"datasource": "formdata?type=target_database&field=name&module_name_arg=rds"
},
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Table Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "primary_key",
"label": "Primary Key",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 60,
"info": "### RDS or Aurora\n\n\n\nDefine Database Tables\n\n\n\n**Database Name**\n\n\n\nSelect existing Database Name\n\n\n\n**Table Name**\n\n\n\nTable Name\n\n\n\n**Primary Key**\n\n\n\nTable Primary Key\n"
},
{
"type": "Theia::Action",
"label": "Generate Schemas",
"id": "pre-publish",
"module": "publishing",
"steps": [
{
"type": "Theia::Step::Form",
"id": "pre-publish",
"title": "Generate RDS/Aurora and Redshift Schemas",
"description": "This one-time process includes (where applicable) <br/>- (1) generating schemas for RDS/Aurora databases <br/>- (2) generating schema for Redshift",
"submit": "Run Pre-Publish Process",
"commands": [
{
"label": "Submit",
"require_confirmation": true,
"confirmation_message": "Are you sure?",
"command": {
"phase": "publishing",
"command": "pre-publish"
}
}
]
}
],
"order": 70
},
{
"type": "Theia::Action",
"label": "Redshift Serverless",
"id": "redshift_create_serverless",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "redshift_create_serverless",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=redshift,create_serverless",
"env_param_required": true,
"columns": [
"name",
"timestamp",
"redshift_base_capacity",
"redshift_set_usage_limit",
"redshift_max_capacity"
],
"title": "Redshift Serverless",
"description": "Deploy a Redshift Serverless Cluster",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "redshift_create_serverless",
"title": "Redshift Serverless",
"description": "Deploy a Redshift Serverless Cluster",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "redshift",
"command": "create_serverless",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Name",
"help": "Enter A Namespace name, this will be used for both Namespace and Workgroup",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "redshift_vpc_id",
"label": "VPC ID",
"help": "The VPC the cluster is deployed to",
"datasource": "custom/module_redshift_vpcs?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "VPC ID is required"
}
]
},
{
"type": "Theia::Control::MultiSelect",
"id": "redshift_subnet_ids",
"label": "Subnets",
"help": "Select at least 3 subnet ids in different AZs to place your Redshift serverless in",
"datasource": "custom/module_redshift_subnets?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "3 subnets are required"
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_base_capacity",
"label": "Base Capacity (RPU) ",
"help": "Base Capacity (RPU)",
"default": "32",
"datasource": "custom/module_redshift_rpus?extra=true&module_name_arg=redshift&capacity=32",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "Please select a base capacity"
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_set_usage_limit",
"label": "Usage Limit",
"help": "Select \"Enabled\" to apply a max usage limit to Redshift serverless",
"inputType": "text",
"default": "false",
"options": [
{
"type": "Theia::Option",
"label": "Disabled",
"value": {
"type": "Theia::DataOption",
"value": "false",
"disableControls": [
"redshift_max_capacity",
"redshift_usage_period",
"redshift_usage_type",
"redshift_breach_action"
],
"enableControls": []
}
},
{
"type": "Theia::Option",
"label": "Enabled",
"value": {
"type": "Theia::DataOption",
"value": "true",
"enableControls": [
"redshift_max_capacity",
"redshift_usage_period",
"redshift_usage_type",
"redshift_breach_action"
],
"disableControls": []
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_max_capacity",
"label": "Max Capacity (RPU) ",
"help": "Max Capacity (RPU)",
"default": "512",
"datasource": "custom/module_redshift_rpus?extra=true&module_name_arg=redshift&capacity=512"
},
{
"type": "Theia::Control::Select",
"id": "redshift_usage_period",
"label": "The period to apply the Usage Limit to",
"help": "",
"default": "monthly",
"options": [
{
"type": "Theia::Option",
"label": "monthly",
"value": {
"type": "Theia::DataOption",
"value": "monthly",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "weekly",
"value": {
"type": "Theia::DataOption",
"value": "weekly",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "daily",
"value": {
"type": "Theia::DataOption",
"value": "daily",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_usage_type",
"label": "The type of Redshift Serverless usage to create a usage limit for",
"help": "",
"default": "serverless-compute",
"options": [
{
"type": "Theia::Option",
"label": "serverless-compute",
"value": {
"type": "Theia::DataOption",
"value": "serverless-compute",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "cross-region-datasharing",
"value": {
"type": "Theia::DataOption",
"value": "cross-region-datasharing",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_breach_action",
"label": "The action that Redshift Serverless Cluster takes when the limit is reached",
"help": "",
"default": "log",
"options": [
{
"type": "Theia::Option",
"label": "log",
"value": {
"type": "Theia::DataOption",
"value": "log",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "deactivate",
"value": {
"type": "Theia::DataOption",
"value": "deactivate",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "emit-metric",
"value": {
"type": "Theia::DataOption",
"value": "emit-metric",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::KeyValue",
"id": "tags",
"label": "Tags",
"help": "Tags you wish to apply to the Redshift Serverless cluster",
"dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=redshift,${name}&result=params,tags",
"add_value_label": "Tags"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file",
"order": 1000
},
{
"type": "Theia::Action",
"label": "Load SQL from file",
"id": "redshift_load_sql",
"module": "redshift",
"steps": [
{
"type": "Theia::Step::Form",
"id": "load_sql",
"title": "Upload Files to S3 and Load Into Redshift",
"description": "",
"submit": "Submit",
"commands": [],
"controls": [
{
"type": "Theia::Control::Select",
"id": "file_type",
"label": "Select File Type to upload",
"help": "",
"default": "tables",
"options": [
{
"type": "Theia::Option",
"label": "Create/Modify Tables",
"value": {
"type": "Theia::DataOption",
"value": "tables",
"enableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "Create/Modify Schemas",
"value": {
"type": "Theia::DataOption",
"value": "schemas",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "bucket",
"label": "DB Instance",
"help": "The Redshift Cluster/Serverless you wish to load SQL to",
"datasource": "custom/module_redshift_buckets?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "Redshift Server/Serverless is Required"
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "confirm",
"default": false,
"label": "SQL in the uploaded files will be executed as *root* on your target redshift DB"
},
{
"label": "",
"help": "",
"id": "files",
"type": "Theia::Control::Upload",
"multiple": false,
"dynamic_datasource": "formdata_from_aws?type=generate_presigned_url&dataset_type=code&file_type=${file_type}&confirm=${confirm}&bucket-suffix=${bucket}",
"new_hide": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file",
"order": 1000
}
]
},
{
"type": "Theia::Section",
"label": "Security & Compliance",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/shield-halved-solid.svg",
"route": "compliance",
"id": "compliance",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Amazon Certificate Manager",
"id": "acm",
"module": "acm",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "acm",
"datasource": "data?type=metadata&filter_name=module&filter_value=acm",
"env_param_required": true,
"columns": [
"timestamp",
"acm_cert_domain_name",
"acm_cert_validation_method",
"acm_r53_zone_name"
],
"title": "Amazon Certificate Manager",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "acm",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Register",
"command": {
"phase": "acm",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "acm_cert_domain_name",
"cli_id": "cert_domain_name",
"label": "Certificate Domain Name",
"help": "Domain name for which the certificate should be issued",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "acm_cert_validation_method",
"cli_id": "cert_validation_method",
"label": "Certificate Validation Method",
"default": "DNS",
"options": [
{
"type": "Theia::Option",
"label": "DNS",
"value": "DNS"
},
{
"type": "Theia::Option",
"label": "Email",
"value": "EMAIL"
}
]
},
{
"type": "Theia::Control::Input",
"id": "acm_r53_zone_name",
"cli_id": "r53_zone_name",
"label": "Route53 Zone Name",
"help": "Route 53 Zone Name for Validation",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 10,
"info": "### Amazon Certificate Manager\n\n\n\nAWS Certificate Manager is a service that lets you easily provision, manage, and deploy SSL certificates\n\n\n\n**Certificate Domain Name**\n\n\n\nDomain name for which the certificate should be issued\n\n\n\n**Certificate Validation Method**\n\n\n\nWhich method to use for validation, allowed values are `(DNS | EMAIL)`\n\n\n\n**Route53 Zone Name**\n\n\n\nRoute 53 Zone name to validate against when using DNS validation"
},
{
"type": "Theia::Action",
"label": "WAF",
"id": "waf_create",
"module": "waf",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "waf_create",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=waf,create",
"env_param_required": true,
"columns": [
"name",
"timestamp"
],
"title": "Web Application Firewall",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "waf_create",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "waf",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "Enter RC resource name here.",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "allow_requests_by_default",
"cli_id": "waf_allow_requests_by_default",
"label": "Allow requests by default",
"default": true,
"help": "Would you like requests to be allowed by default?"
},
{
"type": "Theia::Control::Select",
"id": "cf_associated",
"cli_id": "waf_cf_associated",
"label": "Will this WAF be for a Cloudfront distribution?",
"default": "Cloudfront associated",
"options": [
{
"type": "Theia::Option",
"label": "Cloudfront associated",
"value": {
"type": "Theia::DataOption",
"value": true,
"disableControls": [
"waf_associated_apigw_list",
"waf_associated_alb_list"
]
}
},
{
"type": "Theia::Option",
"label": "Other resources",
"value": {
"type": "Theia::DataOption",
"value": false,
"enableControls": [
"waf_associated_apigw_list",
"waf_associated_alb_list"
]
}
}
]
},
{
"type": "Theia::Control::MultiSelect",
"id": "waf_associated_apigw_list",
"cli_id": "waf_associated_apigw_list",
"label": "API Gateways",
"help": "List of API Gateways to associate to this WAF to",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=api,add_lambda_integration&field=api_rest_api_name&module_name_arg=waf"
},
{
"type": "Theia::Control::MultiSelect",
"id": "waf_associated_alb_list",
"cli_id": "waf_associated_alb_list",
"label": "Application load balancers list",
"help": "List of Application load balancers to associate this WAF to",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=lb,create&field=name&module_name_arg=waf"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 100,
"info": "### Web application firewall\n\n\n\nA Web application firewall will allow your application to block certain attacks. The following set of rules apply to your WAF service.\n\n\n\n**Baseline rule groups.** \n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html).\n\n\n\n**Core rule set (CRS) managed rule group**\n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html#aws-managed-rule-groups-baseline-crs).\n\n\n\n**Admin protection managed rule group** \n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html#aws-managed-rule-groups-baseline-admin).\n\n\n\n**Known bad inputs managed rule group**\n\n  See more [here](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-baseline.html#aws-managed-rule-groups-baseline-known-bad-inputs)."
},
{
"type": "Theia::Action",
"label": "PII Rules",
"id": "rules_semi",
"module": "rules",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "rules_semi",
"datasource": "data?type=rule",
"env_param_required": true,
"columns": [
"dataset",
"attr",
"attr_type",
"action"
],
"title": "PII Rules",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "rule",
"title": "",
"description": "",
"readonly": false,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "secure",
"command": "add-rule"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "dataset",
"label": "Dataset Name",
"help": "",
"datasource": "formdata?type=dataset_semi_structured&field=name"
},
{
"type": "Theia::Control::Input",
"id": "attr",
"label": "Attribute Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "attr_type",
"label": "Attribute Type",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "SSN",
"value": "ssn"
},
{
"type": "Theia::Option",
"label": "Full Name",
"value": "fullname"
},
{
"type": "Theia::Option",
"label": "First Name",
"value": "firstname"
},
{
"type": "Theia::Option",
"label": "Last Name",
"value": "lastname"
},
{
"type": "Theia::Option",
"label": "Date of birth",
"value": "dob"
},
{
"type": "Theia::Option",
"label": "ID",
"value": "id"
},
{
"type": "Theia::Option",
"label": "Float (e.g, amount)",
"value": "float"
},
{
"type": "Theia::Option",
"label": "Integer",
"value": "int"
},
{
"type": "Theia::Option",
"label": "String",
"value": "string"
}
]
},
{
"type": "Theia::Control::Select",
"id": "action",
"label": "Action",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Deidentify",
"value": "deidentify"
},
{
"type": "Theia::Option",
"label": "Omit",
"value": "omit"
},
{
"type": "Theia::Option",
"label": "Mask",
"value": "mask"
},
{
"type": "Theia::Option",
"label": "Encrypt",
"value": "encrypt"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 1000,
"info": "### PII Rules\n\n\n\nDefine PII Rules to be automatically applied when processing ingested data, before applying CDC (Change Data Capture) or any other Data Formatting.\n\n\n\n**Dataset Name**\n\n\n\nSelect existing dataset\n\n\n\n**Attribute Name**\n\n\n\nName of the attribite to apply PII rule to\n\n\n\n**Attribute Type**\n\n\n\nChoose one of the following supported attribute types: `{ SSN, Full Name, First Name, Last Name, Date of birth, ID, Float (e.g, amount), Integer, String }`\n\n\n\n**Action**\n\n\n\nChoose one of the following supported actions: `{ Deidentify, Omit, Mask, Encrypt }`\n"
}
]
},
{
"type": "Theia::Section",
"label": "Trend Micro Cloud One",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/trademark-solid.svg",
"route": "trendmicro",
"id": "trendmicro",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Integration Features",
"id": "trendmicro_features",
"module": "trendmicro",
"steps": [
{
"type": "Theia::Step::Form",
"id": "trendmicro_features",
"env_param_required": true,
"title": "RapidCloud / Trend Micro Cloud One Integration",
"description": "<img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - File Storage.png' alt='File Storage Security Flow' width='820'/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - FSS Compare.png' alt='RapidCloud Trend Micro Integration - File Storage Security' width='820'/><br/><br/><br/><br/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - Application Compare.png' alt='RapidCloud Trend Micro Integration - Application Security' width='820'/><br/><br/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - Workload Compare.png' alt='RapidCloud Trend Micro Integration - Workload Security' width='820'/>"
}
],
"order": 10
},
{
"type": "Theia::Action",
"label": "Setup",
"id": "trendmicro_setup",
"module": "trendmicro",
"steps": [
{
"type": "Theia::Step::Form",
"id": "trendmicro_setup",
"datasource": "trendmicro/setup?extra=true",
"env_param_required": true,
"title": "Trend Micro API Key",
"description": "Trend Micro API Key needs to be set up only once, from any of the environments, and it will be used accross all your RapidCloud Environments going forward.",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Save",
"command": {
"phase": "trendmicro",
"command": "setup",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "trendmicro_api_id",
"label": "Trend Micro Cloud One API ID",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_api_key",
"label": "Trend Micro Cloud One API Key",
"help": "API Key is encrypted and saved in Secrets Manager",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_conformity_region",
"label": "CloudOne Region",
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "us-1",
"value": "us-1"
},
{
"type": "Theia::Option",
"label": "in-1",
"value": "in-1"
},
{
"type": "Theia::Option",
"label": "gb-1",
"value": "gb-1"
},
{
"type": "Theia::Option",
"label": "jp-1",
"value": "jp-1"
},
{
"type": "Theia::Option",
"label": "de-1",
"value": "de-1"
},
{
"type": "Theia::Option",
"label": "au-1",
"value": "au-1"
},
{
"type": "Theia::Option",
"label": "ca-1",
"value": "ca-1"
},
{
"type": "Theia::Option",
"label": "sg-1",
"value": "sg-1"
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "trendmicro_enable_filestorage_security",
"label": "Enable Trend Micro File Storage Security for this environment. When enabled, an `Enable Trend Micro File Storage Security` toggle will appear on `Storage -> S3` page."
},
{
"type": "Theia::Control::Toggle",
"id": "trendmicro_enable_workload_security",
"label": "Enable Trend Micro Workload Security for this environment. When enabled, an `Enable Trend Micro Workload Security` toggle and `Workload Group` drop-down will appear on `Compute -> Managed EC2 Instances | Unmanaged EC2 Instances | EC2 Launch Templates` pages."
},
{
"type": "Theia::Control::Toggle",
"id": "trendmicro_enable_application_security",
"label": "Enable Trend Micro Application Security for this environment. When enabled, an `Enable Trend Micro Application Security` toggle and `Application Security Group` drop-down will appear on `Compute -> Lambda Functions` page."
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 20,
"info": "### Trend Micro API Key\n\n\n"
},
{
"type": "Theia::Action",
"label": "File Storage Security Stacks",
"id": "trendmicro_file_storage",
"module": "trendmicro",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "trendmicro_file_storage",
"datasource": "trendmicro/fss/stacks?test=test",
"env_param_required": true,
"columns": [
"trendmicro_stack_type",
"trendmicro_bucket",
"tm_fss_stackID",
"tm_fss_status",
"timestamp"
],
"title": "File Storage Security",
"allowMarkdown": true,
"description": "<b>Trend Micro Cloud One - File Storage Security Stacks</b><br/>Automatically scan ingested data and integrate with your data pipelines<br/><a href='https://cloudone.trendmicro.com/filestorage/deployment' target='_blank'>Open Scan Activity Console</a>\n\n\n",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "trendmicro_file_storage",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this stack? This will delete CloudFormation Stack in your AWS account and corresponding File Storage Security stack in your Trend Micro Cloud One account.",
"command": {
"phase": "trendmicro",
"command": "filestorage_delete_stack",
"refresh_status": true
},
"new_hide": true
},
{
"label": "Submit",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to create or update File Storage Security Stack?",
"command": {
"phase": "trendmicro",
"command": "filestorage_create_stack",
"refresh_status": true
},
"editable_hide": true
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"cli_arg": "trendmicro_fqn",
"inputType": "text",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_stack_type",
"label": "Stack Type",
"help": "Trend Micro Cloud One File Storage Security Stack Type [all-in-one|scanner|storage]",
"options": [
{
"type": "Theia::Option",
"label": "All-In-One",
"value": {
"type": "Theia::DataOption",
"value": "all-in-one",
"enableControls": [
"trendmicro_bucket"
]
}
},
{
"type": "Theia::Option",
"label": "Scanner",
"value": {
"type": "Theia::DataOption",
"value": "scanner",
"disableControls": [
"trendmicro_bucket"
]
}
},
{
"type": "Theia::Option",
"label": "Storage",
"value": {
"type": "Theia::DataOption",
"value": "storage",
"enableControls": [
"trendmicro_bucket"
]
}
}
]
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_bucket",
"label": "S3 Bucket Name",
"help": "Bucket Name (Storage Stack only)",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cf_stack_name",
"cli_arg": "ignored",
"label": "CloudFormation Stack Name",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_role_arn",
"cli_arg": "ignored",
"label": "Stack Management Role ARN",
"help": "Stack Management Role ARN is provided to Trend Micro automatically by RapidCloud upon creation of this stack",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "tm_fss_stackID",
"cli_arg": "ignored",
"label": "Trend Micro Cloud One - File Storage Security Stack ID",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "tm_fss_account",
"cli_arg": "ignored",
"label": "Trend Micro Cloud One - File Storage Security Account",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "tm_fss_region",
"cli_arg": "ignored",
"label": "Trend Micro Cloud One - File Storage Security Region",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "tm_fss_updated",
"cli_arg": "ignored",
"label": "Trend Micro Cloud One - File Storage Security Stack Updated Timestamp",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "tm_fss_name",
"cli_arg": "ignored",
"label": "Trend Micro Cloud One - File Storage Security Stack Name",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 30,
"info": "### Trend Micro Cloud One - File Storage Security\n\n\n\n**One-click Deployment**\n\n\n\nProvides one-click deployment of Trend Micro Cloud Once File Storage Security into your environment, to automatically scan ingested data and integrate with your data pipelines.\n\n\n\n**Files never leave your storage**\n\n\n\nWith the scanner deployed in your AWS account, the files being scanned never leave your environment, perfect for organizations with data sovereignty or compliance obligations.\n\n\n\n**Unlimited file types and sizes**\n\n\n\nThe serverless solution gives tremendous flexibility on performance without maintaining traditional scanning machines. It can scan all file types and sizes.\n\n\n\n**Ransomware protection**\n\n\n\nRansomware targets businesses of any size, crippling your organization if no backups are available. Enable scanning before downloading the file to prevent ransomware from entering your environment.\n\n\n\n**Quarantine malicious files**\n\n\n\nAny detected malicious object will be quarantined into a separate S3 bucket to ensure that only known good files are allowed in your downstream workflow.\n\n\n\n**Always scan with the latest patterns**\n\n\n\nThe latest patterns are daily pushed to the scanners, ensuring that the security of the data in your cloud storage is always protected using the most up-to-date pattern."
},
{
"type": "Theia::Action",
"label": "Workload Security Groups",
"id": "trendmicro_workload_create_group",
"module": "trendmicro",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "trendmicro_workload_create_group",
"datasource": "trendmicro/workload/groups?test=test",
"env_param_required": true,
"columns": [
"name",
"trendmicro_description",
"trendmicro_policy",
"timestamp"
],
"title": "Trend Micro Workload Security Groups",
"allowMarkdown": true,
"description": "<b>Trend Micro Cloud One - Workload Security Groups</b><br/>Protect your **Linux EC2 Instances**. (_Windows coming soon_)<br/><a href='https://cloudone.trendmicro.com/workload/Application.screen?#computers_root' target='_blank'>Open Workload Security Console</a>\n\n\n",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "trendmicro_workload_create_group",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Create",
"command": {
"phase": "trendmicro",
"command": "workload_create_group",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Name",
"help": "Group Name will be automatically prefixed with environment name",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_description",
"label": "Description",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_policy",
"label": "Policy",
"datasource": "trendmicro/workload/policies?col=name&module_name_arg=trendmicro",
"help": "RapidCloud currently only supports Linux EC2 Instances"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 40,
"info": "### Workload Security Groups\n\n\n\nCreating EC2 (computer) groups is useful from an organizational point of view and it speeds up the process of applying and managing policies."
},
{
"type": "Theia::Action",
"label": "Application Security Groups",
"id": "trendmicro_application_create_group",
"module": "trendmicro",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "trendmicro_file_storage",
"datasource": "trendmicro/as/groups?test=test",
"env_param_required": true,
"columns": [
"tm_as_name",
"tm_as_group_id",
"tm_as_activated_on"
],
"title": "Application Security Groups",
"allowMarkdown": true,
"description": "<b>Trend Micro Cloud One - Application Security Groups</b><br/>Protect your **Python Lambda Fucntions**. (_More runtimes are coming soon_)<br/><a href='https://cloudone.trendmicro.com/application#/policies' target='_blank'>Open Application Security Console</a>\n\n\n"
},
{
"type": "Theia::Step::Form",
"id": "trendmicro_application_create_group",
"title": "",
"description": "",
"env_param_required": true,
"submit": "Submit",
"commands": [
{
"label": "Save Group Settings",
"command": {
"phase": "trendmicro",
"command": "application_create_group"
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Group Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "tm_as_group_id",
"label": "Group ID",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "tm_as_activated_on",
"label": "Activated On",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_credential_stuffing",
"label": "Credential Stuffing Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_file_access",
"label": "Illegal File Access Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_ip_protection",
"label": "IP Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_malicious_file_upload",
"label": "Malicious File Upload Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_malicious_payload",
"label": "Malicious Payload Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_rce",
"label": "Remote Command Execution Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_redirect",
"label": "Redirect Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Select",
"id": "trendmicro_sqli",
"label": "SQL Injection Protection Policy",
"default": "disable",
"options": [
{
"type": "Theia::Option",
"label": "Disable",
"value": "disable"
},
{
"type": "Theia::Option",
"label": "Mitigate",
"value": "mitigate"
},
{
"type": "Theia::Option",
"label": "Report",
"value": "report"
}
]
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_group_secret",
"label": "Group Secret (this is Secrets Manager Secret name, not actual secret)",
"help": "Group Secret is encrypted and saved in Secretes Manager",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 50,
"info": "### Trend Micro Cloud One â Application Security\n\n\n\n**Application Security Groups**\n\n\n\nAn application security group is a collection of Lambda Functions sharing a common set of policies."
},
{
"type": "Theia::Action",
"label": "Enable Conformity",
"id": "trendmicro_conformity_enable",
"module": "trendmicro",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "trendmicro_conformity_enable",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=trendmicro,conformity_enable",
"env_param_required": true,
"columns": [
"name",
"trendmicro_conformity_environment",
"timestamp"
],
"title": "Enable Conformity",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "trendmicro_conformity_enable",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Enable",
"command": {
"phase": "trendmicro",
"command": "conformity_enable",
"refresh_status": true
}
},
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "trendmicro_account_name",
"label": "AWS Account Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_conformity_environment",
"label": "Conformity Environment",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_conformity_tags",
"label": "Tags",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### Trend Micro Cloud One - Conformity\n\n\n\nTrend Micro Conformity highlights violations of AWS and Azure best practices, delivering over 750 different checks across all key areas â security, reliability, cost optimisation, performance efficiency, operational excellence in one easy-to-use package.\n\n\n\n**Account Name**\n\n\n\nThe name of your account\n\n\n\n**Environment**\n\n\n\nThe environment for your account\n\n\n\n**Tags**\n\n\n\nTags to add to your account. You can use groups to group accounts together based on tags."
},
{
"type": "Theia::Action",
"label": "Create Conformity Group",
"id": "trendmicro_conformity_create_group",
"module": "trendmicro",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "trendmicro_conformity_create_group",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=trendmicro,conformity_create_group",
"env_param_required": true,
"columns": [
"name",
"timestamp"
],
"title": "Create Conformity Group",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "trendmicro_conformity_create_group",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Create",
"command": {
"phase": "trendmicro",
"command": "conformity_create_group",
"refresh_status": true
}
},
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Group Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "trendmicro_conformity_tags",
"label": "Tags",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000
}
]
},
{
"type": "Theia::Section",
"label": "Content Delivery",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/road-solid.svg",
"route": "networking",
"id": "networking",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Cloudfront Distribution",
"id": "cloudfront",
"module": "cloudfront",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "cloudfront",
"datasource": "data?type=metadata&filter_name=module&filter_value=cloudfront",
"env_param_required": true,
"columns": [
"name",
"timestamp",
"cloudfront_bucket_name",
"cloudfront_bucket_regional_domain_name",
"cloudfront_origin_id"
],
"title": "Cloudfront Distributions",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "cloudfront",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Register",
"command": {
"phase": "cloudfront",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "cloudfront_bucket_name",
"cli_id": "bucket_name",
"label": "Bucket Name",
"help": "Bucket that CloudFront will route requests to",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=s3,create_bucket&field=name&module_name_arg=cloudfront"
},
{
"type": "Theia::Control::Input",
"id": "cloudfront_origin_id",
"cli_id": "origin_id",
"label": "Origin ID",
"help": "A unique identifier for the origin",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "waf_name",
"cli_id": "waf_name",
"label": "WAF Name",
"help": "WAF to protect this distribution",
"datasource": "formdata?type=metadata&filter_name=module,command,cf_associated&filter_value=waf,create,True&field=name&module_name_arg=cloudfront"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 20,
"info": "### Cloudfront Distribution\n\n\n\nAmazon CloudFront is a web service that speeds up distribution of your static/dynamic web content and image files to your users\n\n\n\n**Bucket Name**\n\n\n\nThe S3 bucket that you want CloudFront to route requests to when a request matches the path pattern for the default cache behavior\n\n\n\n**DNS Name**\n\n\n\nThe DNS domain name of either the S3 bucket, or web site of your custom origin\n\n\n\n**Origin ID**\n\n\n\nA unique identifier for your origin"
},
{
"type": "Theia::Action",
"label": "REST APIs",
"id": "api_create",
"module": "api",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "api_create",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=api,create",
"env_param_required": true,
"columns": [
"name",
"api_disable_execute_api_endpoint",
"api_endpoint_type",
"timestamp"
],
"title": "REST APIs",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "api_create",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Create",
"command": {
"phase": "api",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "api_disable_execute_api_endpoint",
"cli_id": "disable_execute_api_endpoint",
"label": "Disable Default Endpoint?",
"help": ""
},
{
"type": "Theia::Control::Select",
"id": "api_endpoint_type",
"cli_id": "endpoint_type",
"label": "Endpoint Type",
"options": [
{
"type": "Theia::Option",
"label": "EDGE",
"value": "EDGE"
},
{
"type": "Theia::Option",
"label": "REGIONAL",
"value": "REGIONAL"
},
{
"type": "Theia::Option",
"label": "PRIVATE",
"value": "PRIVATE"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### API Create\n\n\n\n**Name**\n\n\n\nName of your API\n\n\n\n**Disable Execute API Endpoint**\n\n\n\nDisable the default API Gateway endpoint, defaults to false\n\n\n\n**Endpoint Type**\n\n\n\nRefers to the hostname of the API and can be edge-optimized, regional, or private, depending on where the majority of your API traffic originates from. See more information [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-endpoint-types.html).\n"
},
{
"type": "Theia::Action",
"label": "API Lambda Integrations",
"id": "api_add_lambda_integration",
"module": "api",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "api_add_lambda_integration",
"datasource": "data?type=metadata&filter_name=command&filter_value=add_lambda_integration",
"env_param_required": true,
"columns": [
"name",
"api_http_method",
"api_rest_api_name",
"api_parent_resource_name",
"timestamp"
],
"title": "API Lambda Integrations",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "api_add_lambda_integration",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "api",
"command": "remove_lambda_integration"
},
"new_hide": true
},
{
"label": "Save",
"command": {
"phase": "api",
"command": "add_lambda_integration",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Resource Name",
"help": "creates new API resource if it does not exist",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "api_parent_resource_name",
"cli_id": "parent_resource_name",
"label": "Parent Resource Name",
"default": "root",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "api_rest_api_name",
"cli_id": "rest_api_name",
"label": "REST API",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=api,create&field=name&module_name_arg=api"
},
{
"type": "Theia::Control::Select",
"id": "api_http_method",
"cli_id": "http_method",
"label": "HTTP Method",
"options": [
{
"type": "Theia::Option",
"label": "GET",
"value": "GET"
},
{
"type": "Theia::Option",
"label": "POST",
"value": "POST"
},
{
"type": "Theia::Option",
"label": "PUT",
"value": "PUT"
},
{
"type": "Theia::Option",
"label": "PATCH",
"value": "PATCH"
},
{
"type": "Theia::Option",
"label": "DELETE",
"value": "DELETE"
},
{
"type": "Theia::Option",
"label": "HEAD",
"value": "HEAD"
},
{
"type": "Theia::Option",
"label": "OPTIONS",
"value": "OPTIONS"
},
{
"type": "Theia::Option",
"label": "ANY",
"value": "ANY"
}
]
},
{
"type": "Theia::Control::Select",
"id": "api_lambda_name",
"cli_id": "lambda_name",
"label": "Lambda Integration",
"datasource": "formdata?type=metadata&filter_name=module&filter_value=lambda&field=name&module_name_arg=api"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### API Add Lambda Integration\n\n\n\n**Name**\n\n\n\nAPI Resource Name to create integration for\n\n\n\n**Parent Resource Name**\n\n\n\nIf this is a subresource, specify the name of its parent resource here. If not, leave the default of 'root'\n\n\n\n**Rest API Name**\n\n\n\nName of the REST API that this integration belongs to\n\n\n\n**HTTP Method**\n\n\n\nThe HTTP method for this integration\n\n\n\n**Lambda Name**\n\n\n\nName of the lambda function to handle this integration\n"
},
{
"type": "Theia::Action",
"label": "Load Balancers",
"id": "lb_create",
"module": "lb",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "lb",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=lb,create",
"env_param_required": true,
"columns": [
"name",
"lb_is_internal",
"lb_type",
"lb_subnets",
"lb_security_group_ids",
"timestamp"
],
"title": "Load Balancers",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "lb",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "lb",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "Load Balancer Name. Up to 26 characters.",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "lb_is_internal",
"cli_id": "is_internal",
"label": "Internal?",
"help": ""
},
{
"type": "Theia::Control::Select",
"id": "lb_type",
"cli_id": "type",
"label": "Load Balancer Type",
"help": "",
"default": "application",
"options": [
{
"type": "Theia::Option",
"label": "Application",
"value": "application"
},
{
"type": "Theia::Option",
"label": "Network",
"value": "network"
}
]
},
{
"type": "Theia::Control::MultiSelect",
"id": "lb_subnets",
"cli_id": "subnets",
"label": "Subnets",
"help": "",
"datasource": "formdata_from_aws?type=subnets&module_name_arg=lb"
},
{
"type": "Theia::Control::MultiSelect",
"id": "lb_security_group_ids",
"label": "Security Group Ids",
"help": "",
"datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=lb"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### Elastic Load Balancer\n\n\n\nElastic Load Balancing automatically distributes incoming application traffic across multiple targets and virtual appliances in one or more Availability Zones.\n\n\n\n**Name**\n\n\n\nThe name of your load balancer.\n\n\n\n**Is Internal**\n\n\n\nSpecifies whether your load balancer should be internet-facing.\n\n\n\n**Type**\n\n\n\nAllowed values are `(application | network)`, defaults to `application`.\n\n\n\n**Subnets**\n\n\n\nA comma-separated list of subnet IDs to attach to the LB.\n"
},
{
"type": "Theia::Action",
"label": "LB Listeners",
"id": "lb_add_listener",
"module": "lb",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "lb_add_listener",
"datasource": "data?type=metadata&filter_name=command&filter_value=add_listener",
"env_param_required": true,
"columns": [
"name",
"lb_load_balancer_name",
"lb_port",
"lb_protocol",
"lb_target_group_name",
"lb_alpn_policy",
"lb_ssl_policy",
"lb_certificate_arn",
"timestamp"
],
"title": "LB Listeners",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "lb_add_listener",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Save",
"command": {
"phase": "lb",
"command": "add_listener",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "lb_load_balancer_name",
"cli_id": "load_balancer_name",
"label": "Load Balancer",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=lb,create&field=name&module_name_arg=lb"
},
{
"type": "Theia::Control::Input",
"id": "lb_port",
"cli_id": "port",
"label": "Port",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "lb_protocol",
"cli_id": "protocol",
"label": "Protocol",
"options": [
{
"type": "Theia::Option",
"label": "HTTP",
"value": {
"type": "Theia::DataOption",
"value": "HTTP",
"disableControls": [
"lb_alpn_policy",
"lb_ssl_policy",
"lb_certificate_arn"
]
}
},
{
"type": "Theia::Option",
"label": "HTTPS",
"value": {
"type": "Theia::DataOption",
"value": "HTTPS",
"disableControls": [
"lb_alpn_policy"
],
"enableControls": [
"lb_certificate_arn",
"lb_ssl_policy"
]
}
},
{
"type": "Theia::Option",
"label": "TLS",
"value": {
"type": "Theia::DataOption",
"value": "TLS",
"enableControls": [
"lb_alpn_policy",
"lb_ssl_policy"
]
}
},
{
"type": "Theia::Option",
"label": "TCP",
"value": {
"type": "Theia::DataOption",
"value": "TCP",
"disableControls": [
"lb_alpn_policy",
"lb_ssl_policy",
"lb_certificate_arn"
]
}
},
{
"type": "Theia::Option",
"label": "TCP_UDP",
"value": {
"type": "Theia::DataOption",
"value": "TCP_UDP",
"disableControls": [
"lb_alpn_policy",
"lb_ssl_policy",
"lb_certificate_arn"
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "lb_target_group_name",
"cli_id": "target_group_name",
"label": "Target Group",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=lb,create_target_group&field=name&module_name_arg=lb"
},
{
"type": "Theia::Control::Select",
"id": "lb_alpn_policy",
"cli_id": "alpn_policy",
"label": "ALPN Policy",
"help": "Protocol TLS Only",
"options": [
{
"type": "Theia::Option",
"label": "HTTP1Only",
"value": "HTTP1Only"
},
{
"type": "Theia::Option",
"label": "HTTP2Only",
"value": "HTTP2Only"
},
{
"type": "Theia::Option",
"label": "HTTP2Optional",
"value": "HTTP2Optional"
},
{
"type": "Theia::Option",
"label": "HTTP2Preferred",
"value": "HTTP2Preferred"
},
{
"type": "Theia::Option",
"label": "None",
"value": "None"
}
]
},
{
"type": "Theia::Control::Input",
"id": "lb_ssl_policy",
"cli_id": "ssl_policy",
"label": "SSL Policy",
"help": "Protocol TLS/HTTPS Only",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "lb_certificate_arn",
"cli_id": "certificate_arn",
"label": "Certificate ARN",
"help": "Protocol TLS/HTTPS Only",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### LB Listeners\n\n\n\n**Name**\n\n\n\nName of the listener\n\n\n\n**Load Balancer Name**\n\n\n\nName of the load balancer in RC\n\n\n\n**Port**\n\n\n\nPort on which the load balancer is listening\n\n\n\n**Protocol**\n\n\n\nProtocol for connections from clients to the load balancer\n\n\n\n**Target Group Name**\n\n\n\nName of target group in RC to route traffic to\n\n\n\n**ALPN Policy**\n\n\n\nName of the Application-Layer Protocol Negotiation (ALPN) policy (valid for TLS protocol only)\n\n\n\n**SSL Policy**\n\n\n\nName of the SSL Policy for the listener, required for protocols TLS/HTTPS\n\n\n\n**Certificate ARN**\n\n\n\nARN of the default SSL server certificate, required if protocol is HTTPS"
},
{
"type": "Theia::Action",
"label": "LB Target Groups",
"id": "lb_create_target_group",
"module": "lb",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "lb_create_target_group",
"datasource": "data?type=metadata&filter_name=command&filter_value=create_target_group",
"env_param_required": true,
"columns": [
"name",
"lb_port",
"lb_protocol",
"lb_target_type",
"lb_vpc_id",
"lb_load_balancer_type",
"lb_load_balancing_algorithm_type",
"lb_preserve_client_ip",
"lb_ip_address_type",
"lb_protocol_version",
"lb_targets",
"timestamp"
],
"title": "LB Target Groups",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "lb_create_target_group",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Save",
"command": {
"phase": "lb",
"command": "create_target_group",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "lb_port",
"cli_id": "port",
"label": "Port",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "lb_protocol",
"cli_id": "protocol",
"label": "Protocol",
"options": [
{
"type": "Theia::Option",
"label": "HTTP",
"value": {
"type": "Theia::DataOption",
"value": "HTTP",
"enableControls": [
"lb_protocol_version"
]
}
},
{
"type": "Theia::Option",
"label": "HTTPS",
"value": {
"type": "Theia::DataOption",
"value": "HTTPS",
"enableControls": [
"lb_protocol_version"
]
}
},
{
"type": "Theia::Option",
"label": "TLS",
"value": {
"type": "Theia::DataOption",
"value": "TLS",
"disableControls": [
"lb_protocol_version"
]
}
},
{
"type": "Theia::Option",
"label": "TCP",
"value": {
"type": "Theia::DataOption",
"value": "TCP",
"disableControls": [
"lb_protocol_version"
]
}
},
{
"type": "Theia::Option",
"label": "TCP_UDP",
"value": {
"type": "Theia::DataOption",
"value": "TCP_UDP",
"disableControls": [
"lb_protocol_version"
]
}
},
{
"type": "Theia::Option",
"label": "GENEVE",
"value": {
"type": "Theia::DataOption",
"value": "GENEVE",
"disableControls": [
"lb_protocol_version"
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "lb_target_type",
"cli_id": "target_type",
"label": "Target Type",
"options": [
{
"type": "Theia::Option",
"label": "Instance",
"value": {
"type": "Theia::DataOption",
"value": "instance",
"disableControls": [
"lb_ip_address_type",
"lb_ip_targets"
],
"enableControls": [
"lb_ec2_targets"
]
}
},
{
"type": "Theia::Option",
"label": "IP",
"value": {
"type": "Theia::DataOption",
"value": "ip",
"enableControls": [
"lb_ip_address_type",
"lb_ip_targets"
],
"disableControls": [
"lb_ec2_targets"
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "lb_vpc_id",
"cli_id": "vpc_id",
"label": "VPC ID",
"help": "",
"datasource": "formdata_from_aws?type=vpcs&module_name_arg=lb"
},
{
"type": "Theia::Control::Select",
"id": "lb_load_balancer_type",
"cli_id": "load_balancer_type",
"label": "LB Type",
"options": [
{
"type": "Theia::Option",
"label": "ALB",
"value": {
"type": "Theia::DataOption",
"value": "alb",
"disableControls": [
"lb_preserve_client_ip"
],
"enableControls": [
"lb_load_balancing_algorithm_type"
]
}
},
{
"type": "Theia::Option",
"label": "NLB",
"value": {
"type": "Theia::DataOption",
"value": "nlb",
"disableControls": [
"lb_load_balancing_algorithm_type"
],
"enableControls": [
"lb_preserve_client_ip"
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "lb_load_balancing_algorithm_type",
"cli_id": "load_balancing_algorithm_type",
"label": "LB Algorithm Type",
"help": "ALB Only",
"options": [
{
"type": "Theia::Option",
"label": "Round Robin",
"value": "round_robin"
},
{
"type": "Theia::Option",
"label": "Least Outstanding Requests",
"value": "least_outstanding_requests"
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "lb_preserve_client_ip",
"cli_id": "preserve_client_ip",
"label": "Preserve Client IP?",
"help": "NLB Only"
},
{
"type": "Theia::Control::Select",
"id": "lb_ip_address_type",
"cli_id": "ip_address_type",
"label": "IP Address Type",
"help": "Target Type IP Only",
"options": [
{
"type": "Theia::Option",
"label": "IPV4",
"value": "ipv4"
},
{
"type": "Theia::Option",
"label": "IPV6",
"value": "ipv6"
}
]
},
{
"type": "Theia::Control::Select",
"id": "lb_protocol_version",
"cli_id": "protocol_version",
"label": "Protocol Version",
"help": "Protocol HTTP/HTTPS Only",
"options": [
{
"type": "Theia::Option",
"label": "HTTP/1.1",
"value": "HTTP1"
},
{
"type": "Theia::Option",
"label": "HTTP/2",
"value": "HTTP2"
},
{
"type": "Theia::Option",
"label": "gRPC",
"value": "GRPC"
}
]
},
{
"type": "Theia::Control::Input",
"id": "lb_ip_targets",
"cli_id": "ip_targets",
"label": "IP Targets",
"help": "Comma-separated list of IPs",
"inputType": "text"
},
{
"type": "Theia::Control::MultiSelect",
"id": "lb_ec2_targets",
"cli_id": "ec2_targets",
"label": "EC2 Targets",
"help": "",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=ec2,create&field=name&module_name_arg=lb"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### LB Target Groups\n\n\n\n**Name**\n\n\n\nName of the target group\n\n\n\n**Port**\n\n\n\nPort on which targets receive traffic\n\n\n\n**Protocol**\n\n\n\nProtocol to use for routing traffic to the targets\n\n\n\n**Target Type**\n\n\n\nTarget Type for the group (instance|ip)\n\n\n\n**VPC ID**\n\n\n\nIdentifier of the VPC in which to create the target group\n\n\n\n**Load Balancer Type**\n\n\n\nLoad Balancer Type to be used with target group (ALB|NLB)\n\n\n\n**Load Balancing Algorithm Type**\n\n\n\nValid only for ALB (round_robin|least_outstanding_requests)\n\n\n\n**Preserve Client IP**\n\n\n\nWhether client IP preservation is enabled, valid only for NLB. See more information [here](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#client-ip-preservation)\n\n\n\n**IP Address Type**\n\n\n\nValid only for IP target type (IPV4|IPV6)\n\n\n\n**Protocol Version**\n\n\n\nValid only when protocol is HTTP/HTTPS (gRPC|HTTP1|HTTP2)\n\n\n\n**IP Targets**\n\n\n\nComma-separated list of IPs\n\n\n\n**EC2 Targets**\n\n\n\nEC2 instances to attach to the target group"
},
{
"type": "Theia::Action",
"label": "Route 53 Records",
"id": "route53_add_record",
"module": "route53",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "route53",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=route53,add_record",
"env_param_required": true,
"columns": [
"route53_record_name",
"timestamp",
"route53_record_type",
"route53_zone_id",
"route53_ttl",
"route53_record_list"
],
"title": "Route 53 records",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "route53",
"title": "Add record",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Add Record",
"command": {
"phase": "route53",
"command": "add_record",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "route53_record_name",
"cli_id": "record_name",
"label": "Record Name",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "route53_record_type",
"cli_id": "record_type",
"label": "Record Type",
"help": "Valid values are: A",
"default": "A",
"inputType": "text",
"options": [
{
"type": "Theia::Option",
"label": "A (non-alias)",
"value": {
"type": "Theia::DataOption",
"value": "A",
"disableControls": [
"alias_name",
"alias_zone_id",
"evaluate_target_health",
""
],
"enableControls": [
"route53_record_list"
]
}
},
{
"type": "Theia::Option",
"label": "A (alias)",
"value": {
"type": "Theia::DataOption",
"value": "a-alias",
"enableControls": [
"alias_name",
"alias_zone_id",
"evaluate_target_health",
"alias_name"
],
"disableControls": [
"route53_record_list"
]
}
},
{
"type": "Theia::Option",
"label": "NS",
"value": {
"type": "Theia::DataOption",
"value": "NS",
"disableControls": [
"alias_name",
"alias_zone_id",
"evaluate_target_health"
],
"enableControls": [
"route53_record_list"
]
}
},
{
"type": "Theia::Option",
"label": "CNAME",
"value": {
"type": "Theia::DataOption",
"value": "CNAME",
"disableControls": [
"alias_name",
"alias_zone_id",
"evaluate_target_health"
],
"enableControls": [
"route53_record_list"
]
}
},
{
"type": "Theia::Option",
"label": "CNAME (alias)",
"value": {
"type": "Theia::DataOption",
"value": "cname-alias",
"enableControls": [
"alias_name",
"alias_zone_id",
"evaluate_target_health",
"alias_name"
],
"disableControls": [
"route53_record_list"
]
}
},
{
"type": "Theia::Option",
"label": "TXT",
"value": {
"type": "Theia::DataOption",
"value": "TXT",
"disableControls": [
"alias_name",
"alias_zone_id",
"evaluate_target_health"
],
"enableControls": [
"route53_record_list"
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "route53_zone_id",
"cli_id": "zone_id",
"label": "Hosted zone name",
"datasource": "formdata?type=metadata&filter_name=module,command&filter_value=route53,create_hosted_zone&field=name&module_name_arg=route53",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "route53_ttl",
"cli_id": "ttl",
"label": "Record TTL (seconds)",
"inputType": "text",
"help": "TTL defaults to 300"
},
{
"type": "Theia::Control::Input",
"id": "route53_record_list",
"cli_id": "record_list",
"label": "Record List",
"inputType": "text",
"help": "Comma-separated list of records"
},
{
"type": "Theia::Control::Input",
"id": "alias_name",
"cli_id": "alias_name",
"label": "Alias record name",
"inputType": "text",
"help": ""
},
{
"type": "Theia::Control::Input",
"id": "alias_zone_id",
"cli_id": "alias_zone_id",
"label": "Alias Zone ID",
"inputType": "text",
"help": ""
},
{
"type": "Theia::Control::Toggle",
"id": "evaluate_target_health",
"cli_id": "evaluate_target_health",
"label": "Evaluate targets health",
"inputType": "text",
"help": ""
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### AWS Route 53\n\n\n\nAmazon Route 53 is a highly available and scalable DNS web service\n\n\n\n**Record Name**\n\n\n\nThe name of the record\n\n\n\n**Record Type**\n\n\n\nThe record type. Valid values are: A alias and non-alias, NS, CNAME, CNAME alias and TXT\n\n\n\n**Hosted Zone Name**\n\n\n\nHosted zone name for a Route 53 record\n\n\n\n**TTL**\n\n\n\nThe TTL (Time to live) of the record. (Default is 300)\n\n\n\n**Record List**\n\n\n\nComma-separated list of records\n\n\n\n**Alias record name**\n\n\n\nThe dns of the destination where this record will redirect to.\n\n\n\n\n\n**Alias zone Id**\n\nZone id of the destination record this alias record will point to. Only applicable to S3 buckets, Cloudfront distributions and other records in the same route 53 zone.\n\n\n\n**Evaluate targets health**\n\nSet to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set."
},
{
"type": "Theia::Action",
"label": "Route 53 Hosted zones",
"id": "route53_create_hosted_zone",
"module": "route53",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "route53",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=route53,create_hosted_zone",
"env_param_required": true,
"columns": [
"route53_name",
"timestamp",
"route53_zone_comment",
"route53_zone_delegation_set_id",
"route53_zone_vpc_id"
],
"title": "Route 53 hosted zones",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "route53",
"title": "Create hosted zone",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Create",
"command": {
"phase": "route53",
"command": "create_hosted_zone",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "route53_name",
"cli_id": "route53_name",
"label": "Hosted zone domain",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "route53_zone_comment",
"cli_id": "route53_zone_comment",
"label": "Zone comment",
"help": "A comment to help you identify the zones purpose.",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "route53_private_zone",
"cli_id": "route53_private_zone",
"label": "Hosted zone type",
"default": true,
"help": "",
"options": [
{
"type": "Theia::Option",
"label": "Private",
"value": {
"type": "Theia::DataOption",
"value": true,
"enableControls": [
"route53_zone_vpc_id"
],
"disableControls": [
"route53_add_delegation_set",
"route53_zone_delegation_set_id"
]
}
},
{
"type": "Theia::Option",
"label": "Public",
"value": {
"type": "Theia::DataOption",
"value": false,
"disableControls": [
"route53_zone_vpc_id"
],
"enableControls": [
"route53_add_delegation_set",
"route53_zone_delegation_set_id"
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "route53_add_delegation_set",
"cli_id": "route53_add_delegation_set",
"label": "Add delegation set (Public zones only)",
"help": "Explicitly add a reusable delegation set to this zone.",
"options": [
{
"type": "Theia::Option",
"label": "true",
"value": {
"type": "Theia::DataOption",
"value": true,
"enableControls": [
"route53_zone_delegation_set_id"
]
}
},
{
"type": "Theia::Option",
"label": "false",
"value": {
"type": "Theia::DataOption",
"value": false,
"disableControls": [
"route53_zone_delegation_set_id"
]
}
}
]
},
{
"type": "Theia::Control::Input",
"id": "route53_zone_delegation_set_id",
"cli_id": "route53_zone_delegation_set_id",
"label": "Delegation set id (Public zones only)",
"datasource": "?module_name_arg=route53",
"help": "Add the id of an existing delegation set id"
},
{
"type": "Theia::Control::Select",
"id": "route53_zone_vpc_id",
"cli_id": "route53_zone_vpc_id",
"label": "VPC Id to associate this zone to (Private zones only)",
"datasource": "custom/module_net_vpcs?extra=true&module_name_arg=net",
"help": ""
},
{
"type": "Theia::Control::Toggle",
"id": "route53_zone_force_destroy",
"cli_id": "route53_zone_force_destroy",
"label": "Force destroy records",
"help": "Whether to destroy all records (possibly managed outside of Terraform) in the zone when destroying the zone."
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### AWS Route 53 Hosted zone\n\n\n\nA hosted zone is a container for records, and records contain information about how you want to route traffic for a specific domain, such as test.io, and its subdomains (dev.test.io, qa.test.io). A hosted zone and the corresponding domain have the same name. \n\n\n\n**Hosted zone domain**\n\nA domain to associate to your zone\n\n\n\n**Zone comment**\n\nA comment to help you identify the zones purpose.\n\n\n\n**Hosted zone type**\n\nA **private** hosted zone is a container that holds information about how you want Amazon Route 53 to respond to DNS queries for a domain and its subdomains within one or more VPCs that you create with the Amazon VPC service. More details [here](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/hosted-zones-private.html).\n\n\n\nA **public** hosted zone is a container that holds information about how you want to route traffic on the internet for a specific domain. More details [here](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/AboutHZWorkingWith.html).\n\n\n\n**Add delegation set**\n\nExplicitly add a reusable delegation set to this zone.\n\n\n\n**Delegation set id**\n\nAdd the id of an existing delegation set id\n\n\n\n**VPC Id**\n\nTo make a zone **private** you need to associate it with a VPC\n\n\n\n**Force destroy records**\n\nWhether to destroy all records (possibly managed outside of Terraform) in the zone when destroying the zone.\n"
}
]
},
{
"type": "Theia::Section",
"label": "Search",
"short_name": "SEA",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/magnifying-glass-solid.svg",
"route": "search",
"id": "search",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "OpenSearch",
"id": "opensearch",
"module": "opensearch",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "opensearch_create",
"datasource": "data?type=metadata&filter_name=module&filter_value=opensearch",
"env_param_required": true,
"columns": [
"name",
"instance_type",
"nodes",
"ebs_storage_size",
"timestamp"
],
"title": "OpenSearch Clusters",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "opensearch_create",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "opensearch",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "Name of the cluster (also referred to as the OpenSearch \"Domain\")",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "instance_type",
"cli_id": "instance_type",
"label": "Instance Type",
"help": "Set the OpenSearch instance type (r5.large.search, etc.)",
"default": "r5.large.search",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "high_availability",
"cli_id": "high_availability",
"label": "Enable High-Availability",
"default": true,
"help": ""
},
{
"type": "Theia::Control::Input",
"id": "nodes",
"cli_id": "nodes",
"label": "Nodes",
"help": "Total number of nodes (if high-availability is disabled, must be a multiple of 2)",
"default": 2,
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "ebs_storage_size",
"cli_id": "ebs_storage_size",
"label": "EBS Storage Size",
"help": "Storage capacity (GiB) per node, minimum of 10 and maximum of 2048",
"default": 10,
"inputType": "text"
},
{
"type": "Theia::Control::MultiSelect",
"id": "subnet_ids",
"label": "Subnet Ids",
"help": "",
"datasource": "formdata_from_aws?type=subnets&module_name_arg=opensearch"
},
{
"type": "Theia::Control::MultiSelect",
"id": "security_group_ids",
"label": "Security Group Ids",
"help": "",
"datasource": "formdata_from_aws?type=vpc_security_groups&module_name_arg=opensearch"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1000,
"info": "### OpenSearch Notes\n\nSearch and analytics suite used for a broad set of use cases like real-time application monitoring, log analytics, and website search.\n\n\n\n**Name**\n\nEquivalent to the OpenSearch Domain.\n\n\n\n**Instance Type**\n\nSets the instance type for the nodes in the OpenSearch cluster.\n\n\n\n**Available options:**\n\n - c5.large.search\n\n - c5.xlarge.search\n\n - c5.2xlarge.search\n\n - c5.4xlarge.search\n\n - c5.9xlarge.search\n\n - c5.18xlarge.search\n\n - c6g.large.search\n\n - c6g.xlarge.search\n\n - c6g.2xlarge.search\n\n - c6g.4xlarge.search\n\n - c6g.8xlarge.search\n\n - c6g.12xlarge.search\n\n - i3.large.search\n\n - i3.xlarge.search\n\n - i3.2xlarge.search\n\n - i3.4xlarge.search\n\n - i3.8xlarge.search\n\n - i3.16xlarge.search\n\n - m5.large.search\n\n - m5.xlarge.search\n\n - m5.2xlarge.searc\n\n - m5.4xlarge.search\n\n - m5.12xlarge.search\n\n - m6g.large.search\n\n - m6g.xlarge.search\n\n - m6g.2xlarge.search\n\n - m6g.4xlarge.search\n\n - m6g.8xlarge.search\n\n - m6g.12xlarge.search\n\n - r5.large.search\n\n - r5.xlarge.search\n\n - r5.2xlarge.search\n\n -  r5.4xlarge.search\n\n - r5.12xlarge.search\n\n - r5.large.search\n\n - r5.xlarge.search\n\n - r5.2xlarge.search\n\n - r5.4xlarge.search\n\n - r5.12xlarge.search\n\n - r6gd.large.search\n\n - r6gd.xlarge.search\n\n - r6gd.2xlarge.search\n\n - r6gd.4xlarge.search\n\n - r6gd.8xlarge.search\n\n - r6gd.12xlarge.search\n\n - r6gd.16xlarge.search\n\n\n\n**Autotune**\n\nAutotune in Amazon OpenSearch Service uses performance and usage metrics from your OpenSearch cluster to suggest memory-related configuration changes, including queue and cache sizes and Java virtual machine (JVM) settings on your nodes. These optional changes improve cluster speed and stability.\n\n\n\n**High Availability**\n\nSets the availability zones to 3 - recommended for production workloads with higher availability requirements.\n\n\n\n**Nodes**\n\nTotal number of nodes (if high-availability is disabled, must be a multiple of 2).\n\n\n\n**EBS Storage Size**\n\nStorage capacity (GiB) per node, minimum of 10 and maximum of 2048.\n\n\n\n**Ultra Warm**\n\nUltraWarm is a fully-managed, low-cost, warm storage tier for Amazon OpenSearch Service, enabling you to analyze data using the same tools that Amazon OpenSearch Service provides today. UltraWarm seamlessly integrates with Amazon OpenSearch Serviceâs existing features such as integrated alerting, SQL querying, and more. \n\n\n\nUltraWarm enables you to cost effectively expand the data you want to analyze on Amazon OpenSearch Service gaining valuable insights on data that previously may have been deleted or archived. With UltraWarm, you can now economically retain more of your data to interactively analyze it whenever you want.\n\n\n\n**Dedicated Master Nodes**\n\nAmazon OpenSearch Service uses dedicated master nodes to increase cluster stability. A dedicated master node performs cluster management tasks, but does not hold data or respond to data upload requests. This offloading of cluster management tasks increases the stability of your domain. Just like all other node types, you pay an hourly rate for each dedicated master node.\n\n\n\nDedicated master nodes perform the following cluster management tasks:\n\n- Track all nodes in the cluster.\n\n- Track the number of indexes in the cluster.\n\n- Track the number of shards belonging to each index.\n\n- Maintain routing information for nodes in the cluster.\n\n- Update the cluster state after state changes, such as creating an index and adding or removing nodes in the cluster.\n\n- Replicate changes to the cluster state across all nodes in the cluster.\n\n- Monitor the health of all cluster nodes by sending heartbeat signals, periodic signals that monitor the availability of the data nodes in the cluster."
}
]
},
{
"type": "Theia::Section",
"label": "Deploy",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/circle-play-regular.svg",
"route": "deploy",
"id": "deploy",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Terraform Actions",
"id": "tf",
"module": "tf",
"steps": [
{
"type": "Theia::Step::Form",
"id": "tf",
"title": "Terraform Actions",
"allowMarkdown": true,
"description": "**Generate Terraform Modules**\n\n\n\nThis runs `kc tf init`, which in turn executes `terraform init`. Hang on ... this may take a minute. You can view the log in the terminal window. Generated terraform modules for your environment will be saved in `kc-rapid-cloud/terraform/{env}` directory\n\n\n\n**Generate Terraform Deployment Plan**\n\n\n\nThis runs `kc tf plan`, which in turn executes `terraform plan`. Hang on ... this may take a few minutes. You can view the log in the terminal window. Terraform plan will be saved in `kc-rapid-cloud/terraform/{env}/plan.log`\n\n\n\n**Apply Terraform Plan - Deploy Infrastructure**\n\n\n\nThis runs `kc tf apply`, which in turn executes `terraform apply`. Hang on ... this may take a while, depending on your environment complexity. \n\n\n\n_**We recommend running this from your RapidCloud terminal, to see the progress, instead of running via console.**_\n\n\n\n**Destroy Current Environment Infrastructure**\n\n\n\nThis runs `kc tf destroy`, which in turn executes `terraform destroy`. Hang on ... this may take a few minutes. \n\n\n\n_**Note: S3 buckets which are not empty will not be deleted. You must empty the buckets first.**_\n\n\n\n\n\n\n",
"submit": "Submit",
"commands": [
{
"label": "init",
"command": {
"phase": "tf",
"command": "init"
}
},
{
"label": "plan",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to run terraform planfor this environment? This may take a few minutes. You can view the log in the terminal window.",
"command": {
"phase": "tf",
"command": "plan"
}
},
{
"label": "apply",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to deploy infrastucture changes to your environment? This may take a while. You can view the log in the terminal window.",
"command": {
"phase": "tf",
"command": "apply",
"refresh_status": true
}
},
{
"label": "destroy",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to destroy all infrastucture components for current environment? This may take a while. You can view the log in the terminal window.",
"command": {
"phase": "tf",
"command": "destroy",
"refresh_status": true
}
}
]
}
],
"order": 20
},
{
"type": "Theia::Action",
"label": "Terraform Modules",
"id": "tf_modules",
"module": "tf",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "tf_modules",
"datasource": "tf_modules?test=test",
"env_param_required": true,
"columns": [
"filename"
],
"title": "Terraform Modules",
"description": "",
"hide_add": true
},
{
"type": "Theia::Step::Form",
"id": "tf_modules",
"title": "",
"description": "",
"submit": "Submit",
"commands": [],
"controls": [
{
"type": "Theia::Control::Input",
"id": "filename",
"label": "File Location",
"help": "",
"inputType": "text",
"readonly": true
},
{
"type": "Theia::Control::Code",
"label": "",
"id": "contents",
"language": "hcl"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"order": 25
}
]
},
{
"type": "Theia::Section",
"label": "Logging",
"icon": "https://rapidcloud-icons.s3.amazonaws.com/generic/clock-rotate-left-solid.svg",
"route": "logs",
"id": "logs",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Trail",
"id": "cloudtrail_create_trail",
"module": "cloudtrail",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "cloudtrail_create_trail",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=cloudtrail,create_trail",
"env_param_required": true,
"columns": [
"cloudtrail_trail_name",
"cloudtrail_s3_bucket_name",
"cloudtrail_kms_key_id",
"cloudtrail_include_global_service_events",
"cloudtrail_enable_log_file_validation",
"cloudtrail_is_organization_trail",
"cloudtrail_is_multi_region_trail",
"timestamp"
],
"title": "Trail",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "cloudtrail_create_trail",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "cloudtrail",
"command": "create_trail",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "cloudtrail_trail_name",
"label": "Trail Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cloudtrail_s3_bucket_name",
"label": "S3 Bucket Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cloudtrail_kms_key_id",
"label": "KMS Key ARN",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Toggle",
"id": "cloudtrail_include_global_service_events",
"label": "Include global service events?",
"help": ""
},
{
"type": "Theia::Control::Toggle",
"id": "cloudtrail_enable_log_file_validation",
"label": "Enable log file validation?",
"help": ""
},
{
"type": "Theia::Control::Toggle",
"id": "cloudtrail_is_organization_trail",
"label": "Is this an organization trail?",
"help": ""
},
{
"type": "Theia::Control::Toggle",
"id": "cloudtrail_is_multi_region_trail",
"label": "Is this a multiregion trail?",
"help": ""
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"order": 1,
"info": "# Cloudtrail\n\n\n\nAWS CloudTrail monitors and records account activity across your AWS infrastructure, giving you control over storage, analysis, and remediation actions.\n\n\n\n## Trail Name\n\n\n\nThis is the trail name. Please look at the S3 Bucket Name and KMS Key ARN sections to see how the trail name should be used on the policies. \n\n\n\n## S3 Bucket Name\n\n\n\nIn order to create a new trail, you need to create a S3 bucket to store the logs, so on the S3 Bucket Name you will set the S3 bucket name that you created.\n\nFurthermore, this S3 bucket should have a special bucket policy so Cloudtrail can be able to store logs there. Please see the example bellow to make sure you are using the right policy.\n\n\n\n```\n\n{\n\n    \"Version\": \"2012-10-17\",\n\n    \"Statement\": [\n\n        {\n\n            \"Sid\": \"AWSCloudTrailAclCheck20150319\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": \"s3:GetBucketAcl\",\n\n            \"Resource\": \"arn:aws:s3:::<bucket-name>\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\"\n\n                }\n\n            }\n\n        },\n\n        {\n\n            \"Sid\": \"AWSCloudTrailWrite20150319\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": \"s3:PutObject\",\n\n            \"Resource\": \"arn:aws:s3:::<<bucket-name>>/AWSLogs/<account-id>/*\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\",\n\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n\n                }\n\n            }\n\n        },\n\n        {\n\n            \"Sid\": \"AWSCloudTrailWrite20150319\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": \"s3:PutObject\",\n\n            \"Resource\": \"arn:aws:s3:::<bucket-name>/AWSLogs/<organization-id>/*\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\",\n\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n\n                }\n\n            }\n\n        }\n\n    ]\n\n}\n\n```\n\n\n\n## KMS Key ARN\n\n\n\nCloudtrail also requires a KMS key to encrypt the logs, so you have to create a KMS key ahead and use special key policy. Please take a look at the example bellow to make sure you are using the right policy.\n\n\n\n```\n\n{\n\n    \"Version\": \"2012-10-17\",\n\n    \"Id\": \"Key policy created by CloudTrail\",\n\n    \"Statement\": [\n\n        {\n\n            \"Sid\": \"Enable IAM User Permissions\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"AWS\": \"arn:aws:iam::<account-id>:root\"\n\n            },\n\n            \"Action\": \"kms:*\",\n\n            \"Resource\": \"*\"\n\n        },\n\n        {\n\n            \"Sid\": \"Allow CloudTrail to encrypt logs\",\n\n            \"Effect\": \"Allow\",\n\n            \"Principal\": {\n\n                \"Service\": \"cloudtrail.amazonaws.com\"\n\n            },\n\n            \"Action\": [\n\n                \"kms:GenerateDataKey*\",\n\n                \"kms:DescribeKey\",\n\n                \"kms:Decrypt\",\n\n                \"kms:ReEncryptFrom\"\n\n            ],\n\n            \"Resource\": \"*\",\n\n            \"Condition\": {\n\n                \"StringEquals\": {\n\n                    \"AWS:SourceArn\": \"arn:aws:cloudtrail:<region>:<account-id>:trail/<trail-name>\"\n\n                },\n\n                \"StringLike\": {\n\n                    \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:<account-id>:trail/*\"\n\n                }\n\n            }\n\n        }\n\n    ]\n\n}\n\n```\n\n\n\n## Include global service events?\n\n\n\nWhether the trail is publishing events from global services such as IAM to the log files\n\n\n\n## Enable log file validation?\n\n\n\nWhether log file integrity validation is enabled\n\n\n\n## Is this an organization trail?\n\n\n\nWhether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account\n\n\n\n## Is this a multiregion trail?\n\n\n\nWhether the trail is created in the current region or in all regions"
},
{
"type": "Theia::Action",
"label": "CDC Log (Semi-Structured)",
"id": "cdc_log",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "cdc_log",
"datasource": "data?type=cdc_log&filter_name=enable_textract&filter_value=False",
"env_param_required": true,
"columns": [
"dataset_name",
"status",
"cdc_timestamp",
"job_name"
],
"title": "CDC Log (Semi-Structured)",
"description": "Log of Lambda Function executions to apply CDC to raw bucket for Semi-Structured Data (json, excel, csv, xml)",
"hide_add": true
},
{
"type": "Theia::Step::Json",
"id": "cdc_log",
"title": "",
"description": ""
}
],
"order": 10
},
{
"type": "Theia::Action",
"label": "DMS Replication Log",
"id": "cdc_tracker",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "cdc_tracker",
"datasource": "data?type=cdc_tracker",
"env_param_required": true,
"columns": [
"task_status",
"dms_task_id",
"cdc_start_timestamp",
"cdc_end_timestamp"
],
"title": "DMS Replication Log",
"description": "Timestamp based DMS Replication Tracker",
"hide_add": true
},
{
"type": "Theia::Step::Json",
"id": "cdc_tracker",
"title": "DMS CDC Tracker",
"description": ""
}
],
"order": 20
},
{
"type": "Theia::Action",
"label": "Document Processing Log",
"id": "textract_log",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "textract_log",
"datasource": "paginated_data?type=cdc_log&filter_name=enable_textract&filter_value=True",
"pagination": "paginated_data_info?type=cdc_log&filter_name=enable_textract&filter_value=True&sort_by=last_modified&sort_order=desc",
"env_param_required": true,
"columns": [
"status",
"document_match",
"s3_key",
"last_modified",
"job_name"
],
"title": "Amazon Textract Log",
"description": "Log of Amazon Textract processing results",
"hide_add": true
},
{
"type": "Theia::Step::Json",
"id": "textract_log",
"title": "",
"description": ""
}
],
"order": 25
},
{
"type": "Theia::Action",
"label": "Transform log",
"id": "transform_log",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "transform_log",
"datasource": "data?type=transform_log",
"env_param_required": true,
"columns": [
"status",
"update_timestamp",
"job_name",
"dataset_name"
],
"title": "Transform log",
"description": "Log of Transformation Glue job executions",
"hide_add": true
},
{
"type": "Theia::Step::Json",
"id": "transform_log",
"title": "Transform Log",
"description": ""
}
],
"order": 30
},
{
"type": "Theia::Action",
"label": "Publish Log",
"id": "publish_log",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "publish_log",
"datasource": "data?type=publish_log",
"env_param_required": true,
"columns": [
"status",
"update_timestamp",
"job_name",
"dataset_name"
],
"title": "Publish log",
"description": "Log of Publish Glue job executions",
"hide_add": true
},
{
"type": "Theia::Step::Json",
"id": "publish_log",
"title": "Publish log",
"description": ""
}
],
"order": 40
}
]
},
{
"type": "Theia::Section",
"label": "Databases",
"route": "databases",
"id": "databases",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "Redshift",
"id": "redshift",
"module": "redshift",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "redshift",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=redshift,create",
"env_param_required": true,
"columns": [
"module",
"name",
"redshift_node_count",
"redshift_node_type",
"redshift_vpc_id",
"timestamp"
],
"title": "Redshift Cluster",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "redshift",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "redshift",
"command": "create",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Redshift Cluster Name",
"help": "Enter cluster name (no spaces, hyphens or special characters)",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "redshift_node_count",
"label": "Node Count",
"help": "Amount of nodes in the cluster",
"default": 1
},
{
"type": "Theia::Control::Select",
"id": "redshift_node_type",
"label": "Node Type",
"help": "The Cluster Node Type",
"options": [
{
"type": "Theia::Option",
"label": "dc2.large",
"value": {
"type": "Theia::DataOption",
"value": "dc2.large",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "dc2.8xlarge",
"value": {
"type": "Theia::DataOption",
"value": "dc2.8xlarge",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "ra3.xlplus",
"value": {
"type": "Theia::DataOption",
"value": "ra3.xlplus",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "ra3.4xlarge",
"value": {
"type": "Theia::DataOption",
"value": "ra3.4xlarge",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "ra3.16xlarge",
"value": {
"type": "Theia::DataOption",
"value": "ra3.16xlarge",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_vpc_id",
"label": "VPC ID",
"help": "The VPC the cluster is deployed to",
"datasource": "custom/module_redshift_vpcs?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "VPC ID is required"
}
]
},
{
"type": "Theia::Control::MultiSelect",
"id": "redshift_subnet_ids",
"label": "Subnets",
"help": "Select subnet ids to place your Redshift cluster in",
"datasource": "custom/module_redshift_subnets?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "At leasr one subnet is required"
}
]
},
{
"type": "Theia::Control::KeyValue",
"id": "parameters",
"label": "Parameters",
"help": "Parameters you wish to apply to the Redshift cluster",
"dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=redshift,${name}&result=params,parameters",
"add_value_label": "Paramaeters"
},
{
"type": "Theia::Control::KeyValue",
"id": "tags",
"label": "Tags",
"help": "Tags you wish to apply to the Redshift cluster",
"dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=redshift,${name}&result=params,tags",
"add_value_label": "Tags"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"info": "### Redshift Cluster \n\n\n\nCreate Redshift Cluster\n",
"order": 1000
},
{
"type": "Theia::Action",
"label": "Redshift Serverless",
"id": "redshift_create_serverless",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "redshift_create_serverless",
"datasource": "data?type=metadata&filter_name=module,command&filter_value=redshift,create_serverless",
"env_param_required": true,
"columns": [
"name",
"timestamp",
"redshift_base_capacity",
"redshift_set_usage_limit",
"redshift_max_capacity"
],
"title": "Redshift Serverless",
"description": "Deploy a Redshift Serverless Cluster",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "redshift_create_serverless",
"title": "Redshift Serverless",
"description": "Deploy a Redshift Serverless Cluster",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Create",
"command": {
"phase": "redshift",
"command": "create_serverless",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Name",
"help": "Enter A Namespace name, this will be used for both Namespace and Workgroup",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "redshift_vpc_id",
"label": "VPC ID",
"help": "The VPC the cluster is deployed to",
"datasource": "custom/module_redshift_vpcs?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "VPC ID is required"
}
]
},
{
"type": "Theia::Control::MultiSelect",
"id": "redshift_subnet_ids",
"label": "Subnets",
"help": "Select at least 3 subnet ids in different AZs to place your Redshift serverless in",
"datasource": "custom/module_redshift_subnets?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "3 subnets are required"
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_base_capacity",
"label": "Base Capacity (RPU) ",
"help": "Base Capacity (RPU)",
"default": "32",
"datasource": "custom/module_redshift_rpus?extra=true&module_name_arg=redshift&capacity=32",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "Please select a base capacity"
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_set_usage_limit",
"label": "Usage Limit",
"help": "Select \"Enabled\" to apply a max usage limit to Redshift serverless",
"inputType": "text",
"default": "false",
"options": [
{
"type": "Theia::Option",
"label": "Disabled",
"value": {
"type": "Theia::DataOption",
"value": "false",
"disableControls": [
"redshift_max_capacity",
"redshift_usage_period",
"redshift_usage_type",
"redshift_breach_action"
],
"enableControls": []
}
},
{
"type": "Theia::Option",
"label": "Enabled",
"value": {
"type": "Theia::DataOption",
"value": "true",
"enableControls": [
"redshift_max_capacity",
"redshift_usage_period",
"redshift_usage_type",
"redshift_breach_action"
],
"disableControls": []
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_max_capacity",
"label": "Max Capacity (RPU) ",
"help": "Max Capacity (RPU)",
"default": "512",
"datasource": "custom/module_redshift_rpus?extra=true&module_name_arg=redshift&capacity=512"
},
{
"type": "Theia::Control::Select",
"id": "redshift_usage_period",
"label": "The period to apply the Usage Limit to",
"help": "",
"default": "monthly",
"options": [
{
"type": "Theia::Option",
"label": "monthly",
"value": {
"type": "Theia::DataOption",
"value": "monthly",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "weekly",
"value": {
"type": "Theia::DataOption",
"value": "weekly",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "daily",
"value": {
"type": "Theia::DataOption",
"value": "daily",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_usage_type",
"label": "The type of Redshift Serverless usage to create a usage limit for",
"help": "",
"default": "serverless-compute",
"options": [
{
"type": "Theia::Option",
"label": "serverless-compute",
"value": {
"type": "Theia::DataOption",
"value": "serverless-compute",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "cross-region-datasharing",
"value": {
"type": "Theia::DataOption",
"value": "cross-region-datasharing",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "redshift_breach_action",
"label": "The action that Redshift Serverless Cluster takes when the limit is reached",
"help": "",
"default": "log",
"options": [
{
"type": "Theia::Option",
"label": "log",
"value": {
"type": "Theia::DataOption",
"value": "log",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "deactivate",
"value": {
"type": "Theia::DataOption",
"value": "deactivate",
"disableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "emit-metric",
"value": {
"type": "Theia::DataOption",
"value": "emit-metric",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::KeyValue",
"id": "tags",
"label": "Tags",
"help": "Tags you wish to apply to the Redshift Serverless cluster",
"dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=redshift,${name}&result=params,tags",
"add_value_label": "Tags"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file",
"order": 1000
},
{
"type": "Theia::Action",
"label": "Redshift Tables",
"id": "datawarehouse_tables",
"module": "redshift",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "datawarehouse_tables",
"datasource": "data?type=publishing&filter_name=db_type&filter_value=redshift",
"env_param_required": true,
"columns": [
"name",
"db_name",
"primary_key",
"sort_key",
"dist_key",
"dist_style"
],
"title": "Redshift Tables",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "datawarehouse_tables",
"title": "",
"description": "",
"readonly": true,
"commands": [
{
"label": "Remove",
"require_confirmation": true,
"confirmation_message": "Are you sure you want to remove this item?",
"command": {
"phase": "undo-command"
},
"new_hide": true
},
{
"label": "Submit",
"command": {
"phase": "redshift",
"command": "add_table",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": true
},
{
"type": "Theia::Control::Select",
"id": "db_name",
"cli_id": "redshift_db_name",
"label": "Database Name",
"help": "Select an already registered database name",
"datasource": "formdata?type=datawarehouse&field=name"
},
{
"type": "Theia::Control::Input",
"id": "name",
"label": "Table Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "primary_key",
"cli_id": "redshift_primary_key",
"label": "Primary Key",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "sort_key",
"cli_id": "redshift_sort_key",
"label": "Sort Key",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "dist_key",
"cli_id": "redshift_dist_key",
"label": "Distribution Key",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Select",
"id": "dist_style",
"cli_id": "redshift_dist_style",
"label": "Data Distribution Style",
"help": "Defines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`",
"options": [
{
"type": "Theia::Option",
"label": "AUTO",
"value": "AUTO"
},
{
"type": "Theia::Option",
"label": "EVEN",
"value": "EVEN"
},
{
"type": "Theia::Option",
"label": "KEY",
"value": "KEY"
},
{
"type": "Theia::Option",
"label": "ALL",
"value": "ALL"
}
]
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"info": "### Redshift Tables \n\n\n\nDefine Redshift Tables\n\n\n\n**Redshift Database Name**\n\n\n\nSelect existing Redshift Cluster\n\n\n\n**Table Name**\n\n\n\nTable Name\n\n\n\n**Primary Key**\n\n\n\nTable Primary Key\n\n\n\n**Sort Keys**\n\n\n\nComma separated sort keys\n\n\n\n**Distribution Key**\n\n\n\nDistribution Key\n\n\n\n**Distribution Style**\n\n\n\nDefines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`\n",
"order": 1000
},
{
"type": "Theia::Action",
"label": "Load SQL from file",
"id": "redshift_load_sql",
"module": "redshift",
"steps": [
{
"type": "Theia::Step::Form",
"id": "load_sql",
"title": "Upload Files to S3 and Load Into Redshift",
"description": "",
"submit": "Submit",
"commands": [],
"controls": [
{
"type": "Theia::Control::Select",
"id": "file_type",
"label": "Select File Type to upload",
"help": "",
"default": "tables",
"options": [
{
"type": "Theia::Option",
"label": "Create/Modify Tables",
"value": {
"type": "Theia::DataOption",
"value": "tables",
"enableControls": [
""
]
}
},
{
"type": "Theia::Option",
"label": "Create/Modify Schemas",
"value": {
"type": "Theia::DataOption",
"value": "schemas",
"disableControls": [
""
]
}
}
]
},
{
"type": "Theia::Control::Select",
"id": "bucket",
"label": "DB Instance",
"help": "The Redshift Cluster/Serverless you wish to load SQL to",
"datasource": "custom/module_redshift_buckets?extra=true&module_name_arg=redshift",
"validations": [
{
"type": "Theia::Validation::Required",
"message": "Redshift Server/Serverless is Required"
}
]
},
{
"type": "Theia::Control::Toggle",
"id": "confirm",
"default": false,
"label": "SQL in the uploaded files will be executed as *root* on your target redshift DB"
},
{
"label": "",
"help": "",
"id": "files",
"type": "Theia::Control::Upload",
"multiple": false,
"dynamic_datasource": "formdata_from_aws?type=generate_presigned_url&dataset_type=code&file_type=${file_type}&confirm=${confirm}&bucket-suffix=${bucket}",
"new_hide": true
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
}
]
}
],
"info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file",
"order": 1000
}
]
},
{
"type": "Theia::Section",
"label": "",
"route": "",
"id": "",
"enabled": true,
"actions": [
{
"type": "Theia::Action",
"label": "This is RapidCloud menu option label for the module",
"id": "redshift_generate-schema",
"module": "redshift",
"steps": [
{
"type": "Theia::Step::Grid",
"id": "redshift_generate-schema",
"datasource": "data?type=metadata&filter_name=module&filter_value=redshift",
"env_param_required": true,
"columns": [
"name",
"timestamp"
],
"title": "This is RapidCloud module main page title",
"description": "",
"submit": "Continue"
},
{
"type": "Theia::Step::Form",
"id": "redshift_generate-schema",
"title": "",
"description": "",
"submit": "Submit",
"not_editable": true,
"commands": [
{
"label": "generate-schema",
"command": {
"phase": "redshift",
"command": "generate-schema",
"refresh_status": true
}
}
],
"controls": [
{
"type": "Theia::Control::Input",
"id": "name",
"cli_id": "name",
"label": "Name",
"help": "",
"inputType": "text"
},
{
"type": "Theia::Control::Input",
"id": "cmd_id",
"label": "Command ID",
"readonly": true,
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "fqn",
"hidden": "true"
},
{
"type": "Theia::Control::Input",
"id": "notes",
"label": "Notes",
"readonly": true
}
]
}
],
"info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file",
"order": 1000
}
]
}
]
}
