{
  "type": "Theia::Template",
  "title": "RapidCloud  - AWS Automation and Acceleration Framework",
  "version": "1",
  "footer": {
    "type": "Theia::Footer",
    "columns": [
      {
        "class": "text-muted text-start",
        "content": "Copyright \u00a9 2020-2022 <a href='https://www.kinect-consulting.com/' target='_blank'>Kinect Consulting, LLC</a>."
      },
      {
        "class": "text-muted text-start",
        "content": "<a href='https://rapid-cloud.io/documentation/' target='_blank'>Documentation</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://kinect-rapid-cloud.s3.amazonaws.com/docs/RapidCloud-Terms-of-Service.html' target='_blank'>Terms of Service</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://rapid-cloud.io/contact-us/' target='_blank'>Contact Us</a>"
      },
      {
        "class": "text-muted text-end",
        "content": "v1.2.3"
      }
    ]
  },
  "sections": [
    {
      "type": "Theia::Section",
      "label": "Home",
      "route": "home",
      "static": true,
      "id": "home",
      "enabled": true,
      "description": "## RapidCloud - AWS Automation & Acceleration Framework \n\n\n\nRapidCloud is the answer to complexity of building cloud-native platforms on AWS. RapidCloud supports popular data, analytics, web and mobile use cases, which include: \n\n\n\n* Database and Data Warehouse migration to AWS\n\n* Ingestion of Relational, Semi-structured and Unstructured data\n\n* Real-time replication, CDC (Change Data Capture), ETL/ELT, Event streaming\n\n* Governance, Security, Compliance\n\n* Serverless, Containers, Web and Mobile Applications\n\n* Or any other use-case or application via RapidCloud <a href=\"https://kinect-rapid-cloud.s3.amazonaws.com/docs/RapidCloud-Custom-Modules.html\" target=\"_blank\">Custom Modules</a>\n\n\n\n### RapidCloud Conceptual Architecture\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/rapidcloud-conceptual.png?1\" alt=\"RapidCloud \" width=\"820\" />\n\n\n\n### Documentation\n\n\n\n<a href=\"https://rapid-cloud.io/documentation\" target=\"_blank\">Main RapidCloud Documentation</a>\n\n\n\n<a href=\"https://rapid-cloud.io/custom-modules\" target=\"_blank\">How to create RapidCloud Custom Modules</a>\n\n\n\n## Support\n\n\n\n* [Contact Us](https://www.kinect-consulting.com/contact-us/) or (305) 428-8255\n\n\n"
    },
    {
      "type": "Theia::Section",
      "label": "Current State Diagram",
      "route": "architecture",
      "static": true,
      "id": "architecture",
      "enabled": true
    },
    {
      "type": "Theia::Section",
      "label": "Modeling",
      "route": "modeling",
      "id": "modeling",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Solution Architecture",
          "id": "wizard",
          "static": true,
          "enabled": true,
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Landing Zone",
          "id": "lzwizard",
          "static": true,
          "enabled": false,
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Network",
          "id": "netwizard",
          "static": true,
          "enabled": false,
          "order": 1000
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Settings",
      "route": "setup",
      "id": "setup",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Account Info",
          "id": "activate",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "activate",
              "title": "Account and Subscription Information",
              "stripe_enabled": true,
              "description_upgrade_dev": "<b>Upgrade to RapidCloud Premium:</b>&nbsp;&nbsp;<a href='https://buy.stripe.com/test_eVa6rBfaY1r33aE6op' target='_blank'>Annual Subscription</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://buy.stripe.com/test_9AQbLV8MAfhTh1u3cc' target='_blank'>Monthly Subscription</a>",
              "description_upgrade_live": "<b>Upgrade to RapidCloud Premium:</b>&nbsp;&nbsp;<a href='https://buy.stripe.com/28oeWw9n15au9EI3cc' target='_blank'>Annual Subscription</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='https://buy.stripe.com/aEU4hS0QvbyS7wA289' target='_blank'>Monthly Subscription</a>",
              "description": "",
              "datasource": "account_info?extra=true",
              "submit": "Activate",
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "activate",
                    "command": ""
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "email",
                  "label": "Email",
                  "help": "Enter your work email address",
                  "inputType": "text",
                  "validations": [
                    {
                      "type": "Theia::Validation::Required",
                      "message": "Email is required"
                    },
                    {
                      "type": "Theia::Validation::Email",
                      "message": "Invalid email"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "aws_profile",
                  "label": "AWS Profile",
                  "help": "Enter your AWS Profile name for interacting with your AWS account",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "tier",
                  "label": "Subscription Tier",
                  "help": "",
                  "readonly": "true",
                  "default": "1",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Basic (FREE)",
                      "value": "1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Premium",
                      "value": "2"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Kinect Consulting Team",
                      "value": "3"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "phone",
                  "label": "Phone Number",
                  "help": "Enter your Phone Number, so we can get in touch with you when you require assistance",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "start",
                  "label": "Premium Subscription Start",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "end",
                  "label": "Premium Subscription End",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "auto_renew",
                  "label": "Premium Subscription Auto-Renew",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Activate RapidCloud\n\n\n\nUse this form only once to activate your RapidCloud license\n\n\n\n**Email**\n\n\n\nYour work email address\n\n\n\n**AWS Profile**\n\n\n\nName of AWS profile that will allow RapidCloud access to your AWS aaccounts\n\n\n\n**Subscription Tier**\n\n\n\n`Basic (FREE)` - Free tier to get you started. Includes Architecture Modeling Tool, Data Lake Foundation, and automation for a variety of AWS Services.\n\n\n\n`Premium` - Includes `Basic` functionality plus Complete Infrastructure Automation for Database and Data Warehouse Migration, Semi-Structured Data Pipeline, Streaming Data Processing, Web and Mobile Applications, End-to-end application orchestration and code templates (auto generated for your specific use cases).\n\n\n\n**Phone**\n\n\n\nPhone number\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "Environments",
          "id": "environments",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "environments",
              "datasource": "data?type=profile",
              "columns": [
                "name",
                "shared",
                "account",
                "region",
                "vpc",
                "aws_profile",
                "timestamp",
                "updated_by"
              ],
              "title": "Environments",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "environments",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Submit",
                  "command": {
                    "phase": "init",
                    "command": "create-env"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Environment Name",
                  "help": "Environment name is comprised of {org}_{workload}_{environment}. For example: myorg_bitools_dev or abccorp_orders_test. Use three fields below.",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "client",
                  "label": "Company or organization name",
                  "help": "Enter your company or organization name (no spaces or special characters allowed)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload",
                  "label": "Workload/Application",
                  "help": "Workload or Application Name (no spaces or special characters allowed)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "env",
                  "cli_arg": "env_suffix",
                  "label": "Environment",
                  "help": "Enter Environment (e.g. dev|qa|uat|stg|prod)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "shared",
                  "label": "Is this environment shared with other engineers?"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "account",
                  "label": "AWS Account number",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "aws_profile",
                  "label": "AWS Profile",
                  "help": "Enter your AWS Profile name for interacting with your AWS account",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "vpc",
                  "label": "VPC",
                  "help": "AWS VPC",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "region",
                  "label": "Region",
                  "help": "e.g us-east-1, us-east-2",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "US East (N. Virginia): us-east-1",
                      "value": "us-east-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "US East (Ohio): us-east-2",
                      "value": "us-east-2"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "US West (N. California): us-west-1",
                      "value": "us-west-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "US West (Oregon): us-west-2",
                      "value": "us-west-2"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Canada (Central): ca-central-1",
                      "value": "ca-central-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "South America (S\u00e3o Paulo): sa-east-1",
                      "value": "sa-east-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AWS GovCloud (US-East): us-gov-east-1",
                      "value": "us-gov-east-1"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AWS GovCloud (US): us-gov-west-1",
                      "value": "us-gov-west-1"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ssh_pub_key",
                  "cli_arg": "ssh-pub-key",
                  "label": "SSH Public Key",
                  "help": "SSH Public Key will be used to access EMR clusters through SSH (if applicable)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ips_for_ssh",
                  "label": "Allowed IP Addresses",
                  "help": "Comma separated list of IP Addresses to be allowed SSH Access to EMR Cluster"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "vpn_only",
                  "label": "Are you using VPN to connect to AWS?"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Environments\n\n\n\nAn environment is a specific AWS workload or application, with its own business logic, security, data catalog, data lake, databases, compute services and other AWS resources.\n\n\n\nYou can create as many environments as you want.\n\n\n\nEach environment is managed separately from other environments and can be created in any AWS Account and VPC within your org.\n\n\n\nEnvironment name is comprised of  {`org`}\\_{`workload`}\\_{`environment`}. for example: `kinect_bitools_dev` or `abccorp_orders_test`\n\n\n\n**Company or organization**\n\n\n\nEnter your company or organization name without spaces or special characters.\n\n\n\n**Workload/Application**\n\n\n\nWorkload Name without spaces or special characters. This should uniquely identify the type of workload or application you're creating this environment for.\n\n\n\n**Environment**\n\n\n\nThis is a specific instance of the environment (e.g. dev|qa|uat|stg|prod)\n\n\n\n**AWS Account number**\n\n\n\nAWS Account where your environment will be created. \n\n\n\n**AWS Profile**\n\n\n\nEnter AWS Profile name for interacting with your AWS account with proper permisssions to create and maintain this environment.\n\n\n\n**VPC**\n\n\n\nAWS VPC ID where VPC specific resources will be created.\n\n\n\n**Region**\n\n\n\nAWS Region where region specific resources will be created.\n\n\n\n**SSH Public Key**\n\n\n\nSSH Public Key will be used to access EMR clusters through SSH. This is only applicable for workloads that require EMR.\n\n\n\n**Allowed IP Addresses**\n\n\n\nComma separated list of IP Addresses to be allowed SSH Access to EMR Cluster.\n\n\n\n**Are you using VPN to connect to AWS?**\n\n\n\nWe recommend always using VPN to connect to your AWS account.\n"
        },
        {
          "type": "Theia::Action",
          "label": "Properties",
          "id": "properties",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "properties",
              "datasource": "data?type=property",
              "env_param_required": true,
              "columns": [
                "type",
                "name",
                "default_value",
                "value"
              ],
              "title": "Properties",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "init",
                    "command": "set-property",
                    "refresh_status": false
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "type",
                  "label": "Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "general",
                      "value": "general"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "api_gateway",
                      "value": "api_gateway"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "aurora_mysql_instance",
                      "value": "aurora_mysql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "aurora_postgresql_instance",
                      "value": "aurora_postgresql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "cloudwatch_event_rule",
                      "value": "cloudwatch_event_rule"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_event_subscription",
                      "value": "dms_event_subscription"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_replication_instance",
                      "value": "dms_replication_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_replication_task",
                      "value": "dms_replication_task"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_s3_target_endpoint",
                      "value": "dms_s3_target_endpoint"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "dms_source_endpoint",
                      "value": "dms_source_endpoint"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "emr_cluster",
                      "value": "emr_cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_catalog_database",
                      "value": "glue_catalog_database"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_classifier",
                      "value": "glue_classifier"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_connection",
                      "value": "glue_connection"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_crawler",
                      "value": "glue_crawler"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_job",
                      "value": "glue_job"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "glue_trigger",
                      "value": "glue_trigger"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kinesis_firehose_s3_delivery_stream",
                      "value": "kinesis_firehose_s3_delivery_stream"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kinesis_stream",
                      "value": "kinesis_stream"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "kms_key",
                      "value": "kms_key"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "lambda_event_source_mapping",
                      "value": "lambda_event_source_mapping"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "lambda_function",
                      "value": "lambda_function"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "lambda_layer",
                      "value": "lambda_layer"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "msk_cluster",
                      "value": "msk_cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "rds_mysql_instance",
                      "value": "rds_mysql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "rds_postgresql_instance",
                      "value": "rds_postgresql_instance"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "redshift_cluster",
                      "value": "redshift_cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "s3_bucket",
                      "value": "s3_bucket"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "s3_bucket_notification",
                      "value": "s3_bucket_notification"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "s3_bucket_object",
                      "value": "s3_bucket_object"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "sns_topic",
                      "value": "sns_topic"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "sns_topic_subscription",
                      "value": "sns_topic_subscription"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Property",
                  "help": "Property (no spaces or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "default_value",
                  "label": "Default Value",
                  "help": "Default Value",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "value",
                  "label": "Value",
                  "help": "Value",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Properties\n\n\n\nRapidCloud properties are used by infrastructure automation modules to configure AWS resources. Each environment has its own set of default properties. You can modify property value if you want to change how specific resource is configured. \n\n\n\n**Type**\n\n\n\nProperty type is either `general` or for a specific AWS resource type.\n\n\n\n**Property**\n\n\n\nName of the property to set value for.\n\n\n\n**Default Value**\n\n\n\nDefault property value to be used by RapidCloud automation.\n\n\n\n**Value**\n\n\n\nYou can override default value here."
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Metadata",
      "route": "metadata",
      "id": "metadata",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Metadata",
          "id": "modules",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "modules",
              "datasource": "data?type=metadata&flatten=false",
              "env_param_required": true,
              "columns": [
                "module",
                "command",
                "name",
                "timestamp",
                "fqn",
                "cmd_id"
              ],
              "title": "Environment Metadata",
              "description": ""
            },
            {
              "type": "Theia::Step::Json",
              "id": "modules",
              "title": "",
              "description": ""
            }
          ],
          "order": 10,
          "info": "### Environment Metadata\n\n\n\nThis is top level metadata for current environment. Each metadata item may represent multiple AWS resources. To see AWS resource specific configurations, click on `AWS Resources` menu option.\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "AWS Resources",
          "id": "awsinfra",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "awsinfra",
              "datasource": "status?test=test",
              "env_param_required": true,
              "columns": [
                "created",
                "resource_type",
                "resource_name",
                "phase",
                "command",
                "timestamp",
                "cmd_id"
              ],
              "title": "AWS Environment Resources (aws_infra)",
              "description": "This page shows all the AWS Resources deployed or to be deployed as part of your environment.\n\n\n\nHere are some convenience links to open specific sections of AWS Console: <a href='https://console.aws.amazon.com/dynamodbv2/home' target='_blank'>DynamoDB</a>, <a href='https://s3.console.aws.amazon.com/s3/home' target='_blank'>S3</a>, <a href='https://console.aws.amazon.com/dms/v2/home' target='_blank'>DMS</a>, <a href='https://console.aws.amazon.com/glue/home' target='_blank'>Glue</a>, <a href='https://console.aws.amazon.com/lambda/home' target='_blank'>Lambda</a>, <a href='https://console.aws.amazon.com/rds/home' target='_blank'>RDS/Aurora</a>, <a href='https://console.aws.amazon.com/redshiftv2' target='_blank'>Redshift</a>, <a href='https://console.aws.amazon.com/elasticmapreduce/home' target='_blank'>EMR</a>, <a href='https://console.aws.amazon.com/kinesis/home' target='_blank'>Kinesis</a>, <a href='https://console.aws.amazon.com/cloudwatch/home' target='_blank'>CloudWatch</a>, <a href='https://console.aws.amazon.com/ec2/home' target='_blank'>EC2</a>",
              "allowMarkdown": true,
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "history",
              "title": "",
              "description": ""
            }
          ],
          "order": 20
        },
        {
          "type": "Theia::Action",
          "label": "Remove Metadata",
          "id": "clean",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "clean",
              "title": "Remove Environment Metadata",
              "allowMarkdown": true,
              "description": "This removes all metadata for the environment \n\n\n\nFrom CLI: `kc metadata remove` \n\n\n\nImportant: this does not destroy environment resources. \n\n\n\nIf your goal is to remove the environment and all resources, then first do `Deploy -> Terraform Actions -> Destroy` (`kc tf destroy`) and then `Metadata -> Remove Metadata` (`kc metadata remove`)",
              "submit": "Remove Environment Metadata",
              "commands": [
                {
                  "label": "Clean",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove all metadata associated with your environment?",
                  "command": {
                    "phase": "metadata",
                    "command": "remove",
                    "refresh_status": true
                  }
                }
              ]
            }
          ],
          "order": 30
        },
        {
          "type": "Theia::Action",
          "label": "Export",
          "id": "export",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "export",
              "title": "Export Current Environment",
              "description": "Create snapshot for current environment metadata. Snapshot will be saved as json file in ~/kc-rapidcloud/config/environments directory",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Export",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to create snapshot for this environment's metadata?",
                  "command": {
                    "phase": "metadata",
                    "command": "export"
                  }
                }
              ]
            }
          ],
          "order": 1000
        },
        {
          "type": "Theia::Action",
          "label": "Import",
          "id": "import",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "import",
              "title": "Import Environment",
              "description": "Import environment metadata from current environment's latest snapshot",
              "submit": "Submit",
              "env_param_required": false,
              "commands": [
                {
                  "label": "Import",
                  "require_confirmation": true,
                  "confirmation_message": "Target environment metadata will be replaced. This is irreversible. Are you sure you want to import latest snapshot from current environment into selected target environemt?",
                  "command": {
                    "phase": "metadata",
                    "command": "import"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "target_env",
                  "label": "Select Target Environment",
                  "help": "Snapshot will be applied to target environment. Target environment metadata will be replaced.",
                  "datasource": "formdata?type=profile&field=name"
                }
              ]
            }
          ],
          "order": 1000
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Quick Starts",
      "route": "quickstart",
      "id": "quickstart",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "EC2 Backend",
          "id": "ec2_plus",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2_plus",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ec2_plus",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp"
              ],
              "title": "EC2 Backend",
              "description": "EC2 Backend with supporting services (auto-scaling, load balancing, file storage, etc)",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2_plus",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "ec2_plus",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_enabled",
                  "label": "Create EC2 Instance",
                  "help": "",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "ec2_name",
                          "ec2_instance_type",
                          "ec2_ami_id_selected",
                          "ec2_ami_id",
                          "ec2_key_name",
                          "ec2_vpc_id",
                          "ec2_availability_zone",
                          "ec2_subnet_id",
                          "ec2_vpc_security_group_ids",
                          "ec2_role_name",
                          "ec2_volume_size",
                          "ec2_user_data"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "ec2_name",
                          "ec2_instance_type",
                          "ec2_ami_id_selected",
                          "ec2_ami_id",
                          "ec2_key_name",
                          "ec2_vpc_id",
                          "ec2_availability_zone",
                          "ec2_subnet_id",
                          "ec2_vpc_security_group_ids",
                          "ec2_role_name",
                          "ec2_volume_size",
                          "ec2_user_data"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name (characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_instance_type",
                  "cli_id": "instance_type",
                  "label": "Instance Type",
                  "help": "EC2 Instance Type",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_ami_id_selected",
                  "label": "AMI",
                  "help": "",
                  "datasource": "formdata_from_aws?type=amis"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_ami_id",
                  "cli_id": "ami_id",
                  "label": "Provide AMI ID here if you do not see it in the list above. This value takes precedence.",
                  "help": "",
                  "default": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_key_name",
                  "cli_id": "key_name",
                  "label": "Key pair name",
                  "help": "Key pair name",
                  "datasource": "formdata_from_aws?type=key_pairs"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_vpc_id",
                  "cli_id": "vpc_id",
                  "label": "VPC ID",
                  "help": "The ID of the VPC in which the instance is running",
                  "datasource": "formdata_from_aws?type=vpcs"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_availability_zone",
                  "label": "Availability Zone",
                  "help": "AWS availability zone to deploy instance to",
                  "datasource": "formdata_from_aws?type=availability_zones"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_subnet_id",
                  "label": "Subnet Id to place this EC2",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "ec2_vpc_security_group_ids",
                  "label": "Security Group Ids",
                  "help": "Select one or more",
                  "datasource": "formdata_from_aws?type=vpc_security_groups"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_role_name",
                  "label": "Existing Role to create an Instance Profile",
                  "help": "",
                  "datasource": "formdata_from_aws?type=roles"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_volume_size",
                  "cli_id": "volume_size",
                  "label": "Volume Size",
                  "help": "Volume size for instance in GB",
                  "inputType": "text",
                  "default": "8"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_user_data",
                  "label": "User Data",
                  "help": "User Data",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "asg_enabled",
                  "label": "Create Auto-Scaling Group",
                  "help": "",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "asg_name",
                          "asg_launch_template_name",
                          "asg_launch_template_version",
                          "asg_instance_type",
                          "asg_ami_id",
                          "asg_placement_group_name",
                          "asg_placement_group_strategy",
                          "asg_vpc_zone_identifier",
                          "asg_desired_capacity",
                          "asg_min_size",
                          "asg_max_size"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "asg_name",
                          "asg_launch_template_name",
                          "asg_launch_template_version",
                          "asg_instance_type",
                          "asg_ami_id",
                          "asg_placement_group_name",
                          "asg_placement_group_strategy",
                          "asg_vpc_zone_identifier",
                          "asg_desired_capacity",
                          "asg_min_size",
                          "asg_max_size"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_launch_template_name",
                  "cli_id": "launch_template_name",
                  "label": "Launch Template Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_launch_template_version",
                  "cli_id": "launch_template_version",
                  "label": "Launch Template Version",
                  "inputType": "text",
                  "default": "$Latest"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_instance_type",
                  "cli_id": "instance_type",
                  "label": "EC2 Instance Type",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_ami_id",
                  "cli_id": "ami_id",
                  "label": "AMI ID",
                  "help": "RapidCLoud currently only supports Amazon Linux based AMIs. Default is 'ami-0022f774911c1d690', Amazon Linux 2 Kernel 5.10 AMI 2.0.20220426.0 x86_64 HVM gp2",
                  "default": "ami-0022f774911c1d690",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_placement_group_name",
                  "cli_id": "placement_group_name",
                  "label": "Placement Group Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "asg_placement_group_strategy",
                  "cli_id": "placement_group_strategy",
                  "label": "Placement Group Strategy",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Cluster",
                      "value": "cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Partition",
                      "value": "partition"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Spread",
                      "value": "spread"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "asg_vpc_zone_identifier",
                  "cli_id": "vpc_zone_identifier",
                  "label": "Subnets",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_desired_capacity",
                  "cli_id": "desired_capacity",
                  "label": "Desired Capacity",
                  "help": "The number of EC2 instances running in the group",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_min_size",
                  "cli_id": "min_size",
                  "label": "Min Size",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_max_size",
                  "cli_id": "max_size",
                  "label": "Max Size",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "fsx_enabled",
                  "label": "Create File System for Windows File Server",
                  "help": "",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "fsx_name",
                          "fsx_ad_service_name",
                          "fsx_ad_admin_password",
                          "fsx_storage_capacity",
                          "fsx_throughput_capacity"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "fsx_name",
                          "fsx_ad_service_name",
                          "fsx_ad_admin_password",
                          "fsx_storage_capacity",
                          "fsx_throughput_capacity"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_ad_service_name",
                  "cli_id": "ad_service_name",
                  "label": "AD Service Name",
                  "help": "Directory FQN (corp.example.com)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_ad_admin_password",
                  "cli_id": "ad_admin_password",
                  "label": "AD Admin Password",
                  "inputType": "password"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_storage_capacity",
                  "cli_id": "storage_capacity",
                  "label": "Storage Capacity",
                  "help": "(GiB) minimum of 32 and maximum of 65536",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_throughput_capacity",
                  "cli_id": "throughput_capacity",
                  "label": "Throughput Capacity",
                  "help": "Throughput (MB/s) of the file system in power of 2 increments, minimum of 8 and maximum of 2048",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "efs_enabled",
                  "label": "Create Elastic File Service",
                  "help": "",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "efs_name",
                          "efs_encrypted"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "efs_name",
                          "efs_encrypted"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "efs_name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "efs_encrypted",
                  "cli_id": "encrypted",
                  "label": "Encrypted?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_enabled",
                  "label": "Create Application Load Balancer",
                  "help": "",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "lb_name",
                          "lb_is_internal",
                          "lb_type",
                          "lb_subnets"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "lb_name",
                          "lb_is_internal",
                          "lb_type",
                          "lb_subnets"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lb_name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Load Balancer Name. Up to 26 characters.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "lb_is_internal",
                  "cli_id": "is_internal",
                  "label": "Internal?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_type",
                  "cli_id": "type",
                  "label": "Load Balancer Type",
                  "help": "",
                  "default": "application",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Application",
                      "value": "application"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Network",
                      "value": "network"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "lb_subnets",
                  "cli_id": "subnets",
                  "label": "Subnets",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### EC2 Backend\n\n\n\nThis is a quickstart for creating an EC2 backend with supporting services, including auto-scaling, load balancing, file storage (EBS, FSx for Windows, EFS)"
        },
        {
          "type": "Theia::Action",
          "label": "Semi-structured Data Pipeline",
          "id": "semi-structured-pipeline",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "semi-structured-pipeline",
              "datasource": "data?type=metadata&filter_name=module&filter_value=semi-structured-pipeline",
              "env_param_required": true,
              "columns": [
                "name",
                "rds_name",
                "rds_engine",
                "rds_type",
                "transform_name",
                "transform_job_type",
                "timestamp"
              ],
              "title": "Semi-structured Data Pipeline with Transformations",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "semi-structured-pipeline",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "semi-structured-pipeline",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Data Pipeline Name",
                  "help": "Enter Data Pipeline Name (no space or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "transform_enabled",
                  "label": "Add Transformation Glue Job for existing Datasets",
                  "help": "",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "transform_name",
                          "transform_base_datasets",
                          "transform_job_type",
                          "transform_refresh_spice"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "transform_name",
                          "transform_base_datasets",
                          "transform_job_type",
                          "transform_refresh_spice"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "transform_name",
                  "label": "Transformation Name",
                  "help": "Transformation Name (no spaces or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "transform_base_datasets",
                  "label": "Base Datasets",
                  "help": "Select source datasets for this transformation",
                  "datasource": "formdata?type=dataset|dataset_semi_structured&field=name"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "transform_job_type",
                  "label": "Job Type",
                  "help": "Comma separated names of previously added datasets",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Python shell",
                      "value": "pythonshell"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Python Spark",
                      "value": "glueetl"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "transform_refresh_spice",
                  "label": "Refresh results as QuickSight SPICE dataset"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_enabled",
                  "label": "Create RDS or Aurora Database",
                  "help": "",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "no",
                        "disableControls": [
                          "rds_name",
                          "rds_engine",
                          "rds_type",
                          "rds_multi_az",
                          "rds_database_name"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "yes",
                        "enableControls": [
                          "rds_name",
                          "rds_engine",
                          "rds_type",
                          "rds_multi_az",
                          "rds_database_name"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rds_name",
                  "label": "Database Name",
                  "help": "Enter database name (no space or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_engine",
                  "label": "Database Engine",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "MySQL",
                      "value": "mysql"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PostgreSQL",
                      "value": "postgres"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_type",
                  "label": "AWS Database Service",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "RDS",
                      "value": "rds"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Aurora",
                      "value": "aurora"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_multi_az",
                  "label": "Multi Az",
                  "help": "Multi Az",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": "yes"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": "no"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rds_database_name",
                  "label": "Schema Name",
                  "help": "Enter schema name (no space or special characters)",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Semi-Structured Data Pipeline\n\n\n\nThis is a quickstart for creating end-to-end data pipeline for semi-structured files (e.g. JSON, CSV). It includes CDC (change data capture), transformation and publishing into RDS database (MySQL or Postgres)  \n\n\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Data Ingestion",
      "route": "ingest",
      "id": "ingest",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Datalake",
          "id": "datalake",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "datalake",
              "datasource": "data?type=metadata&filter_name=module&filter_value=datalake",
              "env_param_required": true,
              "title": "Datalake",
              "description": "If you see `Datalake Name` below, then you already have a datalake. There can only be one Datalake per environment. Your datalake consists of `S3 buckets`, `roles`, `policies`, `S3 event notifications` and `lambda functions` for safely storing data and managing various data pipelines",
              "allowMarkdown": true,
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "datalake",
                    "command": "create",
                    "refresh_status": true
                  },
                  "editable_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Datalake\n\n\n\nYour datalake consists of `S3 buckets`, `roles`, `policies`, `S3 event notifications` and `lambda functions` for safely storing data and managing various data pipelines\n\n\n\n**Datalake Name**\n\n\n\nThis is optional. If not provided, default is `datalake`"
        },
        {
          "type": "Theia::Action",
          "label": "Source Databases",
          "id": "databases",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "environment",
              "datasource": "data?type=source_database",
              "env_param_required": true,
              "columns": [
                "name",
                "engine",
                "server",
                "schema"
              ],
              "title": "Source Databases",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "database",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "ingest",
                    "command": "register-source-database",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Database Name",
                  "help": "Enter database name (no space or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "engine",
                  "label": "Database Engine",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "MySQL",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "mysql",
                        "disableControls": [
                          "db"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Oracle",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "oracle"
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Postgres",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "postgres"
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "server",
                  "label": "Database Server Address",
                  "help": "Enter Database Server Address (dns name or IP address)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "port",
                  "label": "Database Server Port",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "db_user",
                  "label": "Database User",
                  "help": "Database User with permissions to get schema details",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "password",
                  "label": "Password",
                  "help": "Database Password will be encrypted and never stored or transmitted in plain text",
                  "inputType": "password"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "db",
                  "label": "Database/Catalog Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "schema",
                  "label": "Schema Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rate_of_change",
                  "label": "Database Rate of Change (GB/hr)",
                  "default": "1"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "use_dms",
                  "label": "Enable DMS (Database Migration Service)"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Source Databases\n\n\n\nEach RDBMS to be ingested via RapidCloud must be registered here.\n\n\n\n**Database Name**\n\n\n\nEnter database name without space or special characters. This is the name to be used by RapidCloud internally and doesn't have to be the same as the source database name. Use something meaningful (e.g. `orders`, `hr`)\n\n\n\n**Database Engine**\n\n\n\nSelect your source database engine from the list. RapidCloud currently supports Oracle, MS SQL Server, MySQL. PostgreSQL support is coming soon.\n\n\n\n**Database Server Address**\n\n\n\nSpecify DNS name or IP Address for your database.\n\n\n\n**Database Server Port**\n\n\n\nSpecify port for your database.\n\n\n\n**Database User**\n\n\n\nDatabase User with permissions to get schema details, read access to data and proper access to logs for replication.\n\n\n\n**Password**\n\n\n\nDatabase Password will be encrypted and saved in AWS Secrets Manager. It will never be stored or transmitted in plain text.\n\n\n\n**Database/Catalog/SID**\n\n\n\nDatabase name or catalog name \n\n\n\n**Service/Schema name**\n\n\n\nDatabase schema name\n\n\n\n**Database Rate of Change (GB/hr)**\n\n\n\nHow much data is being created or changed on the average every hour? This is important for RapidCloud to determine proper on-going replication architecture."
        },
        {
          "type": "Theia::Action",
          "label": "Source Tables",
          "id": "datasets",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datasets",
              "datasource": "data?type=dataset",
              "env_param_required": true,
              "columns": [
                "name",
                "source_database",
                "source_schema",
                "source_table",
                "size",
                "pk",
                "partitioned_by",
                "cdc_via"
              ],
              "title": "Source Database Tables",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "dataset",
              "title": "",
              "description": "",
              "readonly": false,
              "editable_hide": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "ingest",
                    "command": "add-dataset"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "source_database",
                  "label": "Database Name",
                  "help": "Select an already registered database name",
                  "datasource": "formdata?type=source_database&field=name"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "source_schema",
                  "label": "Schema Name",
                  "help": "Enter Schema Name",
                  "inputType": "text",
                  "readonly": true,
                  "dependency": {
                    "controlId": "source_database",
                    "field": "schema"
                  }
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "source_table",
                  "cli_arg": "include_tables",
                  "label": "Include Tables",
                  "help": "Select table names or type `all` to include all tables",
                  "datasource": "formdata?type=source_table&field=table_name",
                  "dynamic_datasource_test": "data?type=source_table&filter_name=database&filter_value=${source_database}"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "size",
                  "label": "Table Size",
                  "help": "Select size of table to indicate type of DMS task. See help info for details.",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "n/a",
                      "value": "n/a"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Small",
                      "value": "small"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Medium",
                      "value": "medium"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Large",
                      "value": "large"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Xlarge",
                      "value": "xlarge"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "prefix",
                  "label": "Dataset Prefix",
                  "help": "Example: prefix hr_ for source table employee will create dataset hr_employee",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "partitioned_by",
                  "label": "Partitions",
                  "help": "Comma separated list of attributes to organize this data in the datalake [default: year,month,day]",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Database Tables\n\n\n\nDepending on your specific use case, you may want to ingest only some tables or all. RapidCloud needs to know that.\n\n\n\n**Database Name**\n\n\n\nSelect an already registered database name from the list\n\n\n\n**Schema Name**\n\n\n\nSchema name is automatically selected based on database selection \n\n\n\n**Include Tables**\n\n\n\nSelect table names or `all` to include all tables\n\n\n\n**Table Size**\n\n\n\nSelect size of table to indicate type of DMS task. `Small` will be ingested and replaced based on schedule. `Medium`, `Large`, and `Xlarge` will be ingested using incremental replication.\n\n\n\n**Dataset Prefix**\n\n\n\nExample: prefix `hr_` for source table employee will create dataset `hr_employee`\n\n\n\n**Partitions**\n\n\n\nComma separated list of attributes to organize this data in the datalake [default: year,month,day]. This will be applied to `raw` (aka organized) bucket in the datalake."
        },
        {
          "type": "Theia::Action",
          "label": "DMS Schedules",
          "id": "schedules",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "schedules",
              "datasource": "data?type=schedule",
              "env_param_required": true,
              "columns": [
                "source_database",
                "task",
                "type",
                "schedule",
                "enabled"
              ],
              "title": "Replication Schedules",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "ingest",
                    "command": "schedule"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "task",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "source_database",
                  "label": "Source Database",
                  "help": "Select an already registered source database",
                  "datasource": "formdata?type=source_database&field=name"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "type",
                  "label": "Select replication type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Full replication of small tables",
                      "value": "full"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "CDC for Inserts",
                      "value": "inserts"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "CDC for Updates",
                      "value": "updates"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "schedule",
                  "label": "Enter schedule as cron expression",
                  "help": "Example: run every day at midnight => 0 4 * * ? *",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enabled",
                  "label": "Enable this migration task"
                }
              ]
            }
          ],
          "order": 40,
          "info": "### Replication Schedule\n\n\n\nUse cases that don't use DMS built-in on-going replication require replication scheduling via RapidCloud. This would be the case for larger dataabses with significant rate-of-change. For these use cases RapidCloud allows to set up tree types of replications.\n\n\n\n* Full replication for smaller tables\n\n* CDC for Inserts\n\n* CDC for Updates\n\n\n\n**Replication Type**\n\n\n\nSelect an already registered database name from the list\n\n\n\n**Enter schedule as cron expression**\n\n\n\nExample: run every day at midnight => `0 4 * * ? *`\n\n\n\n**Enable this migration task**\n\n\n\nReplication via DMS Tasks is not enabled by default\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "Data Type Mappings",
          "id": "datatypes",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datatypes",
              "datasource": "data?type=data_type_translation",
              "columns": [
                "engine_from",
                "engine_to",
                "cast_from",
                "cast_to"
              ],
              "readonly": true,
              "title": "Data Type Mappings",
              "description": "Following mappings will be used to ensure proper data type conversions between two database engines when ingesting relational data."
            }
          ],
          "order": 50
        },
        {
          "type": "Theia::Action",
          "label": "Semi-Structured Data",
          "id": "semistructured",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "semistructured",
              "datasource": "data?type=dataset_semi_structured",
              "env_param_required": true,
              "columns": [
                "name",
                "enabled",
                "format",
                "category",
                "cdc_type",
                "enable_enrich",
                "enable_transform"
              ],
              "title": "Semi-structured Data",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "ingest",
                    "command": "register-semi-structured",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Enter Dataset Name with no spaces",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enabled",
                  "label": "Enable this dataset"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "cdc_type",
                  "label": "CDC Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Delta",
                      "value": "delta"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Cumulative",
                      "value": "cumulative"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Cumulative YTD",
                      "value": "cumulative_year"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Cumulative MTD",
                      "value": "cumulative_month"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "format",
                  "label": "File Format",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "CSV",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "csv",
                        "disableControls": [
                          "sheet_name",
                          "use_first_row_as_cols"
                        ],
                        "enableControls": [
                          "separator_char",
                          "use_quotes_around_strings"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Excel (XSLX)",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "xlsx",
                        "disableControls": [
                          "separator_char",
                          "use_quotes_around_strings",
                          "use_first_row_as_cols"
                        ],
                        "enableControls": [
                          "sheet_name"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "JSON",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "json",
                        "enableControls": [
                          "use_first_row_as_cols"
                        ],
                        "disableControls": [
                          "separator_char",
                          "use_quotes_around_strings",
                          "sheet_name"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "XML",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "xml",
                        "disableControls": [
                          "separator_char",
                          "use_quotes_around_strings",
                          "sheet_name",
                          "use_first_row_as_cols"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "category",
                  "label": "Data Category (e.g. financials, legal, products)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "separator_char",
                  "label": "Separator Character",
                  "help": "This applies to CSV only. Deafault: \",\"",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "use_quotes_around_strings",
                  "label": "Use Quotes Around Strings",
                  "help": "This applies to CSV only",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": "yes"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": "no"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "use_first_row_as_cols",
                  "label": "Use First Row as Columns",
                  "help": "This applies to JSON files",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": "true"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": "false"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sheet_name",
                  "label": "Excel Sheet Name",
                  "help": "Leave empty if Excel file only contains one sheet",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_enrich",
                  "label": "Enable post-processing / data enrichment for this dataset?"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "enrich_name",
                  "label": "Name of Post-processing lambda function",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "env-vars",
                  "label": "Environment Variables for Post-processing Lambda",
                  "dynamic_datasource": "data?type=aws_infra&filter_name=resource_type,resource_name&filter_value=lambda_function,${enrich_name}&params=env_vars",
                  "add_value_label": "Add new environment variable for Post-processing Lambda"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "pk",
                  "cli_arg": "primary_key",
                  "label": "Primary Key (if known)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "partitions",
                  "label": "Partitions",
                  "help": "Comma separated list of attributes to organize this dataset [default: year,month,day]",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "source_location",
                  "cli_arg": "source-location",
                  "label": "Source Location",
                  "help": "Source Location for information only",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_transform",
                  "label": "Enable transformation for this dataset. RapidCloud will automatically trigger Transformation Glue job for this data set upon completion of CDC."
                }
              ]
            }
          ],
          "order": 60,
          "info": "### Semi-structured Data\n\n\n\nRegister each unique type of file. RapidCloud supports ingestion of CSV, JSON, XML and Excel files.\n\n\n\n**Enter Dataset Name with no spaces**\n\n\n\nThis uniquely identifes ingested data. For example, if you're ingesting CSV file that contains list of monthly invoices, then you can name this dataset `monthly_invoices`\n\n\n\n**Enable this dataset?**\n\n\n\nThis instructs RapidCloud to start CDC for this dataset as soon as it is uploaded to `ingestion` bucket.\n\n\n\n**CDC Type**\n\n\n\nCDC (Change Data Capture) type instructs RapidCloud how to apply newly ingested files. \n\n\n\n- Delta (each file only contains incremental changes)\n\n- Cumulative (each file contains all data and replaces previous file)\n\n- Cumulative YTD (each file contains all data for specified year and replaces previous file for that year)\n\n- Cumulative MTD (each file contains all data for specified year/month and replaces previous file for that year/month)\n\n\n\n**File Format**\n\n\n\nChoose file format. RapidCloud currently supports CSV, JSON, XML and Excel files\n\n\n\n**Data Category (e.g. financials, legal, products)**\n\n\n\nData Category is a convenient way of categorizing your files \n\n\n\n**Separator Character**\n\n\n\nThis applies to CSV files only. Deafault: \",\"\n\n\n\n**Use Quotes Around Strings**\n\n\n\nThis applies to CSV only\n\n\n\n**Excel Sheet Name**\n\n\n\nThis only applies to Excel files with multiple worksheets. Leave empty if Excel file only contains one worksheet\n\n\n\n**Enable post-processing / data enrichment for this dataset?**\n\n\n\nThis instructs RapidCloud to automatically trigger a lambda function as soon as file is ingested, to run some post-processing or business logic. For example, enriching dataset with additional data or calculating some derived values.\n\n\n\n**Name of Post-processing lambda function**\n\n\n\nName of the lambda function to be created by RapidCloud to run post-processing logic\n\n\n\n**Env Vars**\n\n\n\nEnvironment Variables for post-processing Lambda Function\n\n\n\n**Enable transformations for this dataset**\n\n\n\nThis instructs RapidCloud to automatically trigger transformation or analysis job for this dataset.\n\n\n\n**Primary Key**\n\n\n\nIf known, enter primary key for this dataset.\n\n\n\n**Partitions**\n\n\n\nComma separated list of attributes to organize this data in the datalake [default: `year,month,day,timestamp`]\n\n\n\n**Source Location**\n\n\n\nSource Location\n"
        },
        {
          "type": "Theia::Action",
          "label": "Data Formatting",
          "id": "formats",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "formats",
              "datasource": "data?type=format",
              "env_param_required": true,
              "columns": [
                "phase",
                "dataset",
                "attr",
                "attr_type",
                "from_format",
                "to_format"
              ],
              "title": "Data Formatting",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "format",
              "title": "",
              "description": "",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "ingest",
                    "command": "add-format"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "pipeline_phase",
                  "label": "Data Pipeline Phase",
                  "help": "Data formatting is only supported during ingestion",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Ingestion",
                      "value": "ingestion"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset",
                  "label": "Dataset Name",
                  "help": "",
                  "datasource": "formdata?type=dataset_semi_structured&field=name"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "attr",
                  "label": "Attribute Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "attr_type",
                  "label": "Attribute Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Date or Datetime",
                      "value": "date"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Amount",
                      "value": "amount"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Full Name",
                      "value": "fullname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Any",
                      "value": "any"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "from_format",
                  "label": "Source Format",
                  "help": "Dates: '%m/%d/%Y' (10/15/2020), '%m/%d/%Y %H:%M' (10/15/2020 13:59); Amount: '$*' ($152.75); Full Name: 'l,f' (Doe, John), 'f l'",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "to_format",
                  "label": "Target Format",
                  "help": "Dates: '%Y-%m-%d' (2020-10-15); Amount: '*' (152.75); Full Name: 'split'",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 70,
          "info": "### Data Formatting\n\n\n\nSpecify formatting rules at the field level for a dataset \n\n\n\n**Data Pipeline Phase**\n\n\n\nData formatting is currently only supported during ingestion\n\n\n\n**Dataset Name**\n\n\n\nSelect existing dataset \n\n\n\n**Attribute Name**\n\n\n\nEnter attribute name\n\n\n\n**Attribute Type**\n\n\n\nSelect attribute type \n\n\n\n**Source Format**\n\n\n\nSpecify source format using Python format structure\n\n\n\nExamples:\n\n- Dates: '%m/%d/%Y' (10/15/2020), '%m/%d/%Y %H:%M' (10/15/2020 13:59)\n\n- Amount: '$*' ($152.75) \n\n- Full Name: 'l,f' (Doe, John), 'f l'\n\n- Use \"eval\" to instruct RapidCloud to apply \"`target format`\" by evaluating Python statement\n\n\n\n**Target Format**\n\n\n\nSpecify target format using Python format structure\n\n\n\nExamples:\n\n- Dates: '%Y-%m-%d' (2020-10-15)\n\n- Amount: '*' (152.75)\n\n- Full Name: 'split'\n\n- Enter Python statement (e.g `patient_gender[0].upper()`) if \"`source format`\" is `eval`\n"
        },
        {
          "type": "Theia::Action",
          "label": "Enable Semi-structured",
          "id": "enable_semi_structured",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "status",
              "title": "Enable Semi-structured Datasets",
              "description": "Enable all disabled semi-structured datasets and run CDC for initially uploaded files for the first time",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to enable all disabled semi-structured datasets?",
                  "command": {
                    "phase": "ingest",
                    "command": "enable-semi-structured"
                  }
                }
              ]
            }
          ],
          "order": 80
        },
        {
          "type": "Theia::Action",
          "label": "Unstructured Data",
          "id": "unstructured",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "unstructured",
              "datasource": "data?type=dataset_unstructured",
              "env_param_required": true,
              "columns": [
                "name",
                "type",
                "category",
                "enable_transform"
              ],
              "title": "Unstructured Data",
              "description": "documents, audio, video, graphics, etc",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "ingest",
                    "command": "register-unstructured"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Enter Dataset Name with no spaces",
                  "help": "e.g. resumes, scanned_hr_forms, security_videos",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "type",
                  "label": "File Type",
                  "help": "e.g. document, image, video, audio",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "category",
                  "label": "Data Category",
                  "help": "e.g. financials, legal, products",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "size",
                  "label": "Approximate Total Initial Size (GB)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "count",
                  "label": "Approximate number of files (if known)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rate_of_change",
                  "label": "Rate of Change (GB/hr if known)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "source_location",
                  "label": "Location in the filesystem (optional)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "enable_transform",
                  "label": "Enable transformations for this data?"
                }
              ]
            }
          ],
          "order": 90,
          "info": "### Unstructured Data\n\n\n\nRegister each unique type of unstructured file\n\n\n\n**Enter Dataset Name with no spaces**\n\n\n\nThis uniquely identifes ingested data. For example, if you're ingesting resumes as PDF files, then you can name this dataset `resumes`\n\n\n\n**File Type**\n\n\n\ne.g. document, image, video, audio\n\n\n\n**Data Category (e.g. financials, legal, products)**\n\n\n\nData Category is a convenient way of categorizing your files \n\n\n\n**Total Initial Size (optional)**\n\n\n\nApproximate Total Initial Size (GB)\n\n\n\n**Initial Count (optional)**\n\n\n\nApproximate number of files (if known)\n\n\n\n**Rate of Change**\n\n\n\nRate of Change (GB/hr if known)\n\n\n\n**Location in the filesystem (optional)**\n\n\n\nSource file Location for reference\n\n\n\n**Enable transformations for this dataset**\n\n\n\nThis instructs RapidCloud to automatically trigger transformation or analysis job for this file\n"
        },
        {
          "type": "Theia::Action",
          "label": "Database Events",
          "id": "events",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "events",
              "datasource": "data?type=event",
              "env_param_required": true,
              "columns": [
                "name",
                "source_database",
                "source_table",
                "partitions"
              ],
              "title": "Events",
              "description": "Each event must correspond to your source database tables (RapidCloud `dataset`). This use case is appropriate when you need to process source database changes in near-realtime. Events are consumed via Kinesis Firehose and saved in S3",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "Events are processed in near-realtime via Kinesis Firehose",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Add Event",
                  "command": {
                    "phase": "ingest",
                    "command": "add-event",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Select",
                  "id": "name",
                  "cli_arg": "dataset_name",
                  "label": "Dataset Name",
                  "help": "",
                  "datasource": "formdata?type=dataset&field=name"
                }
              ]
            }
          ],
          "order": 100,
          "info": "### Events\n\n\n\nEach event must correspond to your source database tables (RapidCloud `dataset`). This use case is appropriate when you need to process source database changes in near-realtime. Events are consumed via Kinesis Firehose and saved in S3\n\n\n\n**Dataset Name**\n\n\n\nSelect an existing dataset \n"
        },
        {
          "type": "Theia::Action",
          "label": "Kinesis or Kafka Streams",
          "id": "streams",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "streams",
              "datasource": "data?type=stream",
              "env_param_required": true,
              "columns": [
                "name",
                "type",
                "consumer",
                "enabled"
              ],
              "title": "Streams",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "Kinesis or Managed Kafka streams are consumed by Lambda function or Glue streaming job in realtime",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save Event Source",
                  "command": {
                    "phase": "ingest",
                    "command": "register-stream",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Stream Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "type",
                  "label": "Stream Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Kinesis Data Streams",
                      "value": "kinesis"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Managed Kafka",
                      "value": "kafka"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "event_source_arn",
                  "label": "Event Source ARN",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "consumer",
                  "label": "Consumer Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Lambda Function",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "lambda_function",
                        "enableControls": [
                          "memory_size"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Glue Spark Streaming Job",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "glue_streaming",
                        "disableControls": [
                          "memory_size"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "memory_size",
                  "label": "Memory Size",
                  "help": "For Lambda function only",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 110,
          "info": "### Streaming \n\n\n\nKinesis or Managed Kafka streams are consumed by Lambda functions or Glue streaming jobs in real-time.\n\n\n\n**Stream Name**\n\n\n\nStream Name (no spaces or special characters)\n\n\n\n**Stream Type**\n\n\n\n`Kinesis Data Streams` and `Managed Kafka` are currently supported\n\n\n\n**Event Source ARN**\n\n\n\nAWS ARN for your streaming service\n\n\n\n**Consumer Type**\n\n\n\n`Lambda Function` and `Glue Spark Streaming Job` are currently supported \n\n\n\n**Memory Size**\n\n\n\nIn MB - for Lambda function only (default 128 MB)"
        },
        {
          "type": "Theia::Action",
          "label": "Activate Ingestions",
          "id": "start",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "status",
              "title": "Activate Environment",
              "description": "Equivalent of running `kc ingest start` command. <br/><br/>This action performs the following (where applicable) <br/>- (1) generate DMS table mappings <br/>- (2) generate ingestiondb and rawdb catalog tables for relational data <br/>- (3) generate transformation Glue job templates <br/>- (4) activate daily ingestion schedules via DMS <br/>- (5) generate ingestiondb catalog tables for semi-structured data <br/>- (6) deploy generated Glue jobs (this will replace existing Glue scripts)",
              "submit": "Activate Environment",
              "commands": [
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want activate data ingestion for this environment?",
                  "command": {
                    "phase": "ingest",
                    "command": "start"
                  }
                }
              ]
            }
          ],
          "order": 1000
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Data Catalog",
      "route": "catalog",
      "id": "catalog",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Update Glue Catalogs",
          "id": "update_catalogs",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "update_catalogs",
              "title": "Update Glue Catalog via Glue Crawlers",
              "description": "This process runs Glue crawler for the selected datalake area",
              "submit": "Run Crawlers",
              "commands": [
                {
                  "label": "Run Ingestion Crawlers",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "deploy",
                    "command": "run-crawlers",
                    "pipeline_phase": "ingestion"
                  }
                },
                {
                  "label": "Run Raw Crawlers",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "deploy",
                    "command": "run-crawlers",
                    "pipeline_phase": "raw"
                  }
                },
                {
                  "label": "Run Analysis Crawlers",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "deploy",
                    "command": "run-crawlers",
                    "pipeline_phase": "analysis"
                  }
                }
              ]
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "Change Data Types",
          "id": "post-crawlers",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "post-crawlers",
              "title": "Change Glue Data Types (ingestion catalog)",
              "description": "This process allows bulk change of data types in ingestion catalog after the initial ingestion process completed and catalog generated for the first time. For example, this might be needed when Glue crawler identifies a field as numeric, but it has to be string",
              "commands": [
                {
                  "label": "Change data types",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to run this?",
                  "command": {
                    "phase": "ingest",
                    "command": "post-crawlers"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "from-format",
                  "label": "From Format",
                  "help": "e.g double, bigint",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "to-format",
                  "label": "To Format",
                  "help": "e.g string",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 20
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Analytics",
      "route": "transform",
      "id": "transform",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Transformations",
          "id": "transformations",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "transformations",
              "datasource": "data?type=transformation",
              "env_param_required": true,
              "columns": [
                "name",
                "base_datasets",
                "job_type",
                "refresh_spice"
              ],
              "title": "Transformations (ETL/ELT)",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "data",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "transform",
                    "command": "add-dataset",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Transformation Name",
                  "help": "Transformation Name (no spaces or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "base_datasets",
                  "label": "Base Datasets",
                  "help": "Select source datasets for this transformation",
                  "datasource": "formdata?type=dataset|dataset_semi_structured&field=name"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "job_type",
                  "label": "Job Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Python shell",
                      "value": "pythonshell"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Python Spark",
                      "value": "glueetl"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "refresh_spice",
                  "label": "Refresh results as QuickSight SPICE dataset"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Transformations\n\n\n\nTransformations are `Glue Jobs` to perform batch style data transformations, aggregations, integrations and analytics. RapidCloud generates Glue job templates for you, based on the selected `Job Type`. Transformations use `raw` catalog for input datasets and `analysis` catalog for the results. Transformations are automatically executed as part of you Data Pipeline, and when completed, they optionally trigger data publishing jobs\n\n\n\n**Transformation Name**\n\n\n\nTransformation Name (no spaces or special characters)\n\n\n\n**Base Datasets**\n\n\n\nSelect source datasets from `raw` catalog for this transformation\n\n\n\n**Job Type**\n\n\n\n`Python Shell` and `Python Spark` job types are currently supported\n\n\n\n**Refresh results as QuickSight SPICE dataset**\n\n\n\nIf enabled, transformation job will automatically update QuickSight SPICE Datasets to improve BI reports and dashboards performance when using Amazon QuickSight"
        },
        {
          "type": "Theia::Action",
          "label": "Analytics",
          "id": "analytics",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "analytics",
              "datasource": "data?type=analytics",
              "env_param_required": true,
              "columns": [
                "name",
                "runtime"
              ],
              "title": "Analytics",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "analytics",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Save",
                  "command": {
                    "phase": "analytics",
                    "command": "add-service",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Job Name",
                  "help": "No spaces or special characters (e.g. fraud_detection, customer_recommendations)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "runtime",
                  "label": "Runtime execution service",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "AWS EMR - Spark Streaming",
                      "value": "emr"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "AWS Glue Streaming",
                      "value": "glue"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Analytics\n\n\n\nSet up real-time or near real-time analytics. RapidCloud generates job templates for you, based on the selected `Runtime execution service`\n\n\n\n**Job Name**\n\n\n\nJob Name (no spaces or special characters)\n\n\n\n**Runtime execution service**\n\n\n\n`AWS EMR Spark Streaming` and `AWS Glue Streaming` are currently supported\n"
        },
        {
          "type": "Theia::Action",
          "label": "Glue Jobs",
          "id": "custom_glue_job",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "custom_glue_job",
              "datasource": "data?type=aws_infra&filter_name=command&filter_value=add-glue-job&field=job_type&field_value=params.command.name",
              "env_param_required": true,
              "columns": [
                "resource_name",
                "resource_type",
                "job_type",
                "command",
                "timestamp"
              ],
              "title": "Custom Glue Job",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "aws_infra",
              "title": "",
              "description": "",
              "readonly": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "aws",
                    "command": "add-glue-job",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "resource_name",
                  "cli_arg": "name",
                  "label": "Glue Job Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "job_type",
                  "label": "Job Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Python shell",
                      "value": "pythonshell"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Spark",
                      "value": "glueetl"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Spark streaming",
                      "value": "gluestreaming"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Custom Glue Job\n\n\n\nCreate a custom Glue Job. RapidCloud generates job templates for you, based on the selected `Job Type`\n\n\n\n**Glue Job Name**\n\n\n\nGlue Job Name (no spaces or special characters)\n\n\n\n**Job Type**\n\n\n\n`Python Shell`, `Python Spark` and `Python Spark Streaming` are currently supported\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Databases",
      "route": "databases",
      "id": "databases",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Redshift",
          "id": "redshift",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "redshift",
              "datasource": "data?type=metadata&filter_name=module&filter_value=redshift",
              "env_param_required": true,
              "columns": [
                "module",
                "name",
                "timestamp"
              ],
              "title": "Redshift Cluster",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "redshift",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "redshift",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Redshift Cluster Name",
                  "help": "Enter cluster name (no spaces, hyphens or special characters)",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Redshift Cluster \n\n\n\nCreate Redshift Cluster\n"
        },
        {
          "type": "Theia::Action",
          "label": "Redshift Tables",
          "id": "datawarehouse_tables",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "datawarehouse_tables",
              "datasource": "data?type=publishing&filter_name=db_type&filter_value=redshift",
              "env_param_required": true,
              "columns": [
                "name",
                "db_name",
                "primary_key",
                "sort_key",
                "dist_key",
                "dist_style"
              ],
              "title": "Redshift Tables",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "datawarehouse_tables",
              "title": "",
              "description": "",
              "readonly": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "redshift",
                    "command": "add_table",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "db_name",
                  "cli_id": "redshift_db_name",
                  "label": "Database Name",
                  "help": "Select an already registered database name",
                  "datasource": "formdata?type=datawarehouse&field=name"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Table Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "primary_key",
                  "cli_id": "redshift_primary_key",
                  "label": "Primary Key",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "sort_key",
                  "cli_id": "redshift_sort_key",
                  "label": "Sort Key",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "dist_key",
                  "cli_id": "redshift_dist_key",
                  "label": "Distribution Key",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dist_style",
                  "cli_id": "redshift_dist_style",
                  "label": "Data Distribution Style",
                  "help": "Defines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "AUTO",
                      "value": "AUTO"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "EVEN",
                      "value": "EVEN"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "KEY",
                      "value": "KEY"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ALL",
                      "value": "ALL"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 40,
          "info": "### Redshift Tables \n\n\n\nDefine Redshift Tables\n\n\n\n**Redshift Database Name**\n\n\n\nSelect existing Redshift Cluster\n\n\n\n**Table Name**\n\n\n\nTable Name\n\n\n\n**Primary Key**\n\n\n\nTable Primary Key\n\n\n\n**Sort Keys**\n\n\n\nComma separated sort keys\n\n\n\n**Distribution Key**\n\n\n\nDistribution Key\n\n\n\n**Distribution Style**\n\n\n\nDefines data distribution style for the table. Allowed values are `{ AUTO | EVEN | KEY | ALL }`\n"
        },
        {
          "type": "Theia::Action",
          "label": "RDS/Aurora",
          "id": "rds",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "rds",
              "datasource": "data?type=metadata&filter_name=module&filter_value=rds",
              "env_param_required": true,
              "columns": [
                "name",
                "rds_engine",
                "rds_type"
              ],
              "title": "Databases",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "rds",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "rds",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Database Name",
                  "help": "Enter database name (no space or special characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_engine",
                  "label": "Database Engine",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "MySQL",
                      "value": "mysql"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PostgreSQL",
                      "value": "postgres"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_type",
                  "label": "AWS Database Service",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "RDS",
                      "value": "rds"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Aurora",
                      "value": "aurora"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "rds_multi_az",
                  "label": "Multi Az",
                  "help": "Multi Az",
                  "default": "no",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Yes",
                      "value": "yes"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "No",
                      "value": "no"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "rds_database_name",
                  "label": "Schema Name",
                  "help": "Enter schema name (no space or special characters)",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 50,
          "info": "### RDS or Aurora \n\n\n\nCreate RDS or Aurora Database\n\n\n\n**Database Name**\n\n\n\nEnter database name (no spaces or special characters)\n\n\n\n**Database Engine**\n\n\n\nSelect Database Engine. `MySQL` or `PostgreSQL` \n\n\n\n**AWS Database Service**\n\n\n\nSelect Database Service. `RDS` or `Aurora`\n\n\n\n**Multi Az**\n\n\n\nChoose single or multi-AZ cluster\n\n\n\n**Schema Name**\n\n\n\nEnter Schema Name "
        },
        {
          "type": "Theia::Action",
          "label": "RDS/Aurora Tables",
          "id": "target_database_tables",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "target_database_tables",
              "datasource": "data?type=publishing&filter_name=db_type&filter_value=aurora,rds",
              "env_param_required": true,
              "columns": [
                "name",
                "db_type",
                "db_engine",
                "db_name",
                "primary_key"
              ],
              "title": "Target Database Tables",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "target_database_tables",
              "title": "",
              "description": "",
              "readonly": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "rds",
                    "command": "add_table",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "db_name",
                  "label": "Database Name",
                  "help": "Select an already registered database name",
                  "datasource": "formdata?type=target_database&field=name"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Table Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "primary_key",
                  "label": "Primary Key",
                  "help": "",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 60,
          "info": "### RDS or Aurora\n\n\n\nDefine Database Tables\n\n\n\n**Database Name**\n\n\n\nSelect existing Database Name\n\n\n\n**Table Name**\n\n\n\nTable Name\n\n\n\n**Primary Key**\n\n\n\nTable Primary Key\n"
        },
        {
          "type": "Theia::Action",
          "label": "Generate Schemas",
          "id": "pre-publish",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "pre-publish",
              "title": "Generate RDS/Aurora and Redshift Schemas",
              "description": "This one-time process includes (where applicable) <br/>- (1) generating schemas for RDS/Aurora databases <br/>- (2) generating schema for Redshift",
              "submit": "Run Pre-Publish Process",
              "commands": [
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure?",
                  "command": {
                    "phase": "publishing",
                    "command": "pre-publish"
                  }
                }
              ]
            }
          ],
          "order": 70
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Security & Compliance",
      "route": "compliance",
      "id": "compliance",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "PII Rules",
          "id": "rules_semi",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "rules_semi",
              "datasource": "data?type=rule",
              "env_param_required": true,
              "columns": [
                "dataset",
                "attr",
                "attr_type",
                "action"
              ],
              "title": "PII Rules",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "rule",
              "title": "",
              "description": "",
              "readonly": false,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "secure",
                    "command": "add-rule"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "dataset",
                  "label": "Dataset Name",
                  "help": "",
                  "datasource": "formdata?type=dataset_semi_structured&field=name"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "attr",
                  "label": "Attribute Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "attr_type",
                  "label": "Attribute Type",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "SSN",
                      "value": "ssn"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Full Name",
                      "value": "fullname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "First Name",
                      "value": "firstname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Last Name",
                      "value": "lastname"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Date of birth",
                      "value": "dob"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ID",
                      "value": "id"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Float (e.g, amount)",
                      "value": "float"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Integer",
                      "value": "int"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "String",
                      "value": "string"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "action",
                  "label": "Action",
                  "help": "",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Deidentify",
                      "value": "deidentify"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Omit",
                      "value": "omit"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mask",
                      "value": "mask"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Encrypt",
                      "value": "encrypt"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 10,
          "info": "### PII Rules\n\n\n\nDefine PII Rules to be automatically applied when processing ingested data, before applying CDC (Change Data Capture) or any other Data Formatting.\n\n\n\n**Dataset Name**\n\n\n\nSelect existing dataset\n\n\n\n**Attribute Name**\n\n\n\nName of the attribite to apply PII rule to\n\n\n\n**Attribute Type**\n\n\n\nChoose one of the following supported attribute types: `{ SSN, Full Name, First Name, Last Name, Date of birth, ID, Float (e.g, amount), Integer, String }`\n\n\n\n**Action**\n\n\n\nChoose one of the following supported actions: `{ Deidentify, Omit, Mask, Encrypt }`\n"
        },
        {
          "type": "Theia::Action",
          "label": "Amazon Certificate Manager",
          "id": "acm",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "acm",
              "datasource": "data?type=metadata&filter_name=module&filter_value=acm",
              "env_param_required": true,
              "columns": [
                "timestamp",
                "acm_cert_domain_name",
                "acm_cert_validation_method",
                "acm_r53_zone_name"
              ],
              "title": "Amazon Certificate Manager",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "acm",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Register",
                  "command": {
                    "phase": "acm",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "acm_cert_domain_name",
                  "cli_id": "cert_domain_name",
                  "label": "Certificate Domain Name",
                  "help": "Domain name for which the certificate should be issued",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "acm_cert_validation_method",
                  "cli_id": "cert_validation_method",
                  "label": "Certificate Validation Method",
                  "default": "DNS",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "DNS",
                      "value": "DNS"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Email",
                      "value": "EMAIL"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "acm_r53_zone_name",
                  "cli_id": "r53_zone_name",
                  "label": "Route53 Zone Name",
                  "help": "Route 53 Zone Name for Validation",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Amazon Certificate Manager\n\n\n\nAWS Certificate Manager is a service that lets you easily provision, manage, and deploy SSL certificates\n\n\n\n**Certificate Domain Name**\n\n\n\nDomain name for which the certificate should be issued\n\n\n\n**Certificate Validation Method**\n\n\n\nWhich method to use for validation, allowed values are `(DNS | EMAIL)`\n\n\n\n**Route53 Zone Name**\n\n\n\nRoute 53 Zone name to validate against when using DNS validation"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Trend Micro Cloud One",
      "route": "trendmicro",
      "id": "trendmicro",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Integration Features",
          "id": "trendmicro_features",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_features",
              "env_param_required": true,
              "title": "RapidCloud / Trend Micro Cloud One Integration",
              "description": "<img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - File Storage.png' alt='File Storage Security Flow' width='820'/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - FSS Compare.png' alt='RapidCloud Trend Micro Integration - File Storage Security' width='820'/><br/><br/><br/><br/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - Application Compare.png' alt='RapidCloud Trend Micro Integration - Application Security' width='820'/><br/><br/><img src='https://kinect-rapid-cloud.s3.amazonaws.com/docs/img/TrendMicro - Workload Compare.png' alt='RapidCloud Trend Micro Integration - Workload Security' width='820'/>"
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "Setup",
          "id": "trendmicro_setup",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_setup",
              "datasource": "trendmicro/setup?extra=true",
              "env_param_required": true,
              "title": "Trend Micro API Key",
              "description": "Trend Micro API Key needs to be set up only once, from any of the environments, and it will be used accross all your RapidCloud Environments going forward.",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "trendmicro",
                    "command": "setup",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_api_id",
                  "label": "Trend Micro Cloud One API ID",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_api_key",
                  "label": "Trend Micro Cloud One API Key",
                  "help": "API Key is encrypted and saved in Secretes Manager",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "trendmicro_enable_filestorage_security",
                  "label": "Enable Trend Micro File Storage Security for this environment. When enabled, an `Enable Trend Micro File Storage Security` toggle will appear on `Storage -> S3` page."
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "trendmicro_enable_workload_security",
                  "label": "Enable Trend Micro Workload Security for this environment. When enabled, an `Enable Trend Micro Workload Security` toggle and `Workload Group` drop-down will appear on `Compute -> Managed EC2 Instances | Unmanaged EC2 Instances | EC2 Launch Templates` pages."
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "trendmicro_enable_application_security",
                  "label": "Enable Trend Micro Application Security for this environment. When enabled, an `Enable Trend Micro Application Security` toggle and `Application Security Group` drop-down will appear on `Compute -> Lambda Functions` page."
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Trend Micro API Key\n\n\n"
        },
        {
          "type": "Theia::Action",
          "label": "File Storage Security Stacks",
          "id": "trendmicro_file_storage",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_file_storage",
              "datasource": "trendmicro/fss/stacks?test=test",
              "env_param_required": true,
              "columns": [
                "trendmicro_stack_type",
                "trendmicro_bucket",
                "tm_fss_stackID",
                "tm_fss_status",
                "timestamp"
              ],
              "title": "File Storage Security",
              "allowMarkdown": true,
              "description": "<b>Trend Micro Cloud One - File Storage Security Stacks</b><br/>Automatically scan ingested data and integrate with your data pipelines<br/><a href='https://cloudone.trendmicro.com/filestorage/deployment' target='_blank'>Open Scan Activity Console</a>\n\n\n",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_file_storage",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this stack? This will delete CloudFormation Stack in your AWS account and corresponding File Storage Security stack in your Trend Micro Cloud One account.",
                  "command": {
                    "phase": "trendmicro",
                    "command": "filestorage_delete_stack",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to create or update File Storage Security Stack?",
                  "command": {
                    "phase": "trendmicro",
                    "command": "filestorage_create_stack",
                    "refresh_status": true
                  },
                  "editable_hide": true
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "cli_arg": "trendmicro_fqn",
                  "inputType": "text",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_stack_type",
                  "label": "Stack Type",
                  "help": "Trend Micro Cloud One File Storage Security Stack Type [all-in-one|scanner|storage]",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "All-In-One",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "all-in-one",
                        "enableControls": [
                          "trendmicro_bucket"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Scanner",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "scanner",
                        "disableControls": [
                          "trendmicro_bucket"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Storage",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "storage",
                        "enableControls": [
                          "trendmicro_bucket"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_bucket",
                  "label": "S3 Bucket Name",
                  "help": "Bucket Name (Storage Stack only)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cf_stack_name",
                  "cli_arg": "ignored",
                  "label": "CloudFormation Stack Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_role_arn",
                  "cli_arg": "ignored",
                  "label": "Stack Management Role ARN",
                  "help": "Stack Management Role ARN is provided to Trend Micro automatically by RapidCloud upon creation of this stack",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_stackID",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Stack ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_account",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Account",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_region",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Region",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_updated",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Stack Updated Timestamp",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_fss_name",
                  "cli_arg": "ignored",
                  "label": "Trend Micro Cloud One - File Storage Security Stack Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Trend Micro Cloud One - File Storage Security\n\n\n\n**One-click Deployment**\n\n\n\nProvides one-click deployment of Trend Micro Cloud Once File Storage Security into your environment, to automatically scan ingested data and integrate with your data pipelines.\n\n\n\n**Files never leave your storage**\n\n\n\nWith the scanner deployed in your AWS account, the files being scanned never leave your environment, perfect for organizations with data sovereignty or compliance obligations.\n\n\n\n**Unlimited file types and sizes**\n\n\n\nThe serverless solution gives tremendous flexibility on performance without maintaining traditional scanning machines. It can scan all file types and sizes.\n\n\n\n**Ransomware protection**\n\n\n\nRansomware targets businesses of any size, crippling your organization if no backups are available. Enable scanning before downloading the file to prevent ransomware from entering your environment.\n\n\n\n**Quarantine malicious files**\n\n\n\nAny detected malicious object will be quarantined into a separate S3 bucket to ensure that only known good files are allowed in your downstream workflow.\n\n\n\n**Always scan with the latest patterns**\n\n\n\nThe latest patterns are daily pushed to the scanners, ensuring that the security of the data in your cloud storage is always protected using the most up-to-date pattern."
        },
        {
          "type": "Theia::Action",
          "label": "Workload Security Groups",
          "id": "trendmicro_workload_create_group",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_workload_create_group",
              "datasource": "trendmicro/workload/groups?test=test",
              "env_param_required": true,
              "columns": [
                "name",
                "trendmicro_description",
                "trendmicro_policy",
                "timestamp"
              ],
              "title": "Trend Micro Workload Security Groups",
              "allowMarkdown": true,
              "description": "<b>Trend Micro Cloud One - Workload Security Groups</b><br/>Protect your **Linux EC2 Instances**. (_Windows coming soon_)<br/><a href='https://cloudone.trendmicro.com/workload/Application.screen?#computers_root' target='_blank'>Open Workload Security Console</a>\n\n\n",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_workload_create_group",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "trendmicro",
                    "command": "workload_create_group",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "Group Name will be automatically prefixed with environment name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_description",
                  "label": "Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_policy",
                  "label": "Policy",
                  "datasource": "trendmicro/workload/policies?col=name",
                  "help": "RapidCloud currently only supports Linux EC2 Instances"
                }
              ]
            }
          ],
          "order": 40,
          "info": "### Workload Security Groups\n\n\n\nCreating EC2 (computer) groups is useful from an organizational point of view and it speeds up the process of applying and managing policies."
        },
        {
          "type": "Theia::Action",
          "label": "Application Security Groups",
          "id": "trendmicro_application_create_group",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "trendmicro_file_storage",
              "datasource": "trendmicro/as/groups?test=test",
              "env_param_required": true,
              "columns": [
                "tm_as_name",
                "tm_as_group_id",
                "tm_as_activated_on"
              ],
              "title": "Application Security Groups",
              "allowMarkdown": true,
              "description": "<b>Trend Micro Cloud One - Application Security Groups</b><br/>Protect your **Python Lambda Fucntions**. (_More runtimes are coming soon_)<br/><a href='https://cloudone.trendmicro.com/application#/policies' target='_blank'>Open Application Security Console</a>\n\n\n"
            },
            {
              "type": "Theia::Step::Form",
              "id": "trendmicro_application_create_group",
              "title": "",
              "description": "",
              "env_param_required": true,
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save Group Settings",
                  "command": {
                    "phase": "trendmicro",
                    "command": "application_create_group"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Group Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_as_group_id",
                  "label": "Group ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "tm_as_activated_on",
                  "label": "Activated On",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_credential_stuffing",
                  "label": "Credential Stuffing Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_file_access",
                  "label": "Illegal File Access Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_ip_protection",
                  "label": "IP Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_malicious_file_upload",
                  "label": "Malicious File Upload Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_malicious_payload",
                  "label": "Malicious Payload Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_rce",
                  "label": "Remote Command Execution Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_redirect",
                  "label": "Redirect Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "trendmicro_sqli",
                  "label": "SQL Injection Protection Policy",
                  "default": "disable",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Disable",
                      "value": "disable"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Mitigate",
                      "value": "mitigate"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Report",
                      "value": "report"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "trendmicro_group_secret",
                  "label": "Group Secret (this is Secrets Manager Secret name, not actual secret)",
                  "help": "Group Secret is encrypted and saved in Secretes Manager",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 50,
          "info": "### Trend Micro Cloud One \u2013 Application Security\n\n\n\n**Application Security Groups**\n\n\n\nAn application security group is a collection of Lambda Functions sharing a common set of policies."
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Compute",
      "route": "compute",
      "id": "compute",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Lambda Functions",
          "id": "lambda",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "lambda",
              "datasource": "data?type=metadata&filter_name=module&filter_value=lambda",
              "env_param_required": true,
              "columns": [
                "module",
                "name",
                "timestamp"
              ],
              "title": "Lambda Functions",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "lambda",
              "title": "",
              "description": "",
              "readonly": false,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command",
                    "refresh_status": true
                  },
                  "new_hide": true
                },
                {
                  "label": "Submit",
                  "command": {
                    "phase": "lambda",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "fqn",
                  "hidden": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_name": "name",
                  "label": "Lambda Function Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lambda_memory_size",
                  "label": "Memory Size",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lambda_timeout",
                  "label": "Enter Lambda Function timeout in Seconds (default is 900)",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "lambda_schedule",
                  "label": "Enter a cron expression",
                  "help": "Example: run every day at midnight => 0 4 * * ? *",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::KeyValue",
                  "id": "lambda_env_vars",
                  "label": "Environment Variables",
                  "dynamic_datasource": "data?type=metadata&filter_name=module,name&filter_value=lambda,${name}&result=params,lambda_env_vars",
                  "add_value_label": "Add new environment variable for your Lambda Function"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Lambda Function\n\n\n\nCreate Lamabda Function. RapidCloud generates function template for you as well as helkpful Lambda Layers for common Python Lambda operations, including boto3 (awswrangler) and various database drivers.\n\n\n\n**Lambda Function Name**\n\n\n\nLambda Function Name\n\n\n\n**Memory**\n\n\n\nSpecify how much memory to allocate for this Lambda Function. Default is 128 MB\n\n\n\n**Schedule**\n\n\n\nEnter a cron expression if you want this lambda function to be automatically invoked on a specific schedule. This will create a CloudWatch Event Rule.\n\n\n\nExample: run every day at midnight => `0 4 * * ? *`\n\n\n\n**Environment Variables**\n\n\n\nEnvironment Variables for this Lambda Function\n"
        },
        {
          "type": "Theia::Action",
          "label": "Managed EC2 Instances",
          "id": "ec2",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ec2",
              "env_param_required": true,
              "columns": [
                "name",
                "ec2_instance_type",
                "ec2_ami_id",
                "ec2_availability_zone",
                "ec2_volume_size",
                "timestamp"
              ],
              "title": "Managed EC2 Instances",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "ec2",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name (characters)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_instance_type",
                  "cli_id": "instance_type",
                  "label": "Instance Type",
                  "help": "EC2 Instance Type",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_ami_id_selected",
                  "label": "AMI",
                  "help": "",
                  "datasource": "formdata_from_aws?type=amis"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_ami_id",
                  "cli_id": "ami_id",
                  "label": "Provide AMI ID here if you do not see it in the list above. This value takes precedence.",
                  "help": "",
                  "default": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_key_name",
                  "cli_id": "key_name",
                  "label": "Key pair name",
                  "help": "Key pair name",
                  "datasource": "formdata_from_aws?type=key_pairs"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_vpc_id",
                  "cli_id": "vpc_id",
                  "label": "VPC ID",
                  "help": "The ID of the VPC in which the instance is running",
                  "datasource": "formdata_from_aws?type=vpcs"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_availability_zone",
                  "label": "Availability Zone",
                  "help": "AWS availability zone to deploy instance to",
                  "datasource": "formdata_from_aws?type=availability_zones"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_subnet_id",
                  "label": "Subnet Id to place this EC2",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "ec2_vpc_security_group_ids",
                  "label": "Security Group Ids",
                  "help": "Select one or more",
                  "datasource": "formdata_from_aws?type=vpc_security_groups"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ec2_role_name",
                  "label": "Existing Role to create an Instance Profile",
                  "help": "",
                  "datasource": "formdata_from_aws?type=roles"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_volume_size",
                  "cli_id": "volume_size",
                  "label": "Volume Size",
                  "help": "Volume size for instance in GB",
                  "inputType": "text",
                  "default": "8"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_user_data",
                  "label": "User Data",
                  "help": "User Data",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Elastic Compute Cloud\n\n\n\nScalable compute instances in the cloud\n\n\n\n**Name**\n\n\n\nThe name of your instance\n\n\n\n**Instance Type**\n\n\n\nThe instance type to use for your instance, defaults to `t2.micro`.\n\nView available instance types [here](https://aws.amazon.com/ec2/instance-types)\n\n\n\n**Availability Zone**\n\n\n\nAZ to start the instance in\n\n\n\n**Volume Size**\n\n\n\nSize of the attached volume in gibibytes (GiB)"
        },
        {
          "type": "Theia::Action",
          "label": "Unmanaged EC2 Instances",
          "id": "ec2_list",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2_list",
              "datasource": "resources/ec2?p=dummy",
              "env_param_required": true,
              "columns": [
                "ec2_instance_id",
                "ec2_instance_type",
                "ec2_instance_name",
                "ec2_launch_time",
                "ec2_enable_trend"
              ],
              "title": "Unmanaged EC2 Instances",
              "description": "This list only includes instances not managed by RapidCloud",
              "submit": "Continue",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2_list",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Submit",
                  "command": {
                    "phase": "ec2",
                    "command": "enable_trend",
                    "refresh_status": false
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_instance_name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_instance_id",
                  "label": "Instance ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 40
        },
        {
          "type": "Theia::Action",
          "label": "EC2 Launch Templates",
          "id": "ec2_list_launch_templates",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ec2_list_launch_templates",
              "datasource": "resources/ec2_launch_templates?p=dummy",
              "env_param_required": true,
              "columns": [
                "ec2_launch_template_name",
                "ec2_launch_template_id",
                "default_version",
                "latest_version",
                "create_time"
              ],
              "title": "EC2 Launch Templates",
              "description": "This list only includes existing Launch Templates",
              "submit": "Continue",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Form",
              "id": "ec2_list_launch_templates",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Submit",
                  "command": {
                    "phase": "ec2",
                    "command": "enable_trend",
                    "target": "launch_template"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_launch_template_name",
                  "label": "EC2 Launch Template Name",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ec2_launch_template_id",
                  "label": "EC2 Launch Template ID",
                  "help": "",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 50
        },
        {
          "type": "Theia::Action",
          "label": "Auto Scaling Groups",
          "id": "asg",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "asg",
              "datasource": "data?type=metadata&filter_name=module&filter_value=asg",
              "env_param_required": true,
              "columns": [
                "name",
                "asg_launch_template_name",
                "asg_launch_template_version",
                "asg_instance_type",
                "asg_ami_id",
                "asg_placement_group_name",
                "asg_placement_group_strategy",
                "asg_vpc_zone_identifier",
                "asg_desired_capacity",
                "asg_min_size",
                "asg_max_size",
                "timestamp"
              ],
              "title": "Auto Scaling Groups",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "asg",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "asg",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_launch_template_name",
                  "cli_id": "launch_template_name",
                  "label": "Launch Template Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_launch_template_version",
                  "cli_id": "launch_template_version",
                  "label": "Launch Template Version",
                  "inputType": "text",
                  "default": "$Latest"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_instance_type",
                  "cli_id": "instance_type",
                  "label": "EC2 Instance Type",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_ami_id",
                  "cli_id": "ami_id",
                  "label": "AMI ID",
                  "help": "RapidCLoud currently only supports Amazon Linux based AMIs. Default is 'ami-0022f774911c1d690', Amazon Linux 2 Kernel 5.10 AMI 2.0.20220426.0 x86_64 HVM gp2",
                  "default": "ami-0022f774911c1d690",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_placement_group_name",
                  "cli_id": "placement_group_name",
                  "label": "Placement Group Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "asg_placement_group_strategy",
                  "cli_id": "placement_group_strategy",
                  "label": "Placement Group Strategy",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Cluster",
                      "value": "cluster"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Partition",
                      "value": "partition"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Spread",
                      "value": "spread"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "asg_vpc_zone_identifier",
                  "cli_id": "vpc_zone_identifier",
                  "label": "Subnets",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_desired_capacity",
                  "cli_id": "desired_capacity",
                  "label": "Desired Capacity",
                  "help": "The number of EC2 instances running in the group",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_min_size",
                  "cli_id": "min_size",
                  "label": "Min Size",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "asg_max_size",
                  "cli_id": "max_size",
                  "label": "Max Size",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 60,
          "info": "### AutoScaling Groups\n\n\n\nAn Auto Scaling group is a logical grouping of EC2 instances that manages automatic scaling\n\n\n\n**Launch Template Name**\n\n\n\nA Launch Template specifies the necessary information to configure the EC2 instances in the ASG\n\n\n\n**Launch Template Version**\n\n\n\nThe version of the launch template to use, defaults to $Latest\n\n\n\n**Instance Type**\n\n\n\nThe instance type to use for your instance, defaults to `t2.micro`.\n\nView available instance types [here](https://aws.amazon.com/ec2/instance-types)\n\n\n\n**AMI ID**\n\n\n\nThe Amazon Machine Image to use for the EC2 instances in the ASG\n\n\n\n**Placement Group Name**\n\n\n\nThe name of the placement group into which you'll launch your instances\n\n\n\n**Placement Group Strategy**\n\n\n\nThe placement strategy, allowed values are (cluster | partition | spread).\n\nFind more information [here](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html)\n\n\n\n**Subnets**\n\n\n\nA comma-separated list of subnet IDs to attach to the LB\n\n\n\n**Desired Capacity**\n\n\n\nThe number of Amazon EC2 instances that should be running in the ASG\n\n\n\n**Min Size**\n\n\n\nThe minimum size of the Auto Scaling Group\n\n\n\n**Max Size**\n\n\n\nThe maximum size of the Auto Scaling Group"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Containers",
      "route": "containers",
      "id": "containers",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Elastic Container Registry",
          "id": "ecr",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ecr",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ecr",
              "env_param_required": true,
              "columns": [
                "name",
                "ecr_image_tag_mutability",
                "ecr_scan_on_push",
                "ecr_encryption_type",
                "ecr_kms_key",
                "timestamp"
              ],
              "title": "Elastic Container Registry",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ecr",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "ecr",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecr_image_tag_mutability",
                  "cli_id": "image_tag_mutability",
                  "label": "Image Tag Mutability",
                  "help": "Prevent image tags from being overwritten",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "MUTABLE",
                      "value": "MUTABLE"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "IMMUTABLE",
                      "value": "IMMUTABLE"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "ecr_scan_on_push",
                  "cli_id": "scan_on_push",
                  "label": "Scan Images on Push"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecr_encryption_type",
                  "cli_id": "encryption_type",
                  "label": "Encryption Type",
                  "default": "AES256",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "AES256",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "AES256",
                        "disableControls": [
                          "ecr_kms_key"
                        ]
                      }
                    },
                    {
                      "type": "Theia::Option",
                      "label": "KMS",
                      "value": {
                        "type": "Theia::DataOption",
                        "value": "KMS",
                        "enableControls": [
                          "ecr_kms_key"
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecr_kms_key",
                  "cli_id": "kms_key",
                  "label": "KMS Key",
                  "help": "KMS Key ARN. If not specified, uses the default AWS managed key for ECR.",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### Elastic Container Registry\n\n\n\nECR is an AWS managed container image registry\n\n\n\n**Name**\n\n\n\nRepository name, will be prefixed with your RapidCloud environment name\n\n\n\n**Image Tag Mutability**\n\n\n\nPrevent image tags from being overwritten, allowed values are `(MUTABLE | IMMUTABLE)`\n\n\n\n**Scan Images on Push**\n\n\n\nIdentify software vulnerabilities in your container images on image push. Scanning can still be performed manually if set to false.\n\n\n\n**Encryption Type**\n\n\n\nThe encryption type to use for the repository, defaults to `AES256`. allowed values are `(AES256 | KMS)`.\n\n\n\n**KMS Key**\n\n\n\nThe KMS Key ARN to use when the selected encryption type is `KMS`. If no KMS Key is provided then the default AWS managed key for ECR will be used."
        },
        {
          "type": "Theia::Action",
          "label": "AWS ECS",
          "id": "ecs",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "ecs",
              "datasource": "data?type=metadata&filter_name=module&filter_value=ecs",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp",
                "ecs_image_url",
                "ecs_image_tag",
                "ecs_task_cpu_units",
                "ecs_task_memory",
                "ecs_container_cpu_units",
                "ecs_container_memory",
                "ecs_open_ports",
                "ecs_task_role_arn",
                "ecs_desired_count",
                "ecs_assign_public_ip",
                "ecs_subnet_ids",
                "ecs_security_groups",
                "ecs_environment_variables"
              ],
              "title": "AWS ECS",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "ecs",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Create",
                  "command": {
                    "phase": "ecs",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_image_url",
                  "cli_id": "image_url",
                  "label": "Image URL",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_image_tag",
                  "cli_id": "image_tag",
                  "label": "Image Tag",
                  "inputType": "text",
                  "default": "latest"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_task_cpu_units",
                  "cli_id": "task_cpu_units",
                  "label": "Task CPU Units",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_task_memory",
                  "cli_id": "task_memory",
                  "label": "Task Memory (MiB)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_container_cpu_units",
                  "cli_id": "container_cpu_units",
                  "label": "Container CPU Units",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_container_memory",
                  "cli_id": "container_memory",
                  "label": "Container Memory (MiB)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_open_ports",
                  "cli_id": "open_ports",
                  "label": "Open Ports",
                  "help": "Comma-Separated List of Ports to Make Available",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_desired_count",
                  "cli_id": "desired_count",
                  "label": "Desired Task Count",
                  "help": "Number of Task Instances Desired",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_task_role_arn",
                  "cli_id": "task_role_arn",
                  "label": "Task Role ARN",
                  "help": "If Blank, RapidCloud Will Create an Empty Role",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "ecs_assign_public_ip",
                  "cli_id": "assign_public_ip",
                  "label": "Assign Public IP?"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecs_subnet_ids",
                  "cli_id": "subnet_ids",
                  "label": "Subnet IDs",
                  "help": "Comma-Separated List of Subnets to Associate",
                  "datasource": "formdata_from_aws?type=subnets"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "ecs_security_groups",
                  "cli_id": "security_groups",
                  "label": "Security Groups",
                  "help": "Comma-Separated List of Security Groups to Associate",
                  "datasource": "formdata_from_aws?type=vpc_security_groups"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "ecs_environment_variables",
                  "cli_id": "environment_variables",
                  "label": "Environment Variables",
                  "help": "Comma-Separated List of Key/Value Pairs (foo=bar, env=test)",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### Elastic Container Service\n\n\n\nECS is a fully managed container orchestration service that makes it easy for you to deploy, manage, and scale containerized applications\n\n\n\n**Image URL**\n\n\n\nThe location of the image you're deploying\n\n\n\n**Image Tag**\n\n\n\nThe tag of the image you're deploying, defaults to `latest`\n\n\n\n**Enable Container Insights**\n\n\n\nContainer Insights collects metrics at the cluster, task and service levels. It also provides diagnostic information, such as container restart failures, to help you isolate issues and resolve them quickly.\n\n\n\n**Task CPU Units**\n\n\n\nThe hard limit of CPU units to present for the task, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size)\n\n\n\n**Task Memory**\n\n\n\nThe hard limit of memory (in MiB) to present to the task, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size)\n\n\n\n**Container CPU Units**\n\n\n\nThe number of cpu units the Amazon ECS container agent reserves for the container, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definition_environment)\n\n\n\n**Container Memory**\n\n\n\nThe amount (in MiB) of memory to present to the container, view more information [here](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#standard_container_definition_params)\n\n\n\n**Open Ports**\n\n\n\nSpecify which ports to make available in your ECS service\n\n\n\n**Desired Count**\n\n\n\nNumber of task instances desired\n\n\n\n**Task Role ARN**\n\n\n\nARN of IAM Role to attach to task. If left blank, RapidCloud will create an empty role\n\n\n\n**Assign Public IP**\n\n\n\nWhether to assign a public IP address to the ENI\n\n\n\n**Subnet IDs**\n\n\n\nComma-separated list of subnets to associate\n\n\n\n**Security Groups**\n\n\n\nComma-separated list of security groups to associate\n\n\n\n**Environment Variables**\n\n\n\nComma-separated list of key/value pairs. E.g. env=dev, name=my-ecs-service"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Content Delivery",
      "route": "networking",
      "id": "networking",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Route 53",
          "id": "route53",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "route53",
              "datasource": "data?type=metadata&filter_name=module&filter_value=route53",
              "env_param_required": true,
              "columns": [
                "route53_record_name",
                "timestamp",
                "route53_record_type",
                "route53_zone_id",
                "route53_ttl",
                "route53_record_list"
              ],
              "title": "Route 53",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "route53",
              "title": "Route 53 Record",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Add Record",
                  "command": {
                    "phase": "route53",
                    "command": "add_record",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_record_name",
                  "cli_id": "record_name",
                  "label": "Record Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_record_type",
                  "cli_id": "record_type",
                  "label": "Record Type",
                  "help": "Valid values are: A",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_zone_id",
                  "cli_id": "zone_id",
                  "label": "Hosted Zone ID",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_ttl",
                  "cli_id": "ttl",
                  "label": "Record TTL (seconds)",
                  "inputType": "text",
                  "help": "TTL defaults to 300"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "route53_record_list",
                  "cli_id": "record_list",
                  "label": "Records List",
                  "inputType": "text",
                  "help": "Comma-separated list of records"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### AWS Route 53\n\n\n\nAmazon Route 53 is a highly available and scalable DNS web service\n\n\n\n**Record Name**\n\n\n\nThe name of the record\n\n\n\n**Record Type**\n\n\n\nThe record type. Valid values are: `A`\n\n\n\n**Hosted Zone ID**\n\n\n\nHosted zone ID for a Route 53 record\n\n\n\n**TTL**\n\n\n\nThe TTL of the record. (Default is 300)\n\n\n\n**Record List**\n\n\n\nComma-separated list of records"
        },
        {
          "type": "Theia::Action",
          "label": "Cloudfront Distribution",
          "id": "cloudfront",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "cloudfront",
              "datasource": "data?type=metadata&filter_name=module&filter_value=cloudfront",
              "env_param_required": true,
              "columns": [
                "name",
                "timestamp",
                "cloudfront_bucket_name",
                "cloudfront_bucket_regional_domain_name",
                "cloudfront_origin_id"
              ],
              "title": "Cloudfront Distributions",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "cloudfront",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Register",
                  "command": {
                    "phase": "cloudfront",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cloudfront_bucket_name",
                  "cli_id": "bucket_name",
                  "label": "Bucket Name",
                  "help": "Bucket that CloudFront will route requests to",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cloudfront_bucket_regional_domain_name",
                  "cli_id": "bucket_regional_domain_name",
                  "label": "DNS Name",
                  "help": "The DNS domain name of the S3 bucket or web site of your custom origin",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "cloudfront_origin_id",
                  "cli_id": "origin_id",
                  "label": "Origin ID",
                  "help": "A unique identifier for the origin",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Cloudfront Distribution\n\n\n\nAmazon CloudFront is a web service that speeds up distribution of your static/dynamic web content and image files to your users\n\n\n\n**Bucket Name**\n\n\n\nThe S3 bucket that you want CloudFront to route requests to when a request matches the path pattern for the default cache behavior\n\n\n\n**DNS Name**\n\n\n\nThe DNS domain name of either the S3 bucket, or web site of your custom origin\n\n\n\n**Origin ID**\n\n\n\nA unique identifier for your origin"
        },
        {
          "type": "Theia::Action",
          "label": "Load Balancers",
          "id": "lb",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "lb",
              "datasource": "data?type=metadata&filter_name=module&filter_value=lb",
              "env_param_required": true,
              "columns": [
                "name",
                "lb_is_internal",
                "lb_type",
                "lb_subnets",
                "timestamp"
              ],
              "title": "Load Balancers",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "lb",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "lb",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Load Balancer Name. Up to 26 characters.",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "lb_is_internal",
                  "cli_id": "is_internal",
                  "label": "Internal?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "lb_type",
                  "cli_id": "type",
                  "label": "Load Balancer Type",
                  "help": "",
                  "default": "application",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "Application",
                      "value": "application"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "Network",
                      "value": "network"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "lb_subnets",
                  "cli_id": "subnets",
                  "label": "Subnets",
                  "help": "",
                  "datasource": "formdata_from_aws?type=subnets"
                }
              ]
            }
          ],
          "order": 30,
          "info": "### Elastic Load Balancer\n\n\n\nElastic Load Balancing automatically distributes incoming application traffic across multiple targets and virtual appliances in one or more Availability Zones\n\n\n\n**Name**\n\n\n\nThe name of your load balancer\n\n\n\n**Is Internal**\n\n\n\nSpecifies whether your load balancer should be internet-facing\n\n\n\n**Type**\n\n\n\nAllowed values are `(application | network)`, defaults to `application`\n\n\n\n**Subnets**\n\n\n\nA comma-separated list of subnet IDs to attach to the LB\n"
        },
        {
          "type": "Theia::Action",
          "label": "REST APIs",
          "id": "api_create",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "api_create",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=api,create",
              "env_param_required": true,
              "columns": [
                "name",
                "api_disable_execute_api_endpoint",
                "api_endpoint_type",
                "timestamp"
              ],
              "title": "REST APIs",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "api_create",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "create",
                  "command": {
                    "phase": "api",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "api_disable_execute_api_endpoint",
                  "cli_id": "disable_execute_api_endpoint",
                  "label": "Disable Default Endpoint?",
                  "help": ""
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_endpoint_type",
                  "cli_id": "endpoint_type",
                  "label": "Endpoint Type",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "EDGE",
                      "value": "EDGE"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "REGIONAL",
                      "value": "REGIONAL"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PRIVATE",
                      "value": "PRIVATE"
                    }
                  ]
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### API Create\n\n\n\n**Name**\n\n\n\nName of your API\n\n\n\n**Disable Execute API Endpoint**\n\n\n\nDisable the default API Gateway endpoint, defaults to false\n\n\n\n**Endpoint Type**\n\n\n\nRefers to the hostname of the API and can be edge-optimized, regional, or private, depending on where the majority of your API traffic originates from. See more information [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-endpoint-types.html).\n"
        },
        {
          "type": "Theia::Action",
          "label": "API Lambda Integrations",
          "id": "api_add_lambda_integration",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "api_add_lambda_integration",
              "datasource": "data?type=metadata&filter_name=command&filter_value=add_lambda_integration",
              "env_param_required": true,
              "columns": [
                "name",
                "api_parent_resource_name",
                "api_rest_api_name",
                "timestamp"
              ],
              "title": "API Lambda Integrations",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "api_add_lambda_integration",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Save",
                  "command": {
                    "phase": "api",
                    "command": "add_lambda_integration",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Resource Name",
                  "help": "creates new API resource if it does not exist",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "api_parent_resource_name",
                  "cli_id": "parent_resource_name",
                  "label": "Parent Resource Name",
                  "default": "root",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_rest_api_name",
                  "cli_id": "rest_api_name",
                  "label": "REST API",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=api,create&field=name"
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_http_method",
                  "cli_id": "http_method",
                  "label": "HTTP Method",
                  "options": [
                    {
                      "type": "Theia::Option",
                      "label": "GET",
                      "value": "GET"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "POST",
                      "value": "POST"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PUT",
                      "value": "PUT"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "PATCH",
                      "value": "PATCH"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "DELETE",
                      "value": "DELETE"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "HEAD",
                      "value": "HEAD"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "OPTIONS",
                      "value": "OPTIONS"
                    },
                    {
                      "type": "Theia::Option",
                      "label": "ANY",
                      "value": "ANY"
                    }
                  ]
                },
                {
                  "type": "Theia::Control::Select",
                  "id": "api_lambda_name",
                  "cli_id": "lambda_name",
                  "label": "Lambda Integration",
                  "datasource": "formdata?type=metadata&filter_name=module&filter_value=lambda&field=name"
                }
              ]
            }
          ],
          "order": 1000,
          "info": "### API Add Lambda Integration\n\n\n\n**Name**\n\n\n\nAPI Resource Name to create integration for\n\n\n\n**Parent Resource Name**\n\n\n\nIf this is a subresource, specify the name of its parent resource here. If not, leave the default of 'root'\n\n\n\n**Rest API Name**\n\n\n\nName of the REST API that this integration belongs to\n\n\n\n**HTTP Method**\n\n\n\nThe HTTP method for this integration\n\n\n\n**Lambda Name**\n\n\n\nName of the lambda function to handle this integration\n"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Storage",
      "route": "storage",
      "id": "storage",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "S3",
          "id": "s3_create_bucket",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "s3_create_bucket",
              "datasource": "metadata/s3?type=aws_infra&filter_name=resource_type&filter_value=s3_bucket",
              "env_param_required": true,
              "columns": [
                "bucket",
                "name",
                "timestamp"
              ],
              "title": "S3 Buckets",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "s3_create_bucket",
              "title": "",
              "description": "",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to continue?",
                  "new_hide": true,
                  "command": {
                    "phase": "s3",
                    "command": "enable_trend"
                  }
                },
                {
                  "label": "Create Bucket",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to create a bucket?",
                  "editable_hide": true,
                  "command": {
                    "phase": "s3",
                    "command": "create_bucket",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Name",
                  "help": "Do not prefix with environment name. It will be added automatically by RapidCloud",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "bucket",
                  "label": "Bucket Name",
                  "inputType": "text",
                  "readonly": true
                }
              ]
            }
          ],
          "order": 5,
          "info": "### This file is optional\n\n\n\nUse it to provide help screen for the module. If not needed, remove this file"
        },
        {
          "type": "Theia::Action",
          "label": "FSx for Windows",
          "id": "fsx",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "fsx",
              "datasource": "data?type=metadata&filter_name=module&filter_value=fsx",
              "env_param_required": true,
              "columns": [
                "name",
                "fsx_ad_service_name",
                "fsx_storage_capacity",
                "fsx_throughput_capacity",
                "timestamp"
              ],
              "title": "FSx for Windows",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "fsx",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "fsx",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_ad_service_name",
                  "cli_id": "ad_service_name",
                  "label": "AD Service Name",
                  "help": "Directory FQN (corp.example.com)",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_ad_admin_password",
                  "cli_id": "ad_admin_password",
                  "label": "AD Admin Password",
                  "inputType": "password"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_storage_capacity",
                  "cli_id": "storage_capacity",
                  "label": "Storage Capacity",
                  "help": "(GiB) minimum of 32 and maximum of 65536",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "fsx_throughput_capacity",
                  "cli_id": "throughput_capacity",
                  "label": "Throughput Capacity",
                  "help": "Throughput (MB/s) of the file system in power of 2 increments, minimum of 8 and maximum of 2048",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 10,
          "info": "### FSx Windows File System\n\n\n\nAWS-managed Microsoft Windows file servers, backed by a fully native Windows file system\n\n\n\n**Name**\n\n\n\nThe name of the resource\n\n\n\n**AD Service Name**\n\n\n\nThe fully qualified name for the directory, such as `corp.example.com`\n\n\n\n**AD Admin Password**\n\n\n\nThe password for the directory administrator\n\n\n\n**Storage Capacity**\n\n\n\nStorage capacity (GiB) of the file system, must be between 32 and 65536\n\n\n\n**Throughput Capacity**\n\n\n\nThroughput (MB/s) of the file system in power of 2 increments, must be between 8 and 2048"
        },
        {
          "type": "Theia::Action",
          "label": "EFS",
          "id": "efs",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "efs",
              "datasource": "data?type=metadata&filter_name=module&filter_value=efs",
              "env_param_required": true,
              "columns": [
                "name",
                "efs_encrypted",
                "timestamp"
              ],
              "title": "EFS (Managed File Storage for EC2)",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "efs",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this item?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Create",
                  "command": {
                    "phase": "efs",
                    "command": "create",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "cli_id": "name",
                  "label": "Name",
                  "help": "Name",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "efs_encrypted",
                  "cli_id": "encrypted",
                  "label": "Encrypted?",
                  "help": ""
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Amazon Elastic File System\n\n\n\nAmazon Elastic File System is a cloud storage service that provides scalable, elastic, and encrypted file storage\n\n\n\n**Encrypted**\n\n\n\nIf true, the disk will be encrypted"
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Deploy",
      "route": "deploy",
      "id": "deploy",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Terraform Actions",
          "id": "init",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "init",
              "title": "Terraform Actions",
              "allowMarkdown": true,
              "description": "**Generate Terraform Modules**\n\n\n\nThis runs `kc tf init`, which in turn executes `terraform init`. Hang on ... this may take a minute. You can view the log in the terminal window. Generated terraform modules for your environment will be saved in `kc-rapid-cloud/terraform/{env}` directory\n\n\n\n**Generate Terraform Deployment Plan**\n\n\n\nThis runs `kc tf plan`, which in turn executes `terraform plan`. Hang on ... this may take a few minutes. You can view the log in the terminal window. Terraform plan will be saved in `kc-rapid-cloud/terraform/{env}/plan.log`\n\n\n\n**Apply Terraform Plan - Deploy Infrastructure**\n\n\n\nThis runs `kc tf apply`, which in turn executes `terraform apply`. Hang on ... this may take a while, depending on your environment complexity. \n\n\n\n_**We recommend running this from your RapidCloud terminal, to see the progress, instead of running via console.**_\n\n\n\n**Destroy Current Environment Infrastructure**\n\n\n\nThis runs `kc tf destroy`, which in turn executes `terraform destroy`. Hang on ... this may take a few minutes. \n\n\n\n_**Note: S3 buckets wich are not empty will not be deleted. You must empty the buckets first.**_\n\n\n\n\n\n\n",
              "submit": "Submit",
              "commands": [
                {
                  "label": "terraform init",
                  "command": {
                    "phase": "tf",
                    "command": "init"
                  }
                },
                {
                  "label": "terraform plan",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to run terraform planfor this environment? This may take a few minutes. You can view the log in the terminal window.",
                  "command": {
                    "phase": "tf",
                    "command": "plan"
                  }
                },
                {
                  "label": "terraform apply",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to deploy infrastucture changes to your environment? This may take a while. You can view the log in the terminal window.",
                  "command": {
                    "phase": "tf",
                    "command": "apply",
                    "refresh_status": true
                  }
                },
                {
                  "label": "terraform destroy",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to destroy all infrastucture components for current environment? This may take a while. You can view the log in the terminal window.",
                  "command": {
                    "phase": "tf",
                    "command": "destroy",
                    "refresh_status": true
                  }
                }
              ]
            }
          ],
          "order": 20
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Pause & Resume",
      "route": "workload",
      "id": "workload",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Settings",
          "id": "workload_enable_pause",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "workload_enable_pause",
              "title": "Workload Pause/Resume Settings",
              "description": "Enable pause and resume functionality for the following AWS resources",
              "env_param_required": true,
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=workload,enable_pause",
              "submit": "Submit",
              "commands": [
                {
                  "label": "Save Settings",
                  "command": {
                    "phase": "workload",
                    "command": "enable_pause",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_instance",
                  "label": "Enable Stop/Start EC2 Instances (aws_instance)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_autoscaling_group",
                  "label": "Enable Downsize/Upsize Auto Scaling Groups (aws_autoscaling_group)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_ecs_cluster",
                  "label": "Enable Downsize/Upsize ECS Fargate Cluster (aws_ecs_cluster)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_db_instance",
                  "label": "Enable Start/Stop RDS Instances (aws_db_instance)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_rds_cluster",
                  "label": "Enable Start/Stop Aurora Clusters, including read replica (aws_rds_cluster)"
                },
                {
                  "type": "Theia::Control::Toggle",
                  "id": "workload_module_aws_redshift_cluster",
                  "label": "Enable Pause/Resume Redshift Clusters (aws_redshift_cluster)"
                }
              ]
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "Schedule",
          "id": "workload_schedule",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "workload_schedule",
              "datasource": "data?type=metadata&filter_name=module,command&filter_value=workload,schedule",
              "env_param_required": true,
              "columns": [
                "name",
                "workload_resource_type",
                "workload_schedule_description",
                "workload_scheduled_pause",
                "workload_scheduled_resume",
                "timestamp"
              ],
              "title": "Workload Pause/Resume Schedules",
              "description": "",
              "submit": "Continue"
            },
            {
              "type": "Theia::Step::Form",
              "id": "workload_schedule",
              "title": "",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "Remove",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to remove this schedule?",
                  "command": {
                    "phase": "undo-command"
                  },
                  "new_hide": true
                },
                {
                  "label": "Schedule",
                  "command": {
                    "phase": "workload",
                    "command": "schedule",
                    "refresh_status": true
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::Input",
                  "id": "name",
                  "label": "Schedule Name",
                  "help": "Up to 12 characters, no spaces",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload_schedule_description",
                  "label": "Schedule Description",
                  "help": "",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "workload_resource_type",
                  "label": "Resource Types to Pause",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=workload,enable_pause&field_prefix=workload_module_"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload_scheduled_pause",
                  "label": "Enter cron expression to schedule workload pause",
                  "help": "Example: pause every weekday at 7 PM EST => `0 0 ? * MON-FRI *`",
                  "inputType": "text"
                },
                {
                  "type": "Theia::Control::Input",
                  "id": "workload_scheduled_resume",
                  "label": "Enter cron expression to schedule workload resume",
                  "help": "Example: resume every weekday at 7 AM EST => `0 12 ? * MON-FRI *`",
                  "inputType": "text"
                }
              ]
            }
          ],
          "order": 20,
          "info": "### Workload Schedule\n\n\n\nUse this page to schedule pause and resume times for your workload. You can create multiple schedules to fit your requirements.\n\n\n\nFor example, separate schedule for compute resources vs database resources. Or different schedule for weekdays vs weekends.\n\n\n\n**Schedule Name**\n\n\n\nShort identifier for this schedule. Up to 12 characters, no spaces.\n\n\n\n**Schedule Description**\n\n\n\nSchedule description\n\n\n\n**Resource Types to Pause**\n\n\n\nOne or more resource types to be paused/resumed on this schedule\n\n\n\n\n\n**Enter cron expression to schedule workload pause**\n\n\n\n_Example:_ pause every weekday at 7 PM EST => `0 0 ? * MON-FRI *`\n\n\n\n**Enter cron expression to schedule workload resume**\n\n\n\n_Example:_ resume every weekday at 7 AM EST => `0 12 ? * MON-FRI *`\n"
        },
        {
          "type": "Theia::Action",
          "label": "Status",
          "id": "workload_status",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "workload_status",
              "datasource": "workload/status?extra=true",
              "env_param_required": true,
              "columns": [
                "service",
                "res_type",
                "status",
                "arn"
              ],
              "title": "Workload Status for Paused/Resumed Resources",
              "description": "",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "workload_status",
              "title": "",
              "description": ""
            }
          ],
          "order": 25
        },
        {
          "type": "Theia::Action",
          "label": "Pause",
          "id": "workload_pause",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "workload_pause",
              "title": "Pause Workload Resources",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "pause",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to pause selected resource types right now?",
                  "command": {
                    "phase": "workload",
                    "command": "pause"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "workload_resource_type",
                  "label": "Resource Types to Pause",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=workload,enable_pause&field_prefix=workload_module_"
                }
              ]
            }
          ],
          "order": 30
        },
        {
          "type": "Theia::Action",
          "label": "Resume",
          "id": "workload_resume",
          "steps": [
            {
              "type": "Theia::Step::Form",
              "id": "workload_resume",
              "title": "Resume Workload Resources",
              "description": "",
              "submit": "Submit",
              "not_editable": true,
              "commands": [
                {
                  "label": "resume",
                  "require_confirmation": true,
                  "confirmation_message": "Are you sure you want to resume selected resource types right now?",
                  "command": {
                    "phase": "workload",
                    "command": "resume"
                  }
                }
              ],
              "controls": [
                {
                  "type": "Theia::Control::MultiSelect",
                  "id": "workload_resource_type",
                  "label": "Resource Types to Resume",
                  "help": "",
                  "datasource": "formdata?type=metadata&filter_name=module,command&filter_value=workload,enable_pause&field_prefix=workload_module_"
                }
              ]
            }
          ],
          "order": 40
        }
      ]
    },
    {
      "type": "Theia::Section",
      "label": "Logs",
      "route": "logs",
      "id": "logs",
      "enabled": true,
      "actions": [
        {
          "type": "Theia::Action",
          "label": "Command History",
          "id": "history",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "history",
              "datasource": "data?type=command_history",
              "env_param_required": true,
              "columns": [
                "phase",
                "command",
                "_id",
                "timestamp",
                "user"
              ],
              "title": "Command History",
              "description": "This is a list of all commands executed for current environment. Command structure is <br/><strong>`kc &lt;phase&gt; &lt;command&gt; &lt;arguments&gt;`</strong>",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "history",
              "title": "",
              "description": ""
            }
          ],
          "order": 5
        },
        {
          "type": "Theia::Action",
          "label": "CDC log",
          "id": "cdc_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "cdc_log",
              "datasource": "data?type=cdc_log",
              "env_param_required": true,
              "columns": [
                "status",
                "cdc_timestamp",
                "job_name",
                "dataset_name"
              ],
              "title": "CDC log",
              "description": "Log of Lambda Function executions to apply CDC to raw bucket",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "cdc_log",
              "title": "CDC Log",
              "description": ""
            }
          ],
          "order": 10
        },
        {
          "type": "Theia::Action",
          "label": "Transform log",
          "id": "transform_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "transform_log",
              "datasource": "data?type=transform_log",
              "env_param_required": true,
              "columns": [
                "status",
                "update_timestamp",
                "job_name",
                "dataset_name"
              ],
              "title": "Transform log",
              "description": "Log of Transformation Glue job executions",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "transform_log",
              "title": "Transform Log",
              "description": ""
            }
          ],
          "order": 20
        },
        {
          "type": "Theia::Action",
          "label": "Publish log",
          "id": "publish_log",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "publish_log",
              "datasource": "data?type=publish_log",
              "env_param_required": true,
              "columns": [
                "status",
                "update_timestamp",
                "job_name",
                "dataset_name"
              ],
              "title": "Publish log",
              "description": "Log of Publish Glue job executions",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "publish_log",
              "title": "Publish log",
              "description": ""
            }
          ],
          "order": 30
        },
        {
          "type": "Theia::Action",
          "label": "DMS Replication Tracker",
          "id": "cdc_tracker",
          "steps": [
            {
              "type": "Theia::Step::Grid",
              "id": "cdc_tracker",
              "datasource": "data?type=cdc_tracker",
              "env_param_required": true,
              "columns": [
                "task_status",
                "dms_task_id",
                "cdc_start_timestamp",
                "cdc_end_timestamp"
              ],
              "title": "DMS Replication Tracker",
              "description": "Timestamp based DMS Replication Tracker",
              "hide_add": true
            },
            {
              "type": "Theia::Step::Json",
              "id": "cdc_tracker",
              "title": "DMS CDC Tracker",
              "description": ""
            }
          ],
          "order": 40
        }
      ]
    }
  ]
}
