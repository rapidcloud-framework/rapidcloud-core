data "archive_file" "{{ profile }}_{{ resource_name }}_lambda_archive" {
  type        = "zip"
  output_path = "./lambda_zip/{{ resource_name }}.zip"
  {% if params['source_path'] is defined %}
  source_dir  = "../../lambda/{{ params['source_path'] }}"
  {% else %}
  source_dir  = "../../lambda/{{ resource_name }}"
  {% endif %}
}

module "{{ profile }}_{{ resource_name }}_{{ resource_type }}" {
  source = "../modules/{{ resource_type }}"
  kms_key_arn          = aws_kms_key.{{ profile }}.arn
  lambda_function_name = "{{ profile }}_{{ resource_name }}"
  description = "{{ profile }}_{{ resource_name }} lambda function"
  # lambda_iam_role      = module.{{ profile }}_lambda.arn
  {% if params['role_name'] is defined %}
  lambda_iam_role = module.{{ profile }}_theia_roles.{{ params['role_name'] }}_lambda_role_arn
  {% else %}
  lambda_iam_role = module.{{ profile }}_lambda.arn
  {% endif %}
  handler              = "main.lambda_handler"

  {% if params['runtime'] is defined %}
    runtime              = "{{ params['runtime'] }}"
  {% else %}
    runtime = "python3.8"
  {% endif %}

  filename             = "./lambda_zip/{{ resource_name }}.zip"
  {% if params['immutable'] is defined and params['immutable'] == "false" %}
     source_code_hash     = data.archive_file.{{ profile }}_{{ resource_name }}_lambda_archive.output_base64sha256
  {% endif %}
  {% if params['image_uri'] is defined %}
    image_uri           = "{{ params['image_uri'] }}"
  {% endif %}
  timeout              = {{ params['timeout'] | default(60) }}
  subnets              = data.aws_subnets.private.ids
  security_groups      = [module.{{ profile }}_lambda.sg_id]
  memory_size = {{ params['memory_size'] | default(128) }}

  {% if params['env_vars'] is defined %}
  lambda_env_vars = {
  {% for k, v in  params['env_vars'].items() %}
      "{{ k }}" = "{{ v }}"
  {% endfor %}
  }
  {% endif %}

  lambda_tags = {
    "Name"     = "{{ profile }}_{{ resource_name }}"
      "env" = "{{ env }}"
      "profile" = "{{ name }}"
      "workload" = "{{ workload }}"
      "client" = "{{ client }}"
      "author" = "rapid-cloud"
  }

  {% if params['layers'] is defined %}
  layers = [
  {% for k, v in params['layers'].items() %}
    {% if k == 'arn' %}
      "{{ v }}",
    {% else %}
      aws_lambda_layer_version.{{ v }}.arn,
    {% endif %}
  {% endfor %}
  ]
  {% endif %}
}

# {{ params['dms_replication_instance'] }}
#
# {{ params }}

